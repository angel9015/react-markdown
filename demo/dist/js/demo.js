/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};

/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {

/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;

/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};

/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);

/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;

/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}


/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;

/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;

/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/demo/dist";

/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("module.exports = __webpack_require__(1);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** multi main\n ** module id = 0\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///multi_main?");

/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(2);\nvar Editor = __webpack_require__(3);\nvar MarkdownControls = __webpack_require__(4);\nvar Markdown = __webpack_require__(5);\n\nvar Demo = module.exports = React.createClass({\n    displayName: 'Demo',\n\n    getInitialState: function getInitialState() {\n        return {\n            markdownSrc: ['# Live demo\\n\\nChanges are automatically rendered as you type.\\n\\n* Follows the ', '[CommonMark](http://commonmark.org/) spec\\n* Renders actual, \"native\" React DOM ', 'elements\\n* Allows you to escape or skip HTML (try toggling the checkboxes above)', '\\n* If you escape or skip the HTML, no `dangerouslySetInnerHTML` is used! Yay!\\n', '\\n## HTML block below\\n\\n<blockquote>\\n    This blockquote will change based ', 'on the HTML settings above.\\n</blockquote>\\n\\n## How about some code?\\n', '```js\\nvar React = require(\\'react\\');\\nvar Markdown = require(\\'react-markdown\\');', '\\n\\nReact.render(\\n    <Markdown source=\"# Your markdown here\" />,\\n    document.', 'getElementById(\\'content\\')\\n);\\n```\\n\\nPretty neat, eh?\\n\\n', '## More info?\\n\\n', 'Read usage information and more on [GitHub](//github.com/rexxars/react-markdown)\\n\\n', '---------------\\n\\n', 'A component by [VaffelNinja](http://vaffel.ninja) / Espen Hovlandsdal'].join(''),\n\n            htmlMode: 'raw'\n        };\n    },\n\n    onMarkdownChange: function onMarkdownChange(md) {\n        this.setState({\n            markdownSrc: md\n        });\n    },\n\n    highlightCodeBlocks: function highlightCodeBlocks() {\n        if (this.state.markdownSrc.indexOf('```') === -1) {\n            return;\n        }\n\n        var els = document.querySelectorAll('pre code');\n        for (var i = 0; i < els.length; i++) {\n            if (!els[i].classList.contains('hljs')) {\n                window.hljs.highlightBlock(els[i]);\n            }\n        }\n    },\n\n    componentDidMount: function componentDidMount() {\n        this.highlightCodeBlocks();\n    },\n\n    componentDidUpdate: function componentDidUpdate() {\n        this.highlightCodeBlocks();\n    },\n\n    onControlsChange: function onControlsChange(mode) {\n        this.setState({ htmlMode: mode });\n    },\n\n    render: function render() {\n        return React.createElement(\n            'div',\n            { className: 'demo' },\n            React.createElement(\n                'div',\n                { className: 'editor-pane' },\n                React.createElement(MarkdownControls, {\n                    onChange: this.onControlsChange,\n                    mode: this.state.htmlMode\n                }),\n                React.createElement(Editor, {\n                    value: this.state.markdownSrc,\n                    onChange: this.onMarkdownChange\n                })\n            ),\n            React.createElement(\n                'div',\n                { className: 'result-pane' },\n                React.createElement(Markdown, {\n                    className: 'result',\n                    source: this.state.markdownSrc,\n                    skipHtml: this.state.htmlMode === 'skip',\n                    escapeHtml: this.state.htmlMode === 'escape'\n                })\n            )\n        );\n    }\n});\n\nif (typeof window !== 'undefined') {\n    React.render(React.createElement(Demo, null), document.getElementById('main'));\n}\n\n/*****************\n ** WEBPACK FOOTER\n ** ./demo/src/demo.js\n ** module id = 1\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./demo/src/demo.js?");

/***/ },
/* 2 */
/***/ function(module, exports) {

	eval("module.exports = React;\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 2\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///external_%22React%22?");

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(2);\nvar CodeMirror = window.CodeMirrorEditor;\n\nmodule.exports = React.createClass({\n    displayName: 'Editor',\n\n    propTypes: {\n        onChange: React.PropTypes.func.isRequired,\n        value: React.PropTypes.string\n    },\n\n    onInputChange: function onInputChange(e) {\n        this.props.onChange(e.target.value);\n    },\n\n    render: function render() {\n        return React.createElement(\n            'form',\n            { className: 'editor pure-form' },\n            React.createElement(CodeMirror, {\n                mode: 'markdown',\n                theme: 'monokai',\n                value: this.props.value,\n                onChange: this.onInputChange\n            })\n        );\n    }\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./demo/src/editor.js\n ** module id = 3\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./demo/src/editor.js?");

/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(2);\n\nmodule.exports = React.createClass({\n    displayName: 'MarkdownControls',\n\n    propTypes: {\n        mode: React.PropTypes.string.isRequired,\n        onChange: React.PropTypes.func.isRequired\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            mode: 'raw'\n        };\n    },\n\n    onChange: function onChange(e) {\n        this.props.onChange(e.target.value);\n    },\n\n    render: function render() {\n        var rawChecked = this.props.mode === 'raw',\n            skipChecked = this.props.mode === 'skip',\n            escapeChecked = this.props.mode === 'escape';\n\n        return React.createElement(\n            'div',\n            { className: 'markdown-controls' },\n            React.createElement(\n                'form',\n                { className: 'pure-form pure-form-inline' },\n                React.createElement(\n                    'fieldset',\n                    null,\n                    React.createElement(\n                        'legend',\n                        null,\n                        'HTML mode:'\n                    ),\n                    React.createElement(\n                        'label',\n                        { htmlFor: 'raw-html', className: 'pure-checkbox' },\n                        'Raw ',\n                        React.createElement('input', {\n                            id: 'raw-html',\n                            name: 'html-mode',\n                            type: 'radio',\n                            value: 'raw',\n                            checked: rawChecked,\n                            onChange: this.onChange\n                        })\n                    ),\n                    React.createElement(\n                        'label',\n                        { htmlFor: 'escape-html', className: 'pure-checkbox' },\n                        'Escape ',\n                        React.createElement('input', {\n                            id: 'escape-html',\n                            name: 'html-mode',\n                            type: 'radio',\n                            value: 'escape',\n                            checked: escapeChecked,\n                            onChange: this.onChange\n                        })\n                    ),\n                    React.createElement(\n                        'label',\n                        { htmlFor: 'skip-html', className: 'pure-checkbox' },\n                        'Skip ',\n                        React.createElement('input', {\n                            id: 'skip-html',\n                            name: 'html-mode',\n                            type: 'radio',\n                            value: 'skip',\n                            checked: skipChecked,\n                            onChange: this.onChange\n                        })\n                    )\n                )\n            )\n        );\n    }\n});\n\n/*****************\n ** WEBPACK FOOTER\n ** ./demo/src/markdown-controls.js\n ** module id = 4\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./demo/src/markdown-controls.js?");

/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(2);\nvar Parser = __webpack_require__(6).Parser;\nvar ReactRenderer = __webpack_require__(18);\n\nvar parser = new Parser();\n\nvar ReactMarkdown = React.createClass({\n    displayName: 'ReactMarkdown',\n\n    propTypes: {\n        className: React.PropTypes.string,\n        source: React.PropTypes.string.isRequired,\n        containerTagName: React.PropTypes.string,\n        sourcePos: React.PropTypes.bool,\n        escapeHtml: React.PropTypes.bool,\n        skipHtml: React.PropTypes.bool,\n        softBreak: React.PropTypes.string,\n        highlight: React.PropTypes.func\n    },\n\n    getDefaultProps: function getDefaultProps() {\n        return {\n            containerTagName: 'div'\n        };\n    },\n\n    render: function render() {\n        var containerProps = {};\n        var renderer = new ReactRenderer(this.props);\n        var ast = parser.parse(this.props.source || '');\n\n        if (this.props.className) {\n            containerProps.className = this.props.className;\n        }\n\n        return React.createElement.apply(React, [this.props.containerTagName, containerProps].concat(renderer.render(ast)));\n    }\n});\n\nmodule.exports = ReactMarkdown;\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/react-markdown.js\n ** module id = 5\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./src/react-markdown.js?");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\n// commonmark.js - CommomMark in JavaScript\n// Copyright (C) 2014 John MacFarlane\n// License: BSD3.\n\n// Basic usage:\n//\n// var commonmark = require('commonmark');\n// var parser = new commonmark.Parser();\n// var renderer = new commonmark.HtmlRenderer();\n// console.log(renderer.render(parser.parse('Hello *world*')));\n\nmodule.exports.Node = __webpack_require__(7);\nmodule.exports.Parser = __webpack_require__(8);\nmodule.exports.HtmlRenderer = __webpack_require__(16);\nmodule.exports.XmlRenderer = __webpack_require__(17);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/index.js\n ** module id = 6\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/index.js?");

/***/ },
/* 7 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\nfunction isContainer(node) {\n    switch (node._type) {\n    case 'Document':\n    case 'BlockQuote':\n    case 'List':\n    case 'Item':\n    case 'Paragraph':\n    case 'Header':\n    case 'Emph':\n    case 'Strong':\n    case 'Link':\n    case 'Image':\n        return true;\n    default:\n        return false;\n    }\n}\n\nvar resumeAt = function(node, entering) {\n    this.current = node;\n    this.entering = (entering === true);\n};\n\nvar next = function(){\n    var cur = this.current;\n    var entering = this.entering;\n\n    if (cur === null) {\n        return null;\n    }\n\n    var container = isContainer(cur);\n\n    if (entering && container) {\n        if (cur._firstChild) {\n            this.current = cur._firstChild;\n            this.entering = true;\n        } else {\n            // stay on node but exit\n            this.entering = false;\n        }\n\n    } else if (cur === this.root) {\n        this.current = null;\n\n    } else if (cur._next === null) {\n        this.current = cur._parent;\n        this.entering = false;\n\n    } else {\n        this.current = cur._next;\n        this.entering = true;\n    }\n\n    return {entering: entering, node: cur};\n};\n\nvar NodeWalker = function(root) {\n    return { current: root,\n             root: root,\n             entering: true,\n             next: next,\n             resumeAt: resumeAt };\n};\n\nvar Node = function(nodeType, sourcepos) {\n    this._type = nodeType;\n    this._parent = null;\n    this._firstChild = null;\n    this._lastChild = null;\n    this._prev = null;\n    this._next = null;\n    this._sourcepos = sourcepos;\n    this._lastLineBlank = false;\n    this._open = true;\n    this._string_content = null;\n    this._literal = null;\n    this._listData = null;\n    this._info = null;\n    this._destination = null;\n    this._title = null;\n    this._isFenced = false;\n    this._fenceChar = null;\n    this._fenceLength = 0;\n    this._fenceOffset = null;\n    this._level = null;\n};\n\nvar proto = Node.prototype;\n\nObject.defineProperty(proto, 'isContainer', {\n    get: function () { return isContainer(this); }\n});\n\nObject.defineProperty(proto, 'type', {\n    get: function() { return this._type; }\n});\n\nObject.defineProperty(proto, 'firstChild', {\n    get: function() { return this._firstChild; }\n});\n\nObject.defineProperty(proto, 'lastChild', {\n    get: function() { return this._lastChild; }\n});\n\nObject.defineProperty(proto, 'next', {\n    get: function() { return this._next; }\n});\n\nObject.defineProperty(proto, 'prev', {\n    get: function() { return this._prev; }\n});\n\nObject.defineProperty(proto, 'parent', {\n    get: function() { return this._parent; }\n});\n\nObject.defineProperty(proto, 'sourcepos', {\n    get: function() { return this._sourcepos; }\n});\n\nObject.defineProperty(proto, 'literal', {\n    get: function() { return this._literal; },\n    set: function(s) { this._literal = s; }\n});\n\nObject.defineProperty(proto, 'destination', {\n    get: function() { return this._destination; },\n    set: function(s) { this._destination = s; }\n});\n\nObject.defineProperty(proto, 'title', {\n    get: function() { return this._title; },\n    set: function(s) { this._title = s; }\n});\n\nObject.defineProperty(proto, 'info', {\n    get: function() { return this._info; },\n    set: function(s) { this._info = s; }\n});\n\nObject.defineProperty(proto, 'level', {\n    get: function() { return this._level; },\n    set: function(s) { this._level = s; }\n});\n\nObject.defineProperty(proto, 'listType', {\n    get: function() { return this._listData.type; },\n    set: function(t) { this._listData.type = t; }\n});\n\nObject.defineProperty(proto, 'listTight', {\n    get: function() { return this._listData.tight; },\n    set: function(t) { this._listData.tight = t; }\n});\n\nObject.defineProperty(proto, 'listStart', {\n    get: function() { return this._listData.start; },\n    set: function(n) { this._listData.start = n; }\n});\n\nObject.defineProperty(proto, 'listDelimiter', {\n    get: function() { return this._listData.delimiter; },\n    set: function(delim) { this._listData.delimiter = delim; }\n});\n\nNode.prototype.appendChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._lastChild) {\n        this._lastChild._next = child;\n        child._prev = this._lastChild;\n        this._lastChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.prependChild = function(child) {\n    child.unlink();\n    child._parent = this;\n    if (this._firstChild) {\n        this._firstChild._prev = child;\n        child._next = this._firstChild;\n        this._firstChild = child;\n    } else {\n        this._firstChild = child;\n        this._lastChild = child;\n    }\n};\n\nNode.prototype.unlink = function() {\n    if (this._prev) {\n        this._prev._next = this._next;\n    } else if (this._parent) {\n        this._parent._firstChild = this._next;\n    }\n    if (this._next) {\n        this._next._prev = this._prev;\n    } else if (this._parent) {\n        this._parent._lastChild = this._prev;\n    }\n    this._parent = null;\n    this._next = null;\n    this._prev = null;\n};\n\nNode.prototype.insertAfter = function(sibling) {\n    sibling.unlink();\n    sibling._next = this._next;\n    if (sibling._next) {\n        sibling._next._prev = sibling;\n    }\n    sibling._prev = this;\n    this._next = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._next) {\n        sibling._parent._lastChild = sibling;\n    }\n};\n\nNode.prototype.insertBefore = function(sibling) {\n    sibling.unlink();\n    sibling._prev = this._prev;\n    if (sibling._prev) {\n        sibling._prev._next = sibling;\n    }\n    sibling._next = this;\n    this._prev = sibling;\n    sibling._parent = this._parent;\n    if (!sibling._prev) {\n        sibling._parent._firstChild = sibling;\n    }\n};\n\nNode.prototype.walker = function() {\n    var walker = new NodeWalker(this);\n    return walker;\n};\n\nmodule.exports = Node;\n\n\n/* Example of use of walker:\n\n var walker = w.walker();\n var event;\n\n while (event = walker.next()) {\n console.log(event.entering, event.node.type);\n }\n\n */\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/node.js\n ** module id = 7\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/node.js?");

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar Node = __webpack_require__(7);\nvar unescapeString = __webpack_require__(9).unescapeString;\n\nvar CODE_INDENT = 4;\n\nvar C_NEWLINE = 10;\nvar C_GREATERTHAN = 62;\nvar C_SPACE = 32;\nvar C_OPEN_BRACKET = 91;\n\nvar InlineParser = __webpack_require__(14);\n\nvar BLOCKTAGNAME = '(?:article|header|aside|hgroup|iframe|blockquote|hr|body|li|map|button|object|canvas|ol|caption|output|col|p|colgroup|pre|dd|progress|div|section|dl|table|td|dt|tbody|embed|textarea|fieldset|tfoot|figcaption|th|figure|thead|footer|footer|tr|form|ul|h1|h2|h3|h4|h5|h6|video|script|style)';\n\nvar HTMLBLOCKOPEN = \"<(?:\" + BLOCKTAGNAME + \"[\\\\s/>]\" + \"|\" +\n        \"/\" + BLOCKTAGNAME + \"[\\\\s>]\" + \"|\" + \"[?!])\";\n\nvar reHtmlBlockOpen = new RegExp('^' + HTMLBLOCKOPEN, 'i');\n\nvar reHrule = /^(?:(?:\\* *){3,}|(?:_ *){3,}|(?:- *){3,}) *$/;\n\nvar reMaybeSpecial = /^[#`~*+_=<>0-9-]/;\n\nvar reNonSpace = /[^ \\t\\f\\v\\r\\n]/;\n\nvar reBulletListMarker = /^[*+-]( +|$)/;\n\nvar reOrderedListMarker = /^(\\d+)([.)])( +|$)/;\n\nvar reATXHeaderMarker = /^#{1,6}(?: +|$)/;\n\nvar reCodeFence = /^`{3,}(?!.*`)|^~{3,}(?!.*~)/;\n\nvar reClosingCodeFence = /^(?:`{3,}|~{3,})(?= *$)/;\n\nvar reSetextHeaderLine = /^(?:=+|-+) *$/;\n\nvar reLineEnding = /\\r\\n|\\n|\\r/;\n\n// Returns true if string contains only space characters.\nvar isBlank = function(s) {\n    return !(reNonSpace.test(s));\n};\n\nvar tabSpaces = ['    ', '   ', '  ', ' '];\n\n// Convert tabs to spaces on each line using a 4-space tab stop.\nvar detabLine = function(text) {\n    var start = 0;\n    var offset;\n    var lastStop = 0;\n\n    while ((offset = text.indexOf('\\t', start)) !== -1) {\n        var numspaces = (offset - lastStop) % 4;\n        var spaces = tabSpaces[numspaces];\n        text = text.slice(0, offset) + spaces + text.slice(offset + 1);\n        lastStop = offset + numspaces;\n        start = lastStop;\n    }\n\n    return text;\n};\n\nvar peek = function(ln, pos) {\n    if (pos < ln.length) {\n        return ln.charCodeAt(pos);\n    } else {\n        return -1;\n    }\n};\n\n// DOC PARSER\n\n// These are methods of a Parser object, defined below.\n\n// Returns true if block ends with a blank line, descending if needed\n// into lists and sublists.\nvar endsWithBlankLine = function(block) {\n    while (block) {\n        if (block._lastLineBlank) {\n            return true;\n        }\n        var t = block.type;\n        if (t === 'List' || t === 'Item') {\n            block = block._lastChild;\n        } else {\n            break;\n        }\n    }\n    return false;\n};\n\n// Break out of all containing lists, resetting the tip of the\n// document to the parent of the highest list, and finalizing\n// all the lists.  (This is used to implement the \"two blank lines\n// break of of all lists\" feature.)\nvar breakOutOfLists = function(block) {\n    var b = block;\n    var last_list = null;\n    do {\n        if (b.type === 'List') {\n            last_list = b;\n        }\n        b = b._parent;\n    } while (b);\n\n    if (last_list) {\n        while (block !== last_list) {\n            this.finalize(block, this.lineNumber);\n            block = block._parent;\n        }\n        this.finalize(last_list, this.lineNumber);\n        this.tip = last_list._parent;\n    }\n};\n\n// Add a line to the block at the tip.  We assume the tip\n// can accept lines -- that check should be done before calling this.\nvar addLine = function() {\n    this.tip._string_content += this.currentLine.slice(this.offset) + '\\n';\n};\n\n// Add block of type tag as a child of the tip.  If the tip can't\n// accept children, close and finalize it and try its parent,\n// and so on til we find a block that can accept children.\nvar addChild = function(tag, offset) {\n    while (!this.blocks[this.tip.type].canContain(tag)) {\n        this.finalize(this.tip, this.lineNumber - 1);\n    }\n\n    var column_number = offset + 1; // offset 0 = column 1\n    var newBlock = new Node(tag, [[this.lineNumber, column_number], [0, 0]]);\n    newBlock._string_content = '';\n    this.tip.appendChild(newBlock);\n    this.tip = newBlock;\n    return newBlock;\n};\n\n// Parse a list marker and return data on the marker (type,\n// start, delimiter, bullet character, padding) or null.\nvar parseListMarker = function(ln, offset, indent) {\n    var rest = ln.slice(offset);\n    var match;\n    var spaces_after_marker;\n    var data = { type: null,\n                 tight: true,  // lists are tight by default\n                 bulletChar: null,\n                 start: null,\n                 delimiter: null,\n                 padding: null,\n                 markerOffset: indent };\n    if ((match = rest.match(reBulletListMarker))) {\n        spaces_after_marker = match[1].length;\n        data.type = 'Bullet';\n        data.bulletChar = match[0][0];\n\n    } else if ((match = rest.match(reOrderedListMarker))) {\n        spaces_after_marker = match[3].length;\n        data.type = 'Ordered';\n        data.start = parseInt(match[1]);\n        data.delimiter = match[2];\n    } else {\n        return null;\n    }\n    var blank_item = match[0].length === rest.length;\n    if (spaces_after_marker >= 5 ||\n        spaces_after_marker < 1 ||\n        blank_item) {\n        data.padding = match[0].length - spaces_after_marker + 1;\n    } else {\n        data.padding = match[0].length;\n    }\n    return data;\n};\n\n// Returns true if the two list items are of the same type,\n// with the same delimiter and bullet character.  This is used\n// in agglomerating list items into lists.\nvar listsMatch = function(list_data, item_data) {\n    return (list_data.type === item_data.type &&\n            list_data.delimiter === item_data.delimiter &&\n            list_data.bulletChar === item_data.bulletChar);\n};\n\n// Finalize and close any unmatched blocks. Returns true.\nvar closeUnmatchedBlocks = function() {\n    if (!this.allClosed) {\n        // finalize any blocks not matched\n        while (this.oldtip !== this.lastMatchedContainer) {\n            var parent = this.oldtip._parent;\n            this.finalize(this.oldtip, this.lineNumber - 1);\n            this.oldtip = parent;\n        }\n        this.allClosed = true;\n    }\n};\n\n// 'finalize' is run when the block is closed.\n// 'continue' is run to check whether the block is continuing\n// at a certain line and offset (e.g. whether a block quote\n// contains a `>`.  It returns 0 for matched, 1 for not matched,\n// and 2 for \"we've dealt with this line completely, go to next.\"\nvar blocks = {\n    Document: {\n        continue: function() { return 0; },\n        finalize: function() { return; },\n        canContain: function(t) { return (t !== 'Item'); },\n        acceptsLines: false\n    },\n    List: {\n        continue: function() { return 0; },\n        finalize: function(parser, block) {\n            var item = block._firstChild;\n            while (item) {\n                // check for non-final list item ending with blank line:\n                if (endsWithBlankLine(item) && item._next) {\n                    block._listData.tight = false;\n                    break;\n                }\n                // recurse into children of list item, to see if there are\n                // spaces between any of them:\n                var subitem = item._firstChild;\n                while (subitem) {\n                    if (endsWithBlankLine(subitem) &&\n                        (item._next || subitem._next)) {\n                        block._listData.tight = false;\n                        break;\n                    }\n                    subitem = subitem._next;\n                }\n                item = item._next;\n            }\n        },\n        canContain: function(t) { return (t === 'Item'); },\n        acceptsLines: false\n    },\n    BlockQuote: {\n        continue: function(parser) {\n            var ln = parser.currentLine;\n            if (parser.indent <= 3 &&\n                peek(ln, parser.nextNonspace) === C_GREATERTHAN) {\n                parser.offset = parser.nextNonspace + 1;\n                if (peek(ln, parser.offset) === C_SPACE) {\n                    parser.offset++;\n                }\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() { return; },\n        canContain: function(t) { return (t !== 'Item'); },\n        acceptsLines: false\n    },\n    Item: {\n        continue: function(parser, container) {\n            if (parser.blank) {\n                parser.offset = parser.nextNonspace;\n            } else if (parser.indent >=\n                       container._listData.markerOffset +\n                       container._listData.padding) {\n                parser.offset += container._listData.markerOffset +\n                    container._listData.padding;\n            } else {\n                return 1;\n            }\n            return 0;\n        },\n        finalize: function() { return; },\n        canContain: function(t) { return (t !== 'Item'); },\n        acceptsLines: false\n    },\n    Header: {\n        continue: function() {\n            // a header can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() { return; },\n        canContain: function() { return false; },\n        acceptsLines: false\n    },\n    HorizontalRule: {\n        continue: function() {\n            // an hrule can never container > 1 line, so fail to match:\n            return 1;\n        },\n        finalize: function() { return; },\n        canContain: function() { return false; },\n        acceptsLines: false\n    },\n    CodeBlock: {\n        continue: function(parser, container) {\n            var ln = parser.currentLine;\n            var indent = parser.indent;\n            if (container._isFenced) { // fenced\n                var match = (indent <= 3 &&\n                    ln.charAt(parser.nextNonspace) === container._fenceChar &&\n                    ln.slice(parser.nextNonspace).match(reClosingCodeFence));\n                if (match && match[0].length >= container._fenceLength) {\n                    // closing fence - we're at end of line, so we can return\n                    parser.finalize(container, parser.lineNumber);\n                    return 2;\n                } else {\n                    // skip optional spaces of fence offset\n                    var i = container._fenceOffset;\n                    while (i > 0 && peek(ln, parser.offset) === C_SPACE) {\n                        parser.offset++;\n                        i--;\n                    }\n                }\n            } else { // indented\n                if (indent >= CODE_INDENT) {\n                    parser.offset += CODE_INDENT;\n                } else if (parser.blank) {\n                    parser.offset = parser.nextNonspace;\n                } else {\n                    return 1;\n                }\n            }\n            return 0;\n        },\n        finalize: function(parser, block) {\n            if (block._isFenced) { // fenced\n                // first line becomes info string\n                var content = block._string_content;\n                var newlinePos = content.indexOf('\\n');\n                var firstLine = content.slice(0, newlinePos);\n                var rest = content.slice(newlinePos + 1);\n                block.info = unescapeString(firstLine.trim());\n                block._literal = rest;\n            } else { // indented\n                block._literal = block._string_content.replace(/(\\n *)+$/, '\\n');\n            }\n            block._string_content = null; // allow GC\n        },\n        canContain: function() { return false; },\n        acceptsLines: true\n    },\n    HtmlBlock: {\n        continue: function(parser) {\n            return (parser.blank ? 1 : 0);\n        },\n        finalize: function(parser, block) {\n            block._literal = block._string_content.replace(/(\\n *)+$/, '');\n            block._string_content = null; // allow GC\n        },\n        canContain: function() { return false; },\n        acceptsLines: true\n    },\n    Paragraph: {\n        continue: function(parser) {\n            return (parser.blank ? 1 : 0);\n        },\n        finalize: function(parser, block) {\n            var pos;\n            var hasReferenceDefs = false;\n\n            // try parsing the beginning as link reference definitions:\n            while (peek(block._string_content, 0) === C_OPEN_BRACKET &&\n                   (pos =\n                    parser.inlineParser.parseReference(block._string_content,\n                                                       parser.refmap))) {\n                block._string_content = block._string_content.slice(pos);\n                hasReferenceDefs = true;\n            }\n            if (hasReferenceDefs && isBlank(block._string_content)) {\n                block.unlink();\n            }\n        },\n        canContain: function() { return false; },\n        acceptsLines: true\n    }\n};\n\n// block start functions.  Return values:\n// 0 = no match\n// 1 = matched container, keep going\n// 2 = matched leaf, no more block starts\nvar blockStarts = [\n    // indented code block\n    function(parser) {\n        if (parser.indent >= CODE_INDENT) {\n            if (parser.tip.type !== 'Paragraph' && !parser.blank) {\n                // indented code\n                parser.offset += CODE_INDENT;\n                parser.closeUnmatchedBlocks();\n                parser.addChild('CodeBlock', parser.offset);\n            } else {\n                // lazy paragraph continuation\n                parser.offset = parser.nextNonspace;\n            }\n            return 2;\n        } else {\n            return 0;\n        }\n     },\n\n    // block quote\n    function(parser) {\n        if (peek(parser.currentLine, parser.nextNonspace) === C_GREATERTHAN) {\n            parser.offset = parser.nextNonspace + 1;\n            // optional following space\n            if (peek(parser.currentLine, parser.offset) === C_SPACE) {\n                parser.offset++;\n            }\n            parser.closeUnmatchedBlocks();\n            parser.addChild('BlockQuote', parser.nextNonspace);\n            return 1;\n        } else {\n            return 0;\n        }\n    },\n\n    // ATX header\n    function(parser) {\n        var match;\n        if ((match = parser.currentLine.slice(parser.nextNonspace).match(reATXHeaderMarker))) {\n            parser.offset = parser.nextNonspace + match[0].length;\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild('Header', parser.nextNonspace);\n            container.level = match[0].trim().length; // number of #s\n            // remove trailing ###s:\n            container._string_content =\n                parser.currentLine.slice(parser.offset).replace(/^ *#+ *$/, '').replace(/ +#+ *$/, '');\n            parser.offset = parser.currentLine.length;\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // Fenced code block\n    function(parser) {\n        var match;\n        if ((match = parser.currentLine.slice(parser.nextNonspace).match(reCodeFence))) {\n            var fenceLength = match[0].length;\n            parser.closeUnmatchedBlocks();\n            var container = parser.addChild('CodeBlock', parser.nextNonspace);\n            container._isFenced = true;\n            container._fenceLength = fenceLength;\n            container._fenceChar = match[0][0];\n            container._fenceOffset = parser.indent;\n            parser.offset = parser.nextNonspace + fenceLength;\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // HTML block\n    function(parser) {\n        if (reHtmlBlockOpen.test(parser.currentLine.slice(parser.nextNonspace))) {\n            parser.closeUnmatchedBlocks();\n            parser.addChild('HtmlBlock', parser.offset);\n            // don't adjust parser.offset; spaces are part of block\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // Setext header\n    function(parser, container) {\n        var match;\n        if (container.type === 'Paragraph' &&\n                   (container._string_content.indexOf('\\n') ===\n                      container._string_content.length - 1) &&\n                   ((match = parser.currentLine.slice(parser.nextNonspace).match(reSetextHeaderLine)))) {\n            parser.closeUnmatchedBlocks();\n            var header = new Node('Header', container.sourcepos);\n            header.level = match[0][0] === '=' ? 1 : 2;\n            header._string_content = container._string_content;\n            container.insertAfter(header);\n            container.unlink();\n            parser.tip = header;\n            parser.offset = parser.currentLine.length;\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // hrule\n    function(parser) {\n        if (reHrule.test(parser.currentLine.slice(parser.nextNonspace))) {\n            parser.closeUnmatchedBlocks();\n            parser.addChild('HorizontalRule', parser.nextNonspace);\n            parser.offset = parser.currentLine.length;\n            return 2;\n        } else {\n            return 0;\n        }\n    },\n\n    // list item\n    function(parser, container) {\n        var data;\n        if ((data = parseListMarker(parser.currentLine,\n                                    parser.nextNonspace, parser.indent))) {\n            parser.closeUnmatchedBlocks();\n            parser.offset = parser.nextNonspace + data.padding;\n\n            // add the list if needed\n            if (parser.tip.type !== 'List' ||\n                !(listsMatch(container._listData, data))) {\n                container = parser.addChild('List', parser.nextNonspace);\n                container._listData = data;\n            }\n\n            // add the list item\n            container = parser.addChild('Item', parser.nextNonspace);\n            container._listData = data;\n            return 1;\n        } else {\n            return 0;\n        }\n    }\n];\n\nvar findNextNonspace = function() {\n    var currentLine = this.currentLine;\n    var match = currentLine.slice(this.offset).match(reNonSpace);\n    if (match === null) {\n        this.nextNonspace = currentLine.length;\n        this.blank = true;\n    } else {\n        this.nextNonspace = this.offset + match.index;\n        this.blank = false;\n    }\n    this.indent = this.nextNonspace - this.offset;\n};\n\n// Analyze a line of text and update the document appropriately.\n// We parse markdown text by calling this on each line of input,\n// then finalizing the document.\nvar incorporateLine = function(ln) {\n    var all_matched = true;\n    var t;\n\n    var container = this.doc;\n    this.oldtip = this.tip;\n    this.offset = 0;\n    this.lineNumber += 1;\n\n    // replace NUL characters for security\n    if (ln.indexOf('\\u0000') !== -1) {\n        ln = ln.replace(/\\0/g, '\\uFFFD');\n    }\n\n    // Convert tabs to spaces:\n    ln = detabLine(ln);\n    this.currentLine = ln;\n\n    // For each containing block, try to parse the associated line start.\n    // Bail out on failure: container will point to the last matching block.\n    // Set all_matched to false if not all containers match.\n    var lastChild;\n    while ((lastChild = container._lastChild) && lastChild._open) {\n        container = lastChild;\n\n        this.findNextNonspace();\n\n        switch (this.blocks[container.type].continue(this, container)) {\n        case 0: // we've matched, keep going\n            break;\n        case 1: // we've failed to match a block\n            all_matched = false;\n            break;\n        case 2: // we've hit end of line for fenced code close and can return\n            this.lastLineLength = ln.length;\n            return;\n        default:\n            throw 'continue returned illegal value, must be 0, 1, or 2';\n        }\n        if (!all_matched) {\n            container = container._parent; // back up to last matching block\n            break;\n        }\n    }\n\n    this.allClosed = (container === this.oldtip);\n    this.lastMatchedContainer = container;\n\n    // Check to see if we've hit 2nd blank line; if so break out of list:\n    if (this.blank && container._lastLineBlank) {\n        this.breakOutOfLists(container);\n    }\n\n    var matchedLeaf = container.type !== 'Paragraph' &&\n            blocks[container.type].acceptsLines;\n    var starts = this.blockStarts;\n    var startsLen = starts.length;\n    // Unless last matched container is a code block, try new container starts,\n    // adding children to the last matched container:\n    while (!matchedLeaf) {\n\n        this.findNextNonspace();\n\n        // this is a little performance optimization:\n        if (this.indent < CODE_INDENT && !reMaybeSpecial.test(ln.slice(this.nextNonspace))) {\n            this.offset = this.nextNonspace;\n            break;\n        }\n\n        var i = 0;\n        while (i < startsLen) {\n            var res = starts[i](this, container);\n            if (res === 1) {\n                container = this.tip;\n                break;\n            } else if (res === 2) {\n                container = this.tip;\n                matchedLeaf = true;\n                break;\n            } else {\n                i++;\n            }\n        }\n\n        if (i === startsLen) { // nothing matched\n            this.offset = this.nextNonspace;\n            break;\n        }\n    }\n\n    // What remains at the offset is a text line.  Add the text to the\n    // appropriate container.\n\n   // First check for a lazy paragraph continuation:\n    if (!this.allClosed && !this.blank &&\n        this.tip.type === 'Paragraph') {\n        // lazy paragraph continuation\n        this.addLine();\n\n    } else { // not a lazy continuation\n\n        // finalize any blocks not matched\n        this.closeUnmatchedBlocks();\n        if (this.blank && container.lastChild) {\n            container.lastChild._lastLineBlank = true;\n        }\n\n        t = container.type;\n\n        // Block quote lines are never blank as they start with >\n        // and we don't count blanks in fenced code for purposes of tight/loose\n        // lists or breaking out of lists.  We also don't set _lastLineBlank\n        // on an empty list item, or if we just closed a fenced block.\n        var lastLineBlank = this.blank &&\n            !(t === 'BlockQuote' ||\n              (t === 'CodeBlock' && container._isFenced) ||\n              (t === 'Item' &&\n               !container._firstChild &&\n               container.sourcepos[0][0] === this.lineNumber));\n\n        // propagate lastLineBlank up through parents:\n        var cont = container;\n        while (cont) {\n            cont._lastLineBlank = lastLineBlank;\n            cont = cont._parent;\n        }\n\n        if (this.blocks[t].acceptsLines) {\n            this.addLine();\n        } else if (this.offset < ln.length && !this.blank) {\n            // create paragraph container for line\n            container = this.addChild('Paragraph', this.offset);\n            this.offset = this.nextNonspace;\n            this.addLine();\n        }\n    }\n    this.lastLineLength = ln.length;\n};\n\n// Finalize a block.  Close it and do any necessary postprocessing,\n// e.g. creating string_content from strings, setting the 'tight'\n// or 'loose' status of a list, and parsing the beginnings\n// of paragraphs for reference definitions.  Reset the tip to the\n// parent of the closed block.\nvar finalize = function(block, lineNumber) {\n    var above = block._parent;\n    block._open = false;\n    block.sourcepos[1] = [lineNumber, this.lastLineLength];\n\n    this.blocks[block.type].finalize(this, block);\n\n    this.tip = above;\n};\n\n// Walk through a block & children recursively, parsing string content\n// into inline content where appropriate.\nvar processInlines = function(block) {\n    var node, event, t;\n    var walker = block.walker();\n    this.inlineParser.refmap = this.refmap;\n    while ((event = walker.next())) {\n        node = event.node;\n        t = node.type;\n        if (!event.entering && (t === 'Paragraph' || t === 'Header')) {\n            this.inlineParser.parse(node);\n        }\n    }\n};\n\nvar Document = function() {\n    var doc = new Node('Document', [[1, 1], [0, 0]]);\n    return doc;\n};\n\n// The main parsing function.  Returns a parsed document AST.\nvar parse = function(input) {\n    this.doc = new Document();\n    this.tip = this.doc;\n    this.refmap = {};\n    this.lineNumber = 0;\n    this.lastLineLength = 0;\n    this.offset = 0;\n    this.lastMatchedContainer = this.doc;\n    this.currentLine = \"\";\n    if (this.options.time) { console.time(\"preparing input\"); }\n    var lines = input.split(reLineEnding);\n    var len = lines.length;\n    if (input.charCodeAt(input.length - 1) === C_NEWLINE) {\n        // ignore last blank line created by final newline\n        len -= 1;\n    }\n    if (this.options.time) { console.timeEnd(\"preparing input\"); }\n    if (this.options.time) { console.time(\"block parsing\"); }\n    for (var i = 0; i < len; i++) {\n        this.incorporateLine(lines[i]);\n    }\n    while (this.tip) {\n        this.finalize(this.tip, len);\n    }\n    if (this.options.time) { console.timeEnd(\"block parsing\"); }\n    if (this.options.time) { console.time(\"inline parsing\"); }\n    this.processInlines(this.doc);\n    if (this.options.time) { console.timeEnd(\"inline parsing\"); }\n    return this.doc;\n};\n\n\n// The Parser object.\nfunction Parser(options){\n    return {\n        doc: new Document(),\n        blocks: blocks,\n        blockStarts: blockStarts,\n        tip: this.doc,\n        oldtip: this.doc,\n        currentLine: \"\",\n        lineNumber: 0,\n        offset: 0,\n        nextNonspace: 0,\n        indent: 0,\n        blank: false,\n        allClosed: true,\n        lastMatchedContainer: this.doc,\n        refmap: {},\n        lastLineLength: 0,\n        inlineParser: new InlineParser(options),\n        findNextNonspace: findNextNonspace,\n        breakOutOfLists: breakOutOfLists,\n        addLine: addLine,\n        addChild: addChild,\n        incorporateLine: incorporateLine,\n        finalize: finalize,\n        processInlines: processInlines,\n        closeUnmatchedBlocks: closeUnmatchedBlocks,\n        parse: parse,\n        options: options || {}\n    };\n}\n\nmodule.exports = Parser;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/blocks.js\n ** module id = 8\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/blocks.js?");

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar encode = __webpack_require__(10);\nvar decode = __webpack_require__(11);\n\nvar C_BACKSLASH = 92;\n\nvar entityToChar = __webpack_require__(12).entityToChar;\n\nvar ENTITY = \"&(?:#x[a-f0-9]{1,8}|#[0-9]{1,8}|[a-z][a-z0-9]{1,31});\";\n\nvar reBackslashOrAmp = /[\\\\&]/;\n\nvar ESCAPABLE = '[!\"#$%&\\'()*+,./:;<=>?@[\\\\\\\\\\\\]^_`{|}~-]';\n\nvar reEntityOrEscapedChar = new RegExp('\\\\\\\\' + ESCAPABLE + '|' + ENTITY, 'gi');\n\nvar XMLSPECIAL = '[&<>\"]';\n\nvar reXmlSpecial = new RegExp(XMLSPECIAL, 'g');\n\nvar reXmlSpecialOrEntity = new RegExp(ENTITY + '|' + XMLSPECIAL, 'gi');\n\nvar unescapeChar = function(s) {\n    if (s.charCodeAt(0) === C_BACKSLASH) {\n        return s.charAt(1);\n    } else {\n        return entityToChar(s);\n    }\n};\n\n// Replace entities and backslash escapes with literal characters.\nvar unescapeString = function(s) {\n    if (reBackslashOrAmp.test(s)) {\n        return s.replace(reEntityOrEscapedChar, unescapeChar);\n    } else {\n        return s;\n    }\n};\n\nvar normalizeURI = function(uri) {\n    try {\n        return encode(decode(uri));\n    }\n    catch(err) {\n        return uri;\n    }\n};\n\nvar replaceUnsafeChar = function(s) {\n    switch (s) {\n    case '&':\n        return '&amp;';\n    case '<':\n        return '&lt;';\n    case '>':\n        return '&gt;';\n    case '\"':\n        return '&quot;';\n    default:\n        return s;\n    }\n};\n\nvar escapeXml = function(s, preserve_entities) {\n    if (reXmlSpecial.test(s)) {\n        if (preserve_entities) {\n            return s.replace(reXmlSpecialOrEntity, replaceUnsafeChar);\n        } else {\n            return s.replace(reXmlSpecial, replaceUnsafeChar);\n        }\n    } else {\n        return s;\n    }\n};\n\nmodule.exports = { unescapeString: unescapeString,\n                   normalizeURI: normalizeURI,\n                   escapeXml: escapeXml,\n                   ENTITY: ENTITY,\n                   ESCAPABLE: ESCAPABLE\n                 };\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/common.js\n ** module id = 9\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/common.js?");

/***/ },
/* 10 */
/***/ function(module, exports) {

	eval("// from https://github.com/markdown-it/mdurl\n// Copyright (c) 2015 Vitaly Puzrin, Alex Kocharin, MIT license.\n\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/encode.js\n ** module id = 10\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/encode.js?");

/***/ },
/* 11 */
/***/ function(module, exports) {

	eval("// from https://github.com/markdown-it/mdurl\n// Copyright (c) 2015 Vitaly Puzrin, Alex Kocharin, MIT license.\n\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, char,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          char = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (char < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(char);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          char = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (char < 0x800 || (char >= 0xD800 && char <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(char);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          char = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (char < 0x10000 || char > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            char -= 0x10000;\n            result += String.fromCharCode(0xD800 + (char >> 10), 0xDC00 + (char & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/decode.js\n ** module id = 11\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/decode.js?");

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar fromCodePoint = __webpack_require__(13);\n\nvar entities = {\n  AAacute: 193,\n  aacute: 225,\n  Abreve: 258,\n  abreve: 259,\n  ac: 8766,\n  acd: 8767,\n  acE: 8766,\n  Acirc: 194,\n  acirc: 226,\n  acute: 180,\n  Acy: 1040,\n  acy: 1072,\n  AElig: 198,\n  aelig: 230,\n  af: 8289,\n  Afr: 55349,\n  afr: 55349,\n  Agrave: 192,\n  agrave: 224,\n  alefsym: 8501,\n  aleph: 8501,\n  Alpha: 913,\n  alpha: 945,\n  Amacr: 256,\n  amacr: 257,\n  amalg: 10815,\n  amp: 38,\n  AMP: 38,\n  andand: 10837,\n  And: 10835,\n  and: 8743,\n  andd: 10844,\n  andslope: 10840,\n  andv: 10842,\n  ang: 8736,\n  ange: 10660,\n  angle: 8736,\n  angmsdaa: 10664,\n  angmsdab: 10665,\n  angmsdac: 10666,\n  angmsdad: 10667,\n  angmsdae: 10668,\n  angmsdaf: 10669,\n  angmsdag: 10670,\n  angmsdah: 10671,\n  angmsd: 8737,\n  angrt: 8735,\n  angrtvb: 8894,\n  angrtvbd: 10653,\n  angsph: 8738,\n  angst: 197,\n  angzarr: 9084,\n  Aogon: 260,\n  aogon: 261,\n  Aopf: 55349,\n  aopf: 55349,\n  apacir: 10863,\n  ap: 8776,\n  apE: 10864,\n  ape: 8778,\n  apid: 8779,\n  apos: 39,\n  ApplyFunction: 8289,\n  approx: 8776,\n  approxeq: 8778,\n  Aring: 197,\n  aring: 229,\n  Ascr: 55349,\n  ascr: 55349,\n  Assign: 8788,\n  ast: 42,\n  asymp: 8776,\n  asympeq: 8781,\n  Atilde: 195,\n  atilde: 227,\n  Auml: 196,\n  auml: 228,\n  awconint: 8755,\n  awint: 10769,\n  backcong: 8780,\n  backepsilon: 1014,\n  backprime: 8245,\n  backsim: 8765,\n  backsimeq: 8909,\n  Backslash: 8726,\n  Barv: 10983,\n  barvee: 8893,\n  barwed: 8965,\n  Barwed: 8966,\n  barwedge: 8965,\n  bbrk: 9141,\n  bbrktbrk: 9142,\n  bcong: 8780,\n  Bcy: 1041,\n  bcy: 1073,\n  bdquo: 8222,\n  becaus: 8757,\n  because: 8757,\n  Because: 8757,\n  bemptyv: 10672,\n  bepsi: 1014,\n  bernou: 8492,\n  Bernoullis: 8492,\n  Beta: 914,\n  beta: 946,\n  beth: 8502,\n  between: 8812,\n  Bfr: 55349,\n  bfr: 55349,\n  bigcap: 8898,\n  bigcirc: 9711,\n  bigcup: 8899,\n  bigodot: 10752,\n  bigoplus: 10753,\n  bigotimes: 10754,\n  bigsqcup: 10758,\n  bigstar: 9733,\n  bigtriangledown: 9661,\n  bigtriangleup: 9651,\n  biguplus: 10756,\n  bigvee: 8897,\n  bigwedge: 8896,\n  bkarow: 10509,\n  blacklozenge: 10731,\n  blacksquare: 9642,\n  blacktriangle: 9652,\n  blacktriangledown: 9662,\n  blacktriangleleft: 9666,\n  blacktriangleright: 9656,\n  blank: 9251,\n  blk12: 9618,\n  blk14: 9617,\n  blk34: 9619,\n  block: 9608,\n  bne: 61,\n  bnequiv: 8801,\n  bNot: 10989,\n  bnot: 8976,\n  Bopf: 55349,\n  bopf: 55349,\n  bot: 8869,\n  bottom: 8869,\n  bowtie: 8904,\n  boxbox: 10697,\n  boxdl: 9488,\n  boxdL: 9557,\n  boxDl: 9558,\n  boxDL: 9559,\n  boxdr: 9484,\n  boxdR: 9554,\n  boxDr: 9555,\n  boxDR: 9556,\n  boxh: 9472,\n  boxH: 9552,\n  boxhd: 9516,\n  boxHd: 9572,\n  boxhD: 9573,\n  boxHD: 9574,\n  boxhu: 9524,\n  boxHu: 9575,\n  boxhU: 9576,\n  boxHU: 9577,\n  boxminus: 8863,\n  boxplus: 8862,\n  boxtimes: 8864,\n  boxul: 9496,\n  boxuL: 9563,\n  boxUl: 9564,\n  boxUL: 9565,\n  boxur: 9492,\n  boxuR: 9560,\n  boxUr: 9561,\n  boxUR: 9562,\n  boxv: 9474,\n  boxV: 9553,\n  boxvh: 9532,\n  boxvH: 9578,\n  boxVh: 9579,\n  boxVH: 9580,\n  boxvl: 9508,\n  boxvL: 9569,\n  boxVl: 9570,\n  boxVL: 9571,\n  boxvr: 9500,\n  boxvR: 9566,\n  boxVr: 9567,\n  boxVR: 9568,\n  bprime: 8245,\n  breve: 728,\n  Breve: 728,\n  brvbar: 166,\n  bscr: 55349,\n  Bscr: 8492,\n  bsemi: 8271,\n  bsim: 8765,\n  bsime: 8909,\n  bsolb: 10693,\n  bsol: 92,\n  bsolhsub: 10184,\n  bull: 8226,\n  bullet: 8226,\n  bump: 8782,\n  bumpE: 10926,\n  bumpe: 8783,\n  Bumpeq: 8782,\n  bumpeq: 8783,\n  Cacute: 262,\n  cacute: 263,\n  capand: 10820,\n  capbrcup: 10825,\n  capcap: 10827,\n  cap: 8745,\n  Cap: 8914,\n  capcup: 10823,\n  capdot: 10816,\n  CapitalDifferentialD: 8517,\n  caps: 8745,\n  caret: 8257,\n  caron: 711,\n  Cayleys: 8493,\n  ccaps: 10829,\n  Ccaron: 268,\n  ccaron: 269,\n  Ccedil: 199,\n  ccedil: 231,\n  Ccirc: 264,\n  ccirc: 265,\n  Cconint: 8752,\n  ccups: 10828,\n  ccupssm: 10832,\n  Cdot: 266,\n  cdot: 267,\n  cedil: 184,\n  Cedilla: 184,\n  cemptyv: 10674,\n  cent: 162,\n  centerdot: 183,\n  CenterDot: 183,\n  cfr: 55349,\n  Cfr: 8493,\n  CHcy: 1063,\n  chcy: 1095,\n  check: 10003,\n  checkmark: 10003,\n  Chi: 935,\n  chi: 967,\n  circ: 710,\n  circeq: 8791,\n  circlearrowleft: 8634,\n  circlearrowright: 8635,\n  circledast: 8859,\n  circledcirc: 8858,\n  circleddash: 8861,\n  CircleDot: 8857,\n  circledR: 174,\n  circledS: 9416,\n  CircleMinus: 8854,\n  CirclePlus: 8853,\n  CircleTimes: 8855,\n  cir: 9675,\n  cirE: 10691,\n  cire: 8791,\n  cirfnint: 10768,\n  cirmid: 10991,\n  cirscir: 10690,\n  ClockwiseContourIntegral: 8754,\n  CloseCurlyDoubleQuote: 8221,\n  CloseCurlyQuote: 8217,\n  clubs: 9827,\n  clubsuit: 9827,\n  colon: 58,\n  Colon: 8759,\n  Colone: 10868,\n  colone: 8788,\n  coloneq: 8788,\n  comma: 44,\n  commat: 64,\n  comp: 8705,\n  compfn: 8728,\n  complement: 8705,\n  complexes: 8450,\n  cong: 8773,\n  congdot: 10861,\n  Congruent: 8801,\n  conint: 8750,\n  Conint: 8751,\n  ContourIntegral: 8750,\n  copf: 55349,\n  Copf: 8450,\n  coprod: 8720,\n  Coproduct: 8720,\n  copy: 169,\n  COPY: 169,\n  copysr: 8471,\n  CounterClockwiseContourIntegral: 8755,\n  crarr: 8629,\n  cross: 10007,\n  Cross: 10799,\n  Cscr: 55349,\n  cscr: 55349,\n  csub: 10959,\n  csube: 10961,\n  csup: 10960,\n  csupe: 10962,\n  ctdot: 8943,\n  cudarrl: 10552,\n  cudarrr: 10549,\n  cuepr: 8926,\n  cuesc: 8927,\n  cularr: 8630,\n  cularrp: 10557,\n  cupbrcap: 10824,\n  cupcap: 10822,\n  CupCap: 8781,\n  cup: 8746,\n  Cup: 8915,\n  cupcup: 10826,\n  cupdot: 8845,\n  cupor: 10821,\n  cups: 8746,\n  curarr: 8631,\n  curarrm: 10556,\n  curlyeqprec: 8926,\n  curlyeqsucc: 8927,\n  curlyvee: 8910,\n  curlywedge: 8911,\n  curren: 164,\n  curvearrowleft: 8630,\n  curvearrowright: 8631,\n  cuvee: 8910,\n  cuwed: 8911,\n  cwconint: 8754,\n  cwint: 8753,\n  cylcty: 9005,\n  dagger: 8224,\n  Dagger: 8225,\n  daleth: 8504,\n  darr: 8595,\n  Darr: 8609,\n  dArr: 8659,\n  dash: 8208,\n  Dashv: 10980,\n  dashv: 8867,\n  dbkarow: 10511,\n  dblac: 733,\n  Dcaron: 270,\n  dcaron: 271,\n  Dcy: 1044,\n  dcy: 1076,\n  ddagger: 8225,\n  ddarr: 8650,\n  DD: 8517,\n  dd: 8518,\n  DDotrahd: 10513,\n  ddotseq: 10871,\n  deg: 176,\n  Del: 8711,\n  Delta: 916,\n  delta: 948,\n  demptyv: 10673,\n  dfisht: 10623,\n  Dfr: 55349,\n  dfr: 55349,\n  dHar: 10597,\n  dharl: 8643,\n  dharr: 8642,\n  DiacriticalAcute: 180,\n  DiacriticalDot: 729,\n  DiacriticalDoubleAcute: 733,\n  DiacriticalGrave: 96,\n  DiacriticalTilde: 732,\n  diam: 8900,\n  diamond: 8900,\n  Diamond: 8900,\n  diamondsuit: 9830,\n  diams: 9830,\n  die: 168,\n  DifferentialD: 8518,\n  digamma: 989,\n  disin: 8946,\n  div: 247,\n  divide: 247,\n  divideontimes: 8903,\n  divonx: 8903,\n  DJcy: 1026,\n  djcy: 1106,\n  dlcorn: 8990,\n  dlcrop: 8973,\n  dollar: 36,\n  Dopf: 55349,\n  dopf: 55349,\n  Dot: 168,\n  dot: 729,\n  DotDot: 8412,\n  doteq: 8784,\n  doteqdot: 8785,\n  DotEqual: 8784,\n  dotminus: 8760,\n  dotplus: 8724,\n  dotsquare: 8865,\n  doublebarwedge: 8966,\n  DoubleContourIntegral: 8751,\n  DoubleDot: 168,\n  DoubleDownArrow: 8659,\n  DoubleLeftArrow: 8656,\n  DoubleLeftRightArrow: 8660,\n  DoubleLeftTee: 10980,\n  DoubleLongLeftArrow: 10232,\n  DoubleLongLeftRightArrow: 10234,\n  DoubleLongRightArrow: 10233,\n  DoubleRightArrow: 8658,\n  DoubleRightTee: 8872,\n  DoubleUpArrow: 8657,\n  DoubleUpDownArrow: 8661,\n  DoubleVerticalBar: 8741,\n  DownArrowBar: 10515,\n  downarrow: 8595,\n  DownArrow: 8595,\n  Downarrow: 8659,\n  DownArrowUpArrow: 8693,\n  DownBreve: 785,\n  downdownarrows: 8650,\n  downharpoonleft: 8643,\n  downharpoonright: 8642,\n  DownLeftRightVector: 10576,\n  DownLeftTeeVector: 10590,\n  DownLeftVectorBar: 10582,\n  DownLeftVector: 8637,\n  DownRightTeeVector: 10591,\n  DownRightVectorBar: 10583,\n  DownRightVector: 8641,\n  DownTeeArrow: 8615,\n  DownTee: 8868,\n  drbkarow: 10512,\n  drcorn: 8991,\n  drcrop: 8972,\n  Dscr: 55349,\n  dscr: 55349,\n  DScy: 1029,\n  dscy: 1109,\n  dsol: 10742,\n  Dstrok: 272,\n  dstrok: 273,\n  dtdot: 8945,\n  dtri: 9663,\n  dtrif: 9662,\n  duarr: 8693,\n  duhar: 10607,\n  dwangle: 10662,\n  DZcy: 1039,\n  dzcy: 1119,\n  dzigrarr: 10239,\n  Eacute: 201,\n  eacute: 233,\n  easter: 10862,\n  Ecaron: 282,\n  ecaron: 283,\n  Ecirc: 202,\n  ecirc: 234,\n  ecir: 8790,\n  ecolon: 8789,\n  Ecy: 1069,\n  ecy: 1101,\n  eDDot: 10871,\n  Edot: 278,\n  edot: 279,\n  eDot: 8785,\n  ee: 8519,\n  efDot: 8786,\n  Efr: 55349,\n  efr: 55349,\n  eg: 10906,\n  Egrave: 200,\n  egrave: 232,\n  egs: 10902,\n  egsdot: 10904,\n  el: 10905,\n  Element: 8712,\n  elinters: 9191,\n  ell: 8467,\n  els: 10901,\n  elsdot: 10903,\n  Emacr: 274,\n  emacr: 275,\n  empty: 8709,\n  emptyset: 8709,\n  EmptySmallSquare: 9723,\n  emptyv: 8709,\n  EmptyVerySmallSquare: 9643,\n  emsp13: 8196,\n  emsp14: 8197,\n  emsp: 8195,\n  ENG: 330,\n  eng: 331,\n  ensp: 8194,\n  Eogon: 280,\n  eogon: 281,\n  Eopf: 55349,\n  eopf: 55349,\n  epar: 8917,\n  eparsl: 10723,\n  eplus: 10865,\n  epsi: 949,\n  Epsilon: 917,\n  epsilon: 949,\n  epsiv: 1013,\n  eqcirc: 8790,\n  eqcolon: 8789,\n  eqsim: 8770,\n  eqslantgtr: 10902,\n  eqslantless: 10901,\n  Equal: 10869,\n  equals: 61,\n  EqualTilde: 8770,\n  equest: 8799,\n  Equilibrium: 8652,\n  equiv: 8801,\n  equivDD: 10872,\n  eqvparsl: 10725,\n  erarr: 10609,\n  erDot: 8787,\n  escr: 8495,\n  Escr: 8496,\n  esdot: 8784,\n  Esim: 10867,\n  esim: 8770,\n  Eta: 919,\n  eta: 951,\n  ETH: 208,\n  eth: 240,\n  Euml: 203,\n  euml: 235,\n  euro: 8364,\n  excl: 33,\n  exist: 8707,\n  Exists: 8707,\n  expectation: 8496,\n  exponentiale: 8519,\n  ExponentialE: 8519,\n  fallingdotseq: 8786,\n  Fcy: 1060,\n  fcy: 1092,\n  female: 9792,\n  ffilig: 64259,\n  fflig: 64256,\n  ffllig: 64260,\n  Ffr: 55349,\n  ffr: 55349,\n  filig: 64257,\n  FilledSmallSquare: 9724,\n  FilledVerySmallSquare: 9642,\n  fjlig: 102,\n  flat: 9837,\n  fllig: 64258,\n  fltns: 9649,\n  fnof: 402,\n  Fopf: 55349,\n  fopf: 55349,\n  forall: 8704,\n  ForAll: 8704,\n  fork: 8916,\n  forkv: 10969,\n  Fouriertrf: 8497,\n  fpartint: 10765,\n  frac12: 189,\n  frac13: 8531,\n  frac14: 188,\n  frac15: 8533,\n  frac16: 8537,\n  frac18: 8539,\n  frac23: 8532,\n  frac25: 8534,\n  frac34: 190,\n  frac35: 8535,\n  frac38: 8540,\n  frac45: 8536,\n  frac56: 8538,\n  frac58: 8541,\n  frac78: 8542,\n  frasl: 8260,\n  frown: 8994,\n  fscr: 55349,\n  Fscr: 8497,\n  gacute: 501,\n  Gamma: 915,\n  gamma: 947,\n  Gammad: 988,\n  gammad: 989,\n  gap: 10886,\n  Gbreve: 286,\n  gbreve: 287,\n  Gcedil: 290,\n  Gcirc: 284,\n  gcirc: 285,\n  Gcy: 1043,\n  gcy: 1075,\n  Gdot: 288,\n  gdot: 289,\n  ge: 8805,\n  gE: 8807,\n  gEl: 10892,\n  gel: 8923,\n  geq: 8805,\n  geqq: 8807,\n  geqslant: 10878,\n  gescc: 10921,\n  ges: 10878,\n  gesdot: 10880,\n  gesdoto: 10882,\n  gesdotol: 10884,\n  gesl: 8923,\n  gesles: 10900,\n  Gfr: 55349,\n  gfr: 55349,\n  gg: 8811,\n  Gg: 8921,\n  ggg: 8921,\n  gimel: 8503,\n  GJcy: 1027,\n  gjcy: 1107,\n  gla: 10917,\n  gl: 8823,\n  glE: 10898,\n  glj: 10916,\n  gnap: 10890,\n  gnapprox: 10890,\n  gne: 10888,\n  gnE: 8809,\n  gneq: 10888,\n  gneqq: 8809,\n  gnsim: 8935,\n  Gopf: 55349,\n  gopf: 55349,\n  grave: 96,\n  GreaterEqual: 8805,\n  GreaterEqualLess: 8923,\n  GreaterFullEqual: 8807,\n  GreaterGreater: 10914,\n  GreaterLess: 8823,\n  GreaterSlantEqual: 10878,\n  GreaterTilde: 8819,\n  Gscr: 55349,\n  gscr: 8458,\n  gsim: 8819,\n  gsime: 10894,\n  gsiml: 10896,\n  gtcc: 10919,\n  gtcir: 10874,\n  gt: 62,\n  GT: 62,\n  Gt: 8811,\n  gtdot: 8919,\n  gtlPar: 10645,\n  gtquest: 10876,\n  gtrapprox: 10886,\n  gtrarr: 10616,\n  gtrdot: 8919,\n  gtreqless: 8923,\n  gtreqqless: 10892,\n  gtrless: 8823,\n  gtrsim: 8819,\n  gvertneqq: 8809,\n  gvnE: 8809,\n  Hacek: 711,\n  hairsp: 8202,\n  half: 189,\n  hamilt: 8459,\n  HARDcy: 1066,\n  hardcy: 1098,\n  harrcir: 10568,\n  harr: 8596,\n  hArr: 8660,\n  harrw: 8621,\n  Hat: 94,\n  hbar: 8463,\n  Hcirc: 292,\n  hcirc: 293,\n  hearts: 9829,\n  heartsuit: 9829,\n  hellip: 8230,\n  hercon: 8889,\n  hfr: 55349,\n  Hfr: 8460,\n  HilbertSpace: 8459,\n  hksearow: 10533,\n  hkswarow: 10534,\n  hoarr: 8703,\n  homtht: 8763,\n  hookleftarrow: 8617,\n  hookrightarrow: 8618,\n  hopf: 55349,\n  Hopf: 8461,\n  horbar: 8213,\n  HorizontalLine: 9472,\n  hscr: 55349,\n  Hscr: 8459,\n  hslash: 8463,\n  Hstrok: 294,\n  hstrok: 295,\n  HumpDownHump: 8782,\n  HumpEqual: 8783,\n  hybull: 8259,\n  hyphen: 8208,\n  Iacute: 205,\n  iacute: 237,\n  ic: 8291,\n  Icirc: 206,\n  icirc: 238,\n  Icy: 1048,\n  icy: 1080,\n  Idot: 304,\n  IEcy: 1045,\n  iecy: 1077,\n  iexcl: 161,\n  iff: 8660,\n  ifr: 55349,\n  Ifr: 8465,\n  Igrave: 204,\n  igrave: 236,\n  ii: 8520,\n  iiiint: 10764,\n  iiint: 8749,\n  iinfin: 10716,\n  iiota: 8489,\n  IJlig: 306,\n  ijlig: 307,\n  Imacr: 298,\n  imacr: 299,\n  image: 8465,\n  ImaginaryI: 8520,\n  imagline: 8464,\n  imagpart: 8465,\n  imath: 305,\n  Im: 8465,\n  imof: 8887,\n  imped: 437,\n  Implies: 8658,\n  incare: 8453,\n  'in': 8712,\n  infin: 8734,\n  infintie: 10717,\n  inodot: 305,\n  intcal: 8890,\n  int: 8747,\n  Int: 8748,\n  integers: 8484,\n  Integral: 8747,\n  intercal: 8890,\n  Intersection: 8898,\n  intlarhk: 10775,\n  intprod: 10812,\n  InvisibleComma: 8291,\n  InvisibleTimes: 8290,\n  IOcy: 1025,\n  iocy: 1105,\n  Iogon: 302,\n  iogon: 303,\n  Iopf: 55349,\n  iopf: 55349,\n  Iota: 921,\n  iota: 953,\n  iprod: 10812,\n  iquest: 191,\n  iscr: 55349,\n  Iscr: 8464,\n  isin: 8712,\n  isindot: 8949,\n  isinE: 8953,\n  isins: 8948,\n  isinsv: 8947,\n  isinv: 8712,\n  it: 8290,\n  Itilde: 296,\n  itilde: 297,\n  Iukcy: 1030,\n  iukcy: 1110,\n  Iuml: 207,\n  iuml: 239,\n  Jcirc: 308,\n  jcirc: 309,\n  Jcy: 1049,\n  jcy: 1081,\n  Jfr: 55349,\n  jfr: 55349,\n  jmath: 567,\n  Jopf: 55349,\n  jopf: 55349,\n  Jscr: 55349,\n  jscr: 55349,\n  Jsercy: 1032,\n  jsercy: 1112,\n  Jukcy: 1028,\n  jukcy: 1108,\n  Kappa: 922,\n  kappa: 954,\n  kappav: 1008,\n  Kcedil: 310,\n  kcedil: 311,\n  Kcy: 1050,\n  kcy: 1082,\n  Kfr: 55349,\n  kfr: 55349,\n  kgreen: 312,\n  KHcy: 1061,\n  khcy: 1093,\n  KJcy: 1036,\n  kjcy: 1116,\n  Kopf: 55349,\n  kopf: 55349,\n  Kscr: 55349,\n  kscr: 55349,\n  lAarr: 8666,\n  Lacute: 313,\n  lacute: 314,\n  laemptyv: 10676,\n  lagran: 8466,\n  Lambda: 923,\n  lambda: 955,\n  lang: 10216,\n  Lang: 10218,\n  langd: 10641,\n  langle: 10216,\n  lap: 10885,\n  Laplacetrf: 8466,\n  laquo: 171,\n  larrb: 8676,\n  larrbfs: 10527,\n  larr: 8592,\n  Larr: 8606,\n  lArr: 8656,\n  larrfs: 10525,\n  larrhk: 8617,\n  larrlp: 8619,\n  larrpl: 10553,\n  larrsim: 10611,\n  larrtl: 8610,\n  latail: 10521,\n  lAtail: 10523,\n  lat: 10923,\n  late: 10925,\n  lates: 10925,\n  lbarr: 10508,\n  lBarr: 10510,\n  lbbrk: 10098,\n  lbrace: 123,\n  lbrack: 91,\n  lbrke: 10635,\n  lbrksld: 10639,\n  lbrkslu: 10637,\n  Lcaron: 317,\n  lcaron: 318,\n  Lcedil: 315,\n  lcedil: 316,\n  lceil: 8968,\n  lcub: 123,\n  Lcy: 1051,\n  lcy: 1083,\n  ldca: 10550,\n  ldquo: 8220,\n  ldquor: 8222,\n  ldrdhar: 10599,\n  ldrushar: 10571,\n  ldsh: 8626,\n  le: 8804,\n  lE: 8806,\n  LeftAngleBracket: 10216,\n  LeftArrowBar: 8676,\n  leftarrow: 8592,\n  LeftArrow: 8592,\n  Leftarrow: 8656,\n  LeftArrowRightArrow: 8646,\n  leftarrowtail: 8610,\n  LeftCeiling: 8968,\n  LeftDoubleBracket: 10214,\n  LeftDownTeeVector: 10593,\n  LeftDownVectorBar: 10585,\n  LeftDownVector: 8643,\n  LeftFloor: 8970,\n  leftharpoondown: 8637,\n  leftharpoonup: 8636,\n  leftleftarrows: 8647,\n  leftrightarrow: 8596,\n  LeftRightArrow: 8596,\n  Leftrightarrow: 8660,\n  leftrightarrows: 8646,\n  leftrightharpoons: 8651,\n  leftrightsquigarrow: 8621,\n  LeftRightVector: 10574,\n  LeftTeeArrow: 8612,\n  LeftTee: 8867,\n  LeftTeeVector: 10586,\n  leftthreetimes: 8907,\n  LeftTriangleBar: 10703,\n  LeftTriangle: 8882,\n  LeftTriangleEqual: 8884,\n  LeftUpDownVector: 10577,\n  LeftUpTeeVector: 10592,\n  LeftUpVectorBar: 10584,\n  LeftUpVector: 8639,\n  LeftVectorBar: 10578,\n  LeftVector: 8636,\n  lEg: 10891,\n  leg: 8922,\n  leq: 8804,\n  leqq: 8806,\n  leqslant: 10877,\n  lescc: 10920,\n  les: 10877,\n  lesdot: 10879,\n  lesdoto: 10881,\n  lesdotor: 10883,\n  lesg: 8922,\n  lesges: 10899,\n  lessapprox: 10885,\n  lessdot: 8918,\n  lesseqgtr: 8922,\n  lesseqqgtr: 10891,\n  LessEqualGreater: 8922,\n  LessFullEqual: 8806,\n  LessGreater: 8822,\n  lessgtr: 8822,\n  LessLess: 10913,\n  lesssim: 8818,\n  LessSlantEqual: 10877,\n  LessTilde: 8818,\n  lfisht: 10620,\n  lfloor: 8970,\n  Lfr: 55349,\n  lfr: 55349,\n  lg: 8822,\n  lgE: 10897,\n  lHar: 10594,\n  lhard: 8637,\n  lharu: 8636,\n  lharul: 10602,\n  lhblk: 9604,\n  LJcy: 1033,\n  ljcy: 1113,\n  llarr: 8647,\n  ll: 8810,\n  Ll: 8920,\n  llcorner: 8990,\n  Lleftarrow: 8666,\n  llhard: 10603,\n  lltri: 9722,\n  Lmidot: 319,\n  lmidot: 320,\n  lmoustache: 9136,\n  lmoust: 9136,\n  lnap: 10889,\n  lnapprox: 10889,\n  lne: 10887,\n  lnE: 8808,\n  lneq: 10887,\n  lneqq: 8808,\n  lnsim: 8934,\n  loang: 10220,\n  loarr: 8701,\n  lobrk: 10214,\n  longleftarrow: 10229,\n  LongLeftArrow: 10229,\n  Longleftarrow: 10232,\n  longleftrightarrow: 10231,\n  LongLeftRightArrow: 10231,\n  Longleftrightarrow: 10234,\n  longmapsto: 10236,\n  longrightarrow: 10230,\n  LongRightArrow: 10230,\n  Longrightarrow: 10233,\n  looparrowleft: 8619,\n  looparrowright: 8620,\n  lopar: 10629,\n  Lopf: 55349,\n  lopf: 55349,\n  loplus: 10797,\n  lotimes: 10804,\n  lowast: 8727,\n  lowbar: 95,\n  LowerLeftArrow: 8601,\n  LowerRightArrow: 8600,\n  loz: 9674,\n  lozenge: 9674,\n  lozf: 10731,\n  lpar: 40,\n  lparlt: 10643,\n  lrarr: 8646,\n  lrcorner: 8991,\n  lrhar: 8651,\n  lrhard: 10605,\n  lrm: 8206,\n  lrtri: 8895,\n  lsaquo: 8249,\n  lscr: 55349,\n  Lscr: 8466,\n  lsh: 8624,\n  Lsh: 8624,\n  lsim: 8818,\n  lsime: 10893,\n  lsimg: 10895,\n  lsqb: 91,\n  lsquo: 8216,\n  lsquor: 8218,\n  Lstrok: 321,\n  lstrok: 322,\n  ltcc: 10918,\n  ltcir: 10873,\n  lt: 60,\n  LT: 60,\n  Lt: 8810,\n  ltdot: 8918,\n  lthree: 8907,\n  ltimes: 8905,\n  ltlarr: 10614,\n  ltquest: 10875,\n  ltri: 9667,\n  ltrie: 8884,\n  ltrif: 9666,\n  ltrPar: 10646,\n  lurdshar: 10570,\n  luruhar: 10598,\n  lvertneqq: 8808,\n  lvnE: 8808,\n  macr: 175,\n  male: 9794,\n  malt: 10016,\n  maltese: 10016,\n  Map: 10501,\n  map: 8614,\n  mapsto: 8614,\n  mapstodown: 8615,\n  mapstoleft: 8612,\n  mapstoup: 8613,\n  marker: 9646,\n  mcomma: 10793,\n  Mcy: 1052,\n  mcy: 1084,\n  mdash: 8212,\n  mDDot: 8762,\n  measuredangle: 8737,\n  MediumSpace: 8287,\n  Mellintrf: 8499,\n  Mfr: 55349,\n  mfr: 55349,\n  mho: 8487,\n  micro: 181,\n  midast: 42,\n  midcir: 10992,\n  mid: 8739,\n  middot: 183,\n  minusb: 8863,\n  minus: 8722,\n  minusd: 8760,\n  minusdu: 10794,\n  MinusPlus: 8723,\n  mlcp: 10971,\n  mldr: 8230,\n  mnplus: 8723,\n  models: 8871,\n  Mopf: 55349,\n  mopf: 55349,\n  mp: 8723,\n  mscr: 55349,\n  Mscr: 8499,\n  mstpos: 8766,\n  Mu: 924,\n  mu: 956,\n  multimap: 8888,\n  mumap: 8888,\n  nabla: 8711,\n  Nacute: 323,\n  nacute: 324,\n  nang: 8736,\n  nap: 8777,\n  napE: 10864,\n  napid: 8779,\n  napos: 329,\n  napprox: 8777,\n  natural: 9838,\n  naturals: 8469,\n  natur: 9838,\n  nbsp: 160,\n  nbump: 8782,\n  nbumpe: 8783,\n  ncap: 10819,\n  Ncaron: 327,\n  ncaron: 328,\n  Ncedil: 325,\n  ncedil: 326,\n  ncong: 8775,\n  ncongdot: 10861,\n  ncup: 10818,\n  Ncy: 1053,\n  ncy: 1085,\n  ndash: 8211,\n  nearhk: 10532,\n  nearr: 8599,\n  neArr: 8663,\n  nearrow: 8599,\n  ne: 8800,\n  nedot: 8784,\n  NegativeMediumSpace: 8203,\n  NegativeThickSpace: 8203,\n  NegativeThinSpace: 8203,\n  NegativeVeryThinSpace: 8203,\n  nequiv: 8802,\n  nesear: 10536,\n  nesim: 8770,\n  NestedGreaterGreater: 8811,\n  NestedLessLess: 8810,\n  NewLine: 10,\n  nexist: 8708,\n  nexists: 8708,\n  Nfr: 55349,\n  nfr: 55349,\n  ngE: 8807,\n  nge: 8817,\n  ngeq: 8817,\n  ngeqq: 8807,\n  ngeqslant: 10878,\n  nges: 10878,\n  nGg: 8921,\n  ngsim: 8821,\n  nGt: 8811,\n  ngt: 8815,\n  ngtr: 8815,\n  nGtv: 8811,\n  nharr: 8622,\n  nhArr: 8654,\n  nhpar: 10994,\n  ni: 8715,\n  nis: 8956,\n  nisd: 8954,\n  niv: 8715,\n  NJcy: 1034,\n  njcy: 1114,\n  nlarr: 8602,\n  nlArr: 8653,\n  nldr: 8229,\n  nlE: 8806,\n  nle: 8816,\n  nleftarrow: 8602,\n  nLeftarrow: 8653,\n  nleftrightarrow: 8622,\n  nLeftrightarrow: 8654,\n  nleq: 8816,\n  nleqq: 8806,\n  nleqslant: 10877,\n  nles: 10877,\n  nless: 8814,\n  nLl: 8920,\n  nlsim: 8820,\n  nLt: 8810,\n  nlt: 8814,\n  nltri: 8938,\n  nltrie: 8940,\n  nLtv: 8810,\n  nmid: 8740,\n  NoBreak: 8288,\n  NonBreakingSpace: 160,\n  nopf: 55349,\n  Nopf: 8469,\n  Not: 10988,\n  not: 172,\n  NotCongruent: 8802,\n  NotCupCap: 8813,\n  NotDoubleVerticalBar: 8742,\n  NotElement: 8713,\n  NotEqual: 8800,\n  NotEqualTilde: 8770,\n  NotExists: 8708,\n  NotGreater: 8815,\n  NotGreaterEqual: 8817,\n  NotGreaterFullEqual: 8807,\n  NotGreaterGreater: 8811,\n  NotGreaterLess: 8825,\n  NotGreaterSlantEqual: 10878,\n  NotGreaterTilde: 8821,\n  NotHumpDownHump: 8782,\n  NotHumpEqual: 8783,\n  notin: 8713,\n  notindot: 8949,\n  notinE: 8953,\n  notinva: 8713,\n  notinvb: 8951,\n  notinvc: 8950,\n  NotLeftTriangleBar: 10703,\n  NotLeftTriangle: 8938,\n  NotLeftTriangleEqual: 8940,\n  NotLess: 8814,\n  NotLessEqual: 8816,\n  NotLessGreater: 8824,\n  NotLessLess: 8810,\n  NotLessSlantEqual: 10877,\n  NotLessTilde: 8820,\n  NotNestedGreaterGreater: 10914,\n  NotNestedLessLess: 10913,\n  notni: 8716,\n  notniva: 8716,\n  notnivb: 8958,\n  notnivc: 8957,\n  NotPrecedes: 8832,\n  NotPrecedesEqual: 10927,\n  NotPrecedesSlantEqual: 8928,\n  NotReverseElement: 8716,\n  NotRightTriangleBar: 10704,\n  NotRightTriangle: 8939,\n  NotRightTriangleEqual: 8941,\n  NotSquareSubset: 8847,\n  NotSquareSubsetEqual: 8930,\n  NotSquareSuperset: 8848,\n  NotSquareSupersetEqual: 8931,\n  NotSubset: 8834,\n  NotSubsetEqual: 8840,\n  NotSucceeds: 8833,\n  NotSucceedsEqual: 10928,\n  NotSucceedsSlantEqual: 8929,\n  NotSucceedsTilde: 8831,\n  NotSuperset: 8835,\n  NotSupersetEqual: 8841,\n  NotTilde: 8769,\n  NotTildeEqual: 8772,\n  NotTildeFullEqual: 8775,\n  NotTildeTilde: 8777,\n  NotVerticalBar: 8740,\n  nparallel: 8742,\n  npar: 8742,\n  nparsl: 11005,\n  npart: 8706,\n  npolint: 10772,\n  npr: 8832,\n  nprcue: 8928,\n  nprec: 8832,\n  npreceq: 10927,\n  npre: 10927,\n  nrarrc: 10547,\n  nrarr: 8603,\n  nrArr: 8655,\n  nrarrw: 8605,\n  nrightarrow: 8603,\n  nRightarrow: 8655,\n  nrtri: 8939,\n  nrtrie: 8941,\n  nsc: 8833,\n  nsccue: 8929,\n  nsce: 10928,\n  Nscr: 55349,\n  nscr: 55349,\n  nshortmid: 8740,\n  nshortparallel: 8742,\n  nsim: 8769,\n  nsime: 8772,\n  nsimeq: 8772,\n  nsmid: 8740,\n  nspar: 8742,\n  nsqsube: 8930,\n  nsqsupe: 8931,\n  nsub: 8836,\n  nsubE: 10949,\n  nsube: 8840,\n  nsubset: 8834,\n  nsubseteq: 8840,\n  nsubseteqq: 10949,\n  nsucc: 8833,\n  nsucceq: 10928,\n  nsup: 8837,\n  nsupE: 10950,\n  nsupe: 8841,\n  nsupset: 8835,\n  nsupseteq: 8841,\n  nsupseteqq: 10950,\n  ntgl: 8825,\n  Ntilde: 209,\n  ntilde: 241,\n  ntlg: 8824,\n  ntriangleleft: 8938,\n  ntrianglelefteq: 8940,\n  ntriangleright: 8939,\n  ntrianglerighteq: 8941,\n  Nu: 925,\n  nu: 957,\n  num: 35,\n  numero: 8470,\n  numsp: 8199,\n  nvap: 8781,\n  nvdash: 8876,\n  nvDash: 8877,\n  nVdash: 8878,\n  nVDash: 8879,\n  nvge: 8805,\n  nvgt: 62,\n  nvHarr: 10500,\n  nvinfin: 10718,\n  nvlArr: 10498,\n  nvle: 8804,\n  nvlt: 62,\n  nvltrie: 8884,\n  nvrArr: 10499,\n  nvrtrie: 8885,\n  nvsim: 8764,\n  nwarhk: 10531,\n  nwarr: 8598,\n  nwArr: 8662,\n  nwarrow: 8598,\n  nwnear: 10535,\n  Oacute: 211,\n  oacute: 243,\n  oast: 8859,\n  Ocirc: 212,\n  ocirc: 244,\n  ocir: 8858,\n  Ocy: 1054,\n  ocy: 1086,\n  odash: 8861,\n  Odblac: 336,\n  odblac: 337,\n  odiv: 10808,\n  odot: 8857,\n  odsold: 10684,\n  OElig: 338,\n  oelig: 339,\n  ofcir: 10687,\n  Ofr: 55349,\n  ofr: 55349,\n  ogon: 731,\n  Ograve: 210,\n  ograve: 242,\n  ogt: 10689,\n  ohbar: 10677,\n  ohm: 937,\n  oint: 8750,\n  olarr: 8634,\n  olcir: 10686,\n  olcross: 10683,\n  oline: 8254,\n  olt: 10688,\n  Omacr: 332,\n  omacr: 333,\n  Omega: 937,\n  omega: 969,\n  Omicron: 927,\n  omicron: 959,\n  omid: 10678,\n  ominus: 8854,\n  Oopf: 55349,\n  oopf: 55349,\n  opar: 10679,\n  OpenCurlyDoubleQuote: 8220,\n  OpenCurlyQuote: 8216,\n  operp: 10681,\n  oplus: 8853,\n  orarr: 8635,\n  Or: 10836,\n  or: 8744,\n  ord: 10845,\n  order: 8500,\n  orderof: 8500,\n  ordf: 170,\n  ordm: 186,\n  origof: 8886,\n  oror: 10838,\n  orslope: 10839,\n  orv: 10843,\n  oS: 9416,\n  Oscr: 55349,\n  oscr: 8500,\n  Oslash: 216,\n  oslash: 248,\n  osol: 8856,\n  Otilde: 213,\n  otilde: 245,\n  otimesas: 10806,\n  Otimes: 10807,\n  otimes: 8855,\n  Ouml: 214,\n  ouml: 246,\n  ovbar: 9021,\n  OverBar: 8254,\n  OverBrace: 9182,\n  OverBracket: 9140,\n  OverParenthesis: 9180,\n  para: 182,\n  parallel: 8741,\n  par: 8741,\n  parsim: 10995,\n  parsl: 11005,\n  part: 8706,\n  PartialD: 8706,\n  Pcy: 1055,\n  pcy: 1087,\n  percnt: 37,\n  period: 46,\n  permil: 8240,\n  perp: 8869,\n  pertenk: 8241,\n  Pfr: 55349,\n  pfr: 55349,\n  Phi: 934,\n  phi: 966,\n  phiv: 981,\n  phmmat: 8499,\n  phone: 9742,\n  Pi: 928,\n  pi: 960,\n  pitchfork: 8916,\n  piv: 982,\n  planck: 8463,\n  planckh: 8462,\n  plankv: 8463,\n  plusacir: 10787,\n  plusb: 8862,\n  pluscir: 10786,\n  plus: 43,\n  plusdo: 8724,\n  plusdu: 10789,\n  pluse: 10866,\n  PlusMinus: 177,\n  plusmn: 177,\n  plussim: 10790,\n  plustwo: 10791,\n  pm: 177,\n  Poincareplane: 8460,\n  pointint: 10773,\n  popf: 55349,\n  Popf: 8473,\n  pound: 163,\n  prap: 10935,\n  Pr: 10939,\n  pr: 8826,\n  prcue: 8828,\n  precapprox: 10935,\n  prec: 8826,\n  preccurlyeq: 8828,\n  Precedes: 8826,\n  PrecedesEqual: 10927,\n  PrecedesSlantEqual: 8828,\n  PrecedesTilde: 8830,\n  preceq: 10927,\n  precnapprox: 10937,\n  precneqq: 10933,\n  precnsim: 8936,\n  pre: 10927,\n  prE: 10931,\n  precsim: 8830,\n  prime: 8242,\n  Prime: 8243,\n  primes: 8473,\n  prnap: 10937,\n  prnE: 10933,\n  prnsim: 8936,\n  prod: 8719,\n  Product: 8719,\n  profalar: 9006,\n  profline: 8978,\n  profsurf: 8979,\n  prop: 8733,\n  Proportional: 8733,\n  Proportion: 8759,\n  propto: 8733,\n  prsim: 8830,\n  prurel: 8880,\n  Pscr: 55349,\n  pscr: 55349,\n  Psi: 936,\n  psi: 968,\n  puncsp: 8200,\n  Qfr: 55349,\n  qfr: 55349,\n  qint: 10764,\n  qopf: 55349,\n  Qopf: 8474,\n  qprime: 8279,\n  Qscr: 55349,\n  qscr: 55349,\n  quaternions: 8461,\n  quatint: 10774,\n  quest: 63,\n  questeq: 8799,\n  quot: 34,\n  QUOT: 34,\n  rAarr: 8667,\n  race: 8765,\n  Racute: 340,\n  racute: 341,\n  radic: 8730,\n  raemptyv: 10675,\n  rang: 10217,\n  Rang: 10219,\n  rangd: 10642,\n  range: 10661,\n  rangle: 10217,\n  raquo: 187,\n  rarrap: 10613,\n  rarrb: 8677,\n  rarrbfs: 10528,\n  rarrc: 10547,\n  rarr: 8594,\n  Rarr: 8608,\n  rArr: 8658,\n  rarrfs: 10526,\n  rarrhk: 8618,\n  rarrlp: 8620,\n  rarrpl: 10565,\n  rarrsim: 10612,\n  Rarrtl: 10518,\n  rarrtl: 8611,\n  rarrw: 8605,\n  ratail: 10522,\n  rAtail: 10524,\n  ratio: 8758,\n  rationals: 8474,\n  rbarr: 10509,\n  rBarr: 10511,\n  RBarr: 10512,\n  rbbrk: 10099,\n  rbrace: 125,\n  rbrack: 93,\n  rbrke: 10636,\n  rbrksld: 10638,\n  rbrkslu: 10640,\n  Rcaron: 344,\n  rcaron: 345,\n  Rcedil: 342,\n  rcedil: 343,\n  rceil: 8969,\n  rcub: 125,\n  Rcy: 1056,\n  rcy: 1088,\n  rdca: 10551,\n  rdldhar: 10601,\n  rdquo: 8221,\n  rdquor: 8221,\n  rdsh: 8627,\n  real: 8476,\n  realine: 8475,\n  realpart: 8476,\n  reals: 8477,\n  Re: 8476,\n  rect: 9645,\n  reg: 174,\n  REG: 174,\n  ReverseElement: 8715,\n  ReverseEquilibrium: 8651,\n  ReverseUpEquilibrium: 10607,\n  rfisht: 10621,\n  rfloor: 8971,\n  rfr: 55349,\n  Rfr: 8476,\n  rHar: 10596,\n  rhard: 8641,\n  rharu: 8640,\n  rharul: 10604,\n  Rho: 929,\n  rho: 961,\n  rhov: 1009,\n  RightAngleBracket: 10217,\n  RightArrowBar: 8677,\n  rightarrow: 8594,\n  RightArrow: 8594,\n  Rightarrow: 8658,\n  RightArrowLeftArrow: 8644,\n  rightarrowtail: 8611,\n  RightCeiling: 8969,\n  RightDoubleBracket: 10215,\n  RightDownTeeVector: 10589,\n  RightDownVectorBar: 10581,\n  RightDownVector: 8642,\n  RightFloor: 8971,\n  rightharpoondown: 8641,\n  rightharpoonup: 8640,\n  rightleftarrows: 8644,\n  rightleftharpoons: 8652,\n  rightrightarrows: 8649,\n  rightsquigarrow: 8605,\n  RightTeeArrow: 8614,\n  RightTee: 8866,\n  RightTeeVector: 10587,\n  rightthreetimes: 8908,\n  RightTriangleBar: 10704,\n  RightTriangle: 8883,\n  RightTriangleEqual: 8885,\n  RightUpDownVector: 10575,\n  RightUpTeeVector: 10588,\n  RightUpVectorBar: 10580,\n  RightUpVector: 8638,\n  RightVectorBar: 10579,\n  RightVector: 8640,\n  ring: 730,\n  risingdotseq: 8787,\n  rlarr: 8644,\n  rlhar: 8652,\n  rlm: 8207,\n  rmoustache: 9137,\n  rmoust: 9137,\n  rnmid: 10990,\n  roang: 10221,\n  roarr: 8702,\n  robrk: 10215,\n  ropar: 10630,\n  ropf: 55349,\n  Ropf: 8477,\n  roplus: 10798,\n  rotimes: 10805,\n  RoundImplies: 10608,\n  rpar: 41,\n  rpargt: 10644,\n  rppolint: 10770,\n  rrarr: 8649,\n  Rrightarrow: 8667,\n  rsaquo: 8250,\n  rscr: 55349,\n  Rscr: 8475,\n  rsh: 8625,\n  Rsh: 8625,\n  rsqb: 93,\n  rsquo: 8217,\n  rsquor: 8217,\n  rthree: 8908,\n  rtimes: 8906,\n  rtri: 9657,\n  rtrie: 8885,\n  rtrif: 9656,\n  rtriltri: 10702,\n  RuleDelayed: 10740,\n  ruluhar: 10600,\n  rx: 8478,\n  Sacute: 346,\n  sacute: 347,\n  sbquo: 8218,\n  scap: 10936,\n  Scaron: 352,\n  scaron: 353,\n  Sc: 10940,\n  sc: 8827,\n  sccue: 8829,\n  sce: 10928,\n  scE: 10932,\n  Scedil: 350,\n  scedil: 351,\n  Scirc: 348,\n  scirc: 349,\n  scnap: 10938,\n  scnE: 10934,\n  scnsim: 8937,\n  scpolint: 10771,\n  scsim: 8831,\n  Scy: 1057,\n  scy: 1089,\n  sdotb: 8865,\n  sdot: 8901,\n  sdote: 10854,\n  searhk: 10533,\n  searr: 8600,\n  seArr: 8664,\n  searrow: 8600,\n  sect: 167,\n  semi: 59,\n  seswar: 10537,\n  setminus: 8726,\n  setmn: 8726,\n  sext: 10038,\n  Sfr: 55349,\n  sfr: 55349,\n  sfrown: 8994,\n  sharp: 9839,\n  SHCHcy: 1065,\n  shchcy: 1097,\n  SHcy: 1064,\n  shcy: 1096,\n  ShortDownArrow: 8595,\n  ShortLeftArrow: 8592,\n  shortmid: 8739,\n  shortparallel: 8741,\n  ShortRightArrow: 8594,\n  ShortUpArrow: 8593,\n  shy: 173,\n  Sigma: 931,\n  sigma: 963,\n  sigmaf: 962,\n  sigmav: 962,\n  sim: 8764,\n  simdot: 10858,\n  sime: 8771,\n  simeq: 8771,\n  simg: 10910,\n  simgE: 10912,\n  siml: 10909,\n  simlE: 10911,\n  simne: 8774,\n  simplus: 10788,\n  simrarr: 10610,\n  slarr: 8592,\n  SmallCircle: 8728,\n  smallsetminus: 8726,\n  smashp: 10803,\n  smeparsl: 10724,\n  smid: 8739,\n  smile: 8995,\n  smt: 10922,\n  smte: 10924,\n  smtes: 10924,\n  SOFTcy: 1068,\n  softcy: 1100,\n  solbar: 9023,\n  solb: 10692,\n  sol: 47,\n  Sopf: 55349,\n  sopf: 55349,\n  spades: 9824,\n  spadesuit: 9824,\n  spar: 8741,\n  sqcap: 8851,\n  sqcaps: 8851,\n  sqcup: 8852,\n  sqcups: 8852,\n  Sqrt: 8730,\n  sqsub: 8847,\n  sqsube: 8849,\n  sqsubset: 8847,\n  sqsubseteq: 8849,\n  sqsup: 8848,\n  sqsupe: 8850,\n  sqsupset: 8848,\n  sqsupseteq: 8850,\n  square: 9633,\n  Square: 9633,\n  SquareIntersection: 8851,\n  SquareSubset: 8847,\n  SquareSubsetEqual: 8849,\n  SquareSuperset: 8848,\n  SquareSupersetEqual: 8850,\n  SquareUnion: 8852,\n  squarf: 9642,\n  squ: 9633,\n  squf: 9642,\n  srarr: 8594,\n  Sscr: 55349,\n  sscr: 55349,\n  ssetmn: 8726,\n  ssmile: 8995,\n  sstarf: 8902,\n  Star: 8902,\n  star: 9734,\n  starf: 9733,\n  straightepsilon: 1013,\n  straightphi: 981,\n  strns: 175,\n  sub: 8834,\n  Sub: 8912,\n  subdot: 10941,\n  subE: 10949,\n  sube: 8838,\n  subedot: 10947,\n  submult: 10945,\n  subnE: 10955,\n  subne: 8842,\n  subplus: 10943,\n  subrarr: 10617,\n  subset: 8834,\n  Subset: 8912,\n  subseteq: 8838,\n  subseteqq: 10949,\n  SubsetEqual: 8838,\n  subsetneq: 8842,\n  subsetneqq: 10955,\n  subsim: 10951,\n  subsub: 10965,\n  subsup: 10963,\n  succapprox: 10936,\n  succ: 8827,\n  succcurlyeq: 8829,\n  Succeeds: 8827,\n  SucceedsEqual: 10928,\n  SucceedsSlantEqual: 8829,\n  SucceedsTilde: 8831,\n  succeq: 10928,\n  succnapprox: 10938,\n  succneqq: 10934,\n  succnsim: 8937,\n  succsim: 8831,\n  SuchThat: 8715,\n  sum: 8721,\n  Sum: 8721,\n  sung: 9834,\n  sup1: 185,\n  sup2: 178,\n  sup3: 179,\n  sup: 8835,\n  Sup: 8913,\n  supdot: 10942,\n  supdsub: 10968,\n  supE: 10950,\n  supe: 8839,\n  supedot: 10948,\n  Superset: 8835,\n  SupersetEqual: 8839,\n  suphsol: 10185,\n  suphsub: 10967,\n  suplarr: 10619,\n  supmult: 10946,\n  supnE: 10956,\n  supne: 8843,\n  supplus: 10944,\n  supset: 8835,\n  Supset: 8913,\n  supseteq: 8839,\n  supseteqq: 10950,\n  supsetneq: 8843,\n  supsetneqq: 10956,\n  supsim: 10952,\n  supsub: 10964,\n  supsup: 10966,\n  swarhk: 10534,\n  swarr: 8601,\n  swArr: 8665,\n  swarrow: 8601,\n  swnwar: 10538,\n  szlig: 223,\n  Tab: NaN,\n  target: 8982,\n  Tau: 932,\n  tau: 964,\n  tbrk: 9140,\n  Tcaron: 356,\n  tcaron: 357,\n  Tcedil: 354,\n  tcedil: 355,\n  Tcy: 1058,\n  tcy: 1090,\n  tdot: 8411,\n  telrec: 8981,\n  Tfr: 55349,\n  tfr: 55349,\n  there4: 8756,\n  therefore: 8756,\n  Therefore: 8756,\n  Theta: 920,\n  theta: 952,\n  thetasym: 977,\n  thetav: 977,\n  thickapprox: 8776,\n  thicksim: 8764,\n  ThickSpace: 8287,\n  ThinSpace: 8201,\n  thinsp: 8201,\n  thkap: 8776,\n  thksim: 8764,\n  THORN: 222,\n  thorn: 254,\n  tilde: 732,\n  Tilde: 8764,\n  TildeEqual: 8771,\n  TildeFullEqual: 8773,\n  TildeTilde: 8776,\n  timesbar: 10801,\n  timesb: 8864,\n  times: 215,\n  timesd: 10800,\n  tint: 8749,\n  toea: 10536,\n  topbot: 9014,\n  topcir: 10993,\n  top: 8868,\n  Topf: 55349,\n  topf: 55349,\n  topfork: 10970,\n  tosa: 10537,\n  tprime: 8244,\n  trade: 8482,\n  TRADE: 8482,\n  triangle: 9653,\n  triangledown: 9663,\n  triangleleft: 9667,\n  trianglelefteq: 8884,\n  triangleq: 8796,\n  triangleright: 9657,\n  trianglerighteq: 8885,\n  tridot: 9708,\n  trie: 8796,\n  triminus: 10810,\n  TripleDot: 8411,\n  triplus: 10809,\n  trisb: 10701,\n  tritime: 10811,\n  trpezium: 9186,\n  Tscr: 55349,\n  tscr: 55349,\n  TScy: 1062,\n  tscy: 1094,\n  TSHcy: 1035,\n  tshcy: 1115,\n  Tstrok: 358,\n  tstrok: 359,\n  twixt: 8812,\n  twoheadleftarrow: 8606,\n  twoheadrightarrow: 8608,\n  Uacute: 218,\n  uacute: 250,\n  uarr: 8593,\n  Uarr: 8607,\n  uArr: 8657,\n  Uarrocir: 10569,\n  Ubrcy: 1038,\n  ubrcy: 1118,\n  Ubreve: 364,\n  ubreve: 365,\n  Ucirc: 219,\n  ucirc: 251,\n  Ucy: 1059,\n  ucy: 1091,\n  udarr: 8645,\n  Udblac: 368,\n  udblac: 369,\n  udhar: 10606,\n  ufisht: 10622,\n  Ufr: 55349,\n  ufr: 55349,\n  Ugrave: 217,\n  ugrave: 249,\n  uHar: 10595,\n  uharl: 8639,\n  uharr: 8638,\n  uhblk: 9600,\n  ulcorn: 8988,\n  ulcorner: 8988,\n  ulcrop: 8975,\n  ultri: 9720,\n  Umacr: 362,\n  umacr: 363,\n  uml: 168,\n  UnderBar: 95,\n  UnderBrace: 9183,\n  UnderBracket: 9141,\n  UnderParenthesis: 9181,\n  Union: 8899,\n  UnionPlus: 8846,\n  Uogon: 370,\n  uogon: 371,\n  Uopf: 55349,\n  uopf: 55349,\n  UpArrowBar: 10514,\n  uparrow: 8593,\n  UpArrow: 8593,\n  Uparrow: 8657,\n  UpArrowDownArrow: 8645,\n  updownarrow: 8597,\n  UpDownArrow: 8597,\n  Updownarrow: 8661,\n  UpEquilibrium: 10606,\n  upharpoonleft: 8639,\n  upharpoonright: 8638,\n  uplus: 8846,\n  UpperLeftArrow: 8598,\n  UpperRightArrow: 8599,\n  upsi: 965,\n  Upsi: 978,\n  upsih: 978,\n  Upsilon: 933,\n  upsilon: 965,\n  UpTeeArrow: 8613,\n  UpTee: 8869,\n  upuparrows: 8648,\n  urcorn: 8989,\n  urcorner: 8989,\n  urcrop: 8974,\n  Uring: 366,\n  uring: 367,\n  urtri: 9721,\n  Uscr: 55349,\n  uscr: 55349,\n  utdot: 8944,\n  Utilde: 360,\n  utilde: 361,\n  utri: 9653,\n  utrif: 9652,\n  uuarr: 8648,\n  Uuml: 220,\n  uuml: 252,\n  uwangle: 10663,\n  vangrt: 10652,\n  varepsilon: 1013,\n  varkappa: 1008,\n  varnothing: 8709,\n  varphi: 981,\n  varpi: 982,\n  varpropto: 8733,\n  varr: 8597,\n  vArr: 8661,\n  varrho: 1009,\n  varsigma: 962,\n  varsubsetneq: 8842,\n  varsubsetneqq: 10955,\n  varsupsetneq: 8843,\n  varsupsetneqq: 10956,\n  vartheta: 977,\n  vartriangleleft: 8882,\n  vartriangleright: 8883,\n  vBar: 10984,\n  Vbar: 10987,\n  vBarv: 10985,\n  Vcy: 1042,\n  vcy: 1074,\n  vdash: 8866,\n  vDash: 8872,\n  Vdash: 8873,\n  VDash: 8875,\n  Vdashl: 10982,\n  veebar: 8891,\n  vee: 8744,\n  Vee: 8897,\n  veeeq: 8794,\n  vellip: 8942,\n  verbar: 124,\n  Verbar: 8214,\n  vert: 124,\n  Vert: 8214,\n  VerticalBar: 8739,\n  VerticalLine: 124,\n  VerticalSeparator: 10072,\n  VerticalTilde: 8768,\n  VeryThinSpace: 8202,\n  Vfr: 55349,\n  vfr: 55349,\n  vltri: 8882,\n  vnsub: 8834,\n  vnsup: 8835,\n  Vopf: 55349,\n  vopf: 55349,\n  vprop: 8733,\n  vrtri: 8883,\n  Vscr: 55349,\n  vscr: 55349,\n  vsubnE: 10955,\n  vsubne: 8842,\n  vsupnE: 10956,\n  vsupne: 8843,\n  Vvdash: 8874,\n  vzigzag: 10650,\n  Wcirc: 372,\n  wcirc: 373,\n  wedbar: 10847,\n  wedge: 8743,\n  Wedge: 8896,\n  wedgeq: 8793,\n  weierp: 8472,\n  Wfr: 55349,\n  wfr: 55349,\n  Wopf: 55349,\n  wopf: 55349,\n  wp: 8472,\n  wr: 8768,\n  wreath: 8768,\n  Wscr: 55349,\n  wscr: 55349,\n  xcap: 8898,\n  xcirc: 9711,\n  xcup: 8899,\n  xdtri: 9661,\n  Xfr: 55349,\n  xfr: 55349,\n  xharr: 10231,\n  xhArr: 10234,\n  Xi: 926,\n  xi: 958,\n  xlarr: 10229,\n  xlArr: 10232,\n  xmap: 10236,\n  xnis: 8955,\n  xodot: 10752,\n  Xopf: 55349,\n  xopf: 55349,\n  xoplus: 10753,\n  xotime: 10754,\n  xrarr: 10230,\n  xrArr: 10233,\n  Xscr: 55349,\n  xscr: 55349,\n  xsqcup: 10758,\n  xuplus: 10756,\n  xutri: 9651,\n  xvee: 8897,\n  xwedge: 8896,\n  Yacute: 221,\n  yacute: 253,\n  YAcy: 1071,\n  yacy: 1103,\n  Ycirc: 374,\n  ycirc: 375,\n  Ycy: 1067,\n  ycy: 1099,\n  yen: 165,\n  Yfr: 55349,\n  yfr: 55349,\n  YIcy: 1031,\n  yicy: 1111,\n  Yopf: 55349,\n  yopf: 55349,\n  Yscr: 55349,\n  yscr: 55349,\n  YUcy: 1070,\n  yucy: 1102,\n  yuml: 255,\n  Yuml: 376,\n  Zacute: 377,\n  zacute: 378,\n  Zcaron: 381,\n  zcaron: 382,\n  Zcy: 1047,\n  zcy: 1079,\n  Zdot: 379,\n  zdot: 380,\n  zeetrf: 8488,\n  ZeroWidthSpace: 8203,\n  Zeta: 918,\n  zeta: 950,\n  zfr: 55349,\n  Zfr: 8488,\n  ZHcy: 1046,\n  zhcy: 1078,\n  zigrarr: 8669,\n  zopf: 55349,\n  Zopf: 8484,\n  Zscr: 55349,\n  zscr: 55349,\n  zwj: 8205,\n  zwnj: 8204 };\n\nvar entityToChar = function(m) {\n    var isNumeric = m.slice(0, 2) === \"&#\";\n    var c;\n    var isHex = isNumeric && (c = m.slice(2, 3)) && (c === 'X' || c === 'x');\n    var uchar;\n    var ucode;\n    if (isNumeric) {\n        var num;\n        if (isHex) {\n            num = parseInt(m.slice(3, m.length - 1), 16);\n        } else {\n            num = parseInt(m.slice(2, m.length - 1), 10);\n        }\n        uchar = fromCodePoint(num);\n    } else {\n        ucode = entities[m.slice(1, m.length - 1)];\n        if (ucode) {\n            uchar = fromCodePoint(entities[m.slice(1, m.length - 1)]);\n        }\n    }\n    return (uchar || m);\n};\n\nmodule.exports.entityToChar = entityToChar;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/html5-entities.js\n ** module id = 12\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/html5-entities.js?");

/***/ },
/* 13 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\n// derived from https://github.com/mathiasbynens/String.fromCodePoint\n/*! http://mths.be/fromcodepoint v0.2.1 by @mathias */\nif (String.fromCodePoint) {\n    module.exports = function (_) {\n        try {\n            return String.fromCodePoint(_);\n        } catch (e) {\n            if (e instanceof RangeError) {\n                return String.fromCharCode(0xFFFD);\n            }\n            throw e;\n        }\n    };\n\n} else {\n\n  var stringFromCharCode = String.fromCharCode;\n  var floor = Math.floor;\n  var fromCodePoint = function() {\n      var MAX_SIZE = 0x4000;\n      var codeUnits = [];\n      var highSurrogate;\n      var lowSurrogate;\n      var index = -1;\n      var length = arguments.length;\n      if (!length) {\n          return '';\n      }\n      var result = '';\n      while (++index < length) {\n          var codePoint = Number(arguments[index]);\n          if (\n              !isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n                  codePoint < 0 || // not a valid Unicode code point\n                  codePoint > 0x10FFFF || // not a valid Unicode code point\n                  floor(codePoint) !== codePoint // not an integer\n          ) {\n              return String.fromCharCode(0xFFFD);\n          }\n          if (codePoint <= 0xFFFF) { // BMP code point\n              codeUnits.push(codePoint);\n          } else { // Astral code point; split in surrogate halves\n              // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n              codePoint -= 0x10000;\n              highSurrogate = (codePoint >> 10) + 0xD800;\n              lowSurrogate = (codePoint % 0x400) + 0xDC00;\n              codeUnits.push(highSurrogate, lowSurrogate);\n          }\n          if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n              result += stringFromCharCode.apply(null, codeUnits);\n              codeUnits.length = 0;\n          }\n      }\n      return result;\n  };\n  module.exports = fromCodePoint;\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/from-code-point.js\n ** module id = 13\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/from-code-point.js?");

/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar Node = __webpack_require__(7);\nvar common = __webpack_require__(9);\nvar normalizeReference = __webpack_require__(15);\n\nvar normalizeURI = common.normalizeURI;\nvar unescapeString = common.unescapeString;\nvar fromCodePoint = __webpack_require__(13);\nvar entityToChar = __webpack_require__(12).entityToChar;\n\n// Constants for character codes:\n\nvar C_NEWLINE = 10;\nvar C_ASTERISK = 42;\nvar C_UNDERSCORE = 95;\nvar C_BACKTICK = 96;\nvar C_OPEN_BRACKET = 91;\nvar C_CLOSE_BRACKET = 93;\nvar C_LESSTHAN = 60;\nvar C_BANG = 33;\nvar C_BACKSLASH = 92;\nvar C_AMPERSAND = 38;\nvar C_OPEN_PAREN = 40;\nvar C_CLOSE_PAREN = 41;\nvar C_COLON = 58;\nvar C_SINGLEQUOTE = 39;\nvar C_DOUBLEQUOTE = 34;\n\n// Some regexps used in inline parser:\n\nvar ESCAPABLE = common.ESCAPABLE;\nvar ESCAPED_CHAR = '\\\\\\\\' + ESCAPABLE;\nvar REG_CHAR = '[^\\\\\\\\()\\\\x00-\\\\x20]';\nvar IN_PARENS_NOSP = '\\\\((' + REG_CHAR + '|' + ESCAPED_CHAR + ')*\\\\)';\nvar TAGNAME = '[A-Za-z][A-Za-z0-9]*';\nvar ATTRIBUTENAME = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\nvar UNQUOTEDVALUE = \"[^\\\"'=<>`\\\\x00-\\\\x20]+\";\nvar SINGLEQUOTEDVALUE = \"'[^']*'\";\nvar DOUBLEQUOTEDVALUE = '\"[^\"]*\"';\nvar ATTRIBUTEVALUE = \"(?:\" + UNQUOTEDVALUE + \"|\" + SINGLEQUOTEDVALUE + \"|\" + DOUBLEQUOTEDVALUE + \")\";\nvar ATTRIBUTEVALUESPEC = \"(?:\" + \"\\\\s*=\" + \"\\\\s*\" + ATTRIBUTEVALUE + \")\";\nvar ATTRIBUTE = \"(?:\" + \"\\\\s+\" + ATTRIBUTENAME + ATTRIBUTEVALUESPEC + \"?)\";\nvar OPENTAG = \"<\" + TAGNAME + ATTRIBUTE + \"*\" + \"\\\\s*/?>\";\nvar CLOSETAG = \"</\" + TAGNAME + \"\\\\s*[>]\";\nvar HTMLCOMMENT = \"<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->\";\nvar PROCESSINGINSTRUCTION = \"[<][?].*?[?][>]\";\nvar DECLARATION = \"<![A-Z]+\" + \"\\\\s+[^>]*>\";\nvar CDATA = \"<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\";\nvar HTMLTAG = \"(?:\" + OPENTAG + \"|\" + CLOSETAG + \"|\" + HTMLCOMMENT + \"|\" +\n        PROCESSINGINSTRUCTION + \"|\" + DECLARATION + \"|\" + CDATA + \")\";\nvar ENTITY = common.ENTITY;\n\nvar rePunctuation = new RegExp(/^[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#\\$%&\\(\\)\\*\\+,\\-\\.\\/:;<=>\\?@\\[\\]\\^_`\\{\\|\\}~]/);\n\nvar reHtmlTag = new RegExp('^' + HTMLTAG, 'i');\n\nvar reLinkTitle = new RegExp(\n    '^(?:\"(' + ESCAPED_CHAR + '|[^\"\\\\x00])*\"' +\n        '|' +\n        '\\'(' + ESCAPED_CHAR + '|[^\\'\\\\x00])*\\'' +\n        '|' +\n        '\\\\((' + ESCAPED_CHAR + '|[^)\\\\x00])*\\\\))');\n\nvar reLinkDestinationBraces = new RegExp(\n    '^(?:[<](?:[^<>\\\\n\\\\\\\\\\\\x00]' + '|' + ESCAPED_CHAR + '|' + '\\\\\\\\)*[>])');\n\nvar reLinkDestination = new RegExp(\n    '^(?:' + REG_CHAR + '+|' + ESCAPED_CHAR + '|' + IN_PARENS_NOSP + ')*');\n\nvar reEscapable = new RegExp('^' + ESCAPABLE);\n\nvar reEntityHere = new RegExp('^' + ENTITY, 'i');\n\nvar reTicks = /`+/;\n\nvar reTicksHere = /^`+/;\n\nvar reEllipses = /\\.\\.\\./g;\n\nvar reDash = /---?/g;\n\nvar reEmailAutolink = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\n\nvar reAutolink = /^<(?:coap|doi|javascript|aaa|aaas|about|acap|cap|cid|crid|data|dav|dict|dns|file|ftp|geo|go|gopher|h323|http|https|iax|icap|im|imap|info|ipp|iris|iris.beep|iris.xpc|iris.xpcs|iris.lwz|ldap|mailto|mid|msrp|msrps|mtqp|mupdate|news|nfs|ni|nih|nntp|opaquelocktoken|pop|pres|rtsp|service|session|shttp|sieve|sip|sips|sms|snmp|soap.beep|soap.beeps|tag|tel|telnet|tftp|thismessage|tn3270|tip|tv|urn|vemmi|ws|wss|xcon|xcon-userid|xmlrpc.beep|xmlrpc.beeps|xmpp|z39.50r|z39.50s|adiumxtra|afp|afs|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|chrome|chrome-extension|com-eventbrite-attendee|content|cvs|dlna-playsingle|dlna-playcontainer|dtn|dvb|ed2k|facetime|feed|finger|fish|gg|git|gizmoproject|gtalk|hcp|icon|ipn|irc|irc6|ircs|itms|jar|jms|keyparc|lastfm|ldaps|magnet|maps|market|message|mms|ms-help|msnim|mumble|mvn|notes|oid|palm|paparazzi|platform|proxy|psyc|query|res|resource|rmi|rsync|rtmp|secondlife|sftp|sgn|skype|smb|soldat|spotify|ssh|steam|svn|teamspeak|things|udp|unreal|ut2004|ventrilo|view-source|webcal|wtai|wyciwyg|xfire|xri|ymsgr):[^<>\\x00-\\x20]*>/i;\n\nvar reSpnl = /^ *(?:\\n *)?/;\n\nvar reWhitespaceChar = /^\\s/;\n\nvar reWhitespace = /\\s+/g;\n\nvar reFinalSpace = / *$/;\n\nvar reInitialSpace = /^ */;\n\nvar reSpaceAtEndOfLine = /^ *(?:\\n|$)/;\n\nvar reLinkLabel = /^\\[(?:[^\\\\\\[\\]]|\\\\[\\[\\]]){0,1000}\\]/;\n\n// Matches a string of non-special characters.\nvar reMain = /^[^\\n`\\[\\]\\\\!<&*_'\"]+/m;\n\nvar text = function(s) {\n    var node = new Node('Text');\n    node._literal = s;\n    return node;\n};\n\n// INLINE PARSER\n\n// These are methods of an InlineParser object, defined below.\n// An InlineParser keeps track of a subject (a string to be\n// parsed) and a position in that subject.\n\n// If re matches at current position in the subject, advance\n// position in subject and return the match; otherwise return null.\nvar match = function(re) {\n    var m = re.exec(this.subject.slice(this.pos));\n    if (m === null) {\n        return null;\n    } else {\n        this.pos += m.index + m[0].length;\n        return m[0];\n    }\n};\n\n// Returns the code for the character at the current subject position, or -1\n// there are no more characters.\nvar peek = function() {\n    if (this.pos < this.subject.length) {\n        return this.subject.charCodeAt(this.pos);\n    } else {\n        return -1;\n    }\n};\n\n// Parse zero or more space characters, including at most one newline\nvar spnl = function() {\n    this.match(reSpnl);\n    return true;\n};\n\n// All of the parsers below try to match something at the current position\n// in the subject.  If they succeed in matching anything, they\n// return the inline matched, advancing the subject.\n\n// Attempt to parse backticks, adding either a backtick code span or a\n// literal sequence of backticks.\nvar parseBackticks = function(block) {\n    var ticks = this.match(reTicksHere);\n    if (ticks === null) {\n        return false;\n    }\n    var afterOpenTicks = this.pos;\n    var matched;\n    var node;\n    while ((matched = this.match(reTicks)) !== null) {\n        if (matched === ticks) {\n            node = new Node('Code');\n            node._literal = this.subject.slice(afterOpenTicks,\n                                        this.pos - ticks.length)\n                          .trim().replace(reWhitespace, ' ');\n            block.appendChild(node);\n            return true;\n        }\n    }\n    // If we got here, we didn't match a closing backtick sequence.\n    this.pos = afterOpenTicks;\n    block.appendChild(text(ticks));\n    return true;\n};\n\n// Parse a backslash-escaped special character, adding either the escaped\n// character, a hard line break (if the backslash is followed by a newline),\n// or a literal backslash to the block's children.  Assumes current character\n// is a backslash.\nvar parseBackslash = function(block) {\n    var subj = this.subject;\n    var node;\n    this.pos += 1;\n    if (this.peek() === C_NEWLINE) {\n        this.pos += 1;\n        node = new Node('Hardbreak');\n        block.appendChild(node);\n    } else if (reEscapable.test(subj.charAt(this.pos))) {\n        block.appendChild(text(subj.charAt(this.pos)));\n        this.pos += 1;\n    } else {\n        block.appendChild(text('\\\\'));\n    }\n    return true;\n};\n\n// Attempt to parse an autolink (URL or email in pointy brackets).\nvar parseAutolink = function(block) {\n    var m;\n    var dest;\n    var node;\n    if ((m = this.match(reEmailAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node('Link');\n        node._destination = normalizeURI('mailto:' + dest);\n        node._title = '';\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else if ((m = this.match(reAutolink))) {\n        dest = m.slice(1, m.length - 1);\n        node = new Node('Link');\n        node._destination = normalizeURI(dest);\n        node._title = '';\n        node.appendChild(text(dest));\n        block.appendChild(node);\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Attempt to parse a raw HTML tag.\nvar parseHtmlTag = function(block) {\n    var m = this.match(reHtmlTag);\n    if (m === null) {\n        return false;\n    } else {\n        var node = new Node('Html');\n        node._literal = m;\n        block.appendChild(node);\n        return true;\n    }\n};\n\n// Scan a sequence of characters with code cc, and return information about\n// the number of delimiters and whether they are positioned such that\n// they can open and/or close emphasis or strong emphasis.  A utility\n// function for strong/emph parsing.\nvar scanDelims = function(cc) {\n    var numdelims = 0;\n    var char_before, char_after, cc_after;\n    var startpos = this.pos;\n    var left_flanking, right_flanking, can_open, can_close;\n\n    char_before = this.pos === 0 ? '\\n' :\n        this.subject.charAt(this.pos - 1);\n\n    if (cc === C_SINGLEQUOTE || cc === C_DOUBLEQUOTE) {\n        numdelims++;\n        this.pos++;\n    } else {\n        while (this.peek() === cc) {\n            numdelims++;\n            this.pos++;\n        }\n    }\n\n    cc_after = this.peek();\n    if (cc_after === -1) {\n        char_after = '\\n';\n    } else {\n        char_after = fromCodePoint(cc_after);\n    }\n\n    left_flanking = numdelims > 0 &&\n            !(reWhitespaceChar.test(char_after)) &&\n            !(rePunctuation.test(char_after) &&\n             !(reWhitespaceChar.test(char_before)) &&\n             !(rePunctuation.test(char_before)));\n    right_flanking = numdelims > 0 &&\n            !(reWhitespaceChar.test(char_before)) &&\n            !(rePunctuation.test(char_before) &&\n              !(reWhitespaceChar.test(char_after)) &&\n              !(rePunctuation.test(char_after)));\n    if (cc === C_UNDERSCORE) {\n        can_open = left_flanking &&\n            (!right_flanking || rePunctuation.test(char_before));\n        can_close = right_flanking &&\n            (!left_flanking || rePunctuation.test(char_after));\n    } else {\n        can_open = left_flanking;\n        can_close = right_flanking;\n    }\n    this.pos = startpos;\n    return { numdelims: numdelims,\n             can_open: can_open,\n             can_close: can_close };\n};\n\n// Handle a delimiter marker for emphasis or a quote.\nvar handleDelim = function(cc, block) {\n    var res = this.scanDelims(cc);\n    var numdelims = res.numdelims;\n    var startpos = this.pos;\n    var contents;\n\n    if (numdelims === 0) {\n        return false;\n    }\n\n    this.pos += numdelims;\n    if (cc === C_SINGLEQUOTE) {\n        contents = \"\\u2019\";\n    } else if (cc === C_DOUBLEQUOTE) {\n        contents = \"\\u201C\";\n    } else {\n        contents = this.subject.slice(startpos, this.pos);\n    }\n    var node = text(contents);\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.delimiters = { cc: cc,\n                        numdelims: numdelims,\n                        node: node,\n                        previous: this.delimiters,\n                        next: null,\n                        can_open: res.can_open,\n                        can_close: res.can_close,\n                        active: true };\n    if (this.delimiters.previous !== null) {\n        this.delimiters.previous.next = this.delimiters;\n    }\n\n    return true;\n\n};\n\nvar removeDelimiter = function(delim) {\n    if (delim.previous !== null) {\n        delim.previous.next = delim.next;\n    }\n    if (delim.next === null) {\n        // top of stack\n        this.delimiters = delim.previous;\n    } else {\n        delim.next.previous = delim.previous;\n    }\n};\n\nvar removeDelimitersBetween = function(bottom, top) {\n    if (bottom.next !== top) {\n        bottom.next = top;\n        top.previous = bottom;\n    }\n};\n\nvar processEmphasis = function(stack_bottom) {\n    var opener, closer;\n    var opener_inl, closer_inl;\n    var tempstack;\n    var use_delims;\n    var tmp, next;\n\n    // find first closer above stack_bottom:\n    closer = this.delimiters;\n    while (closer !== null && closer.previous !== stack_bottom) {\n        closer = closer.previous;\n    }\n    // move forward, looking for closers, and handling each\n    while (closer !== null) {\n        var closercc = closer.cc;\n        if (!(closer.can_close && (closercc === C_UNDERSCORE ||\n                                   closercc === C_ASTERISK ||\n                                   closercc === C_SINGLEQUOTE ||\n                                   closercc === C_DOUBLEQUOTE))) {\n            closer = closer.next;\n        } else {\n            // found emphasis closer. now look back for first matching opener:\n            opener = closer.previous;\n            while (opener !== null && opener !== stack_bottom) {\n                if (opener.cc === closer.cc && opener.can_open) {\n                    break;\n                }\n                opener = opener.previous;\n            }\n            if (closercc === C_ASTERISK || closercc === C_UNDERSCORE) {\n                if (opener === null || opener === stack_bottom) {\n                    closer = closer.next;\n                } else {\n                    // calculate actual number of delimiters used from closer\n                    if (closer.numdelims < 3 || opener.numdelims < 3) {\n                        use_delims = closer.numdelims <= opener.numdelims ?\n                            closer.numdelims : opener.numdelims;\n                    } else {\n                        use_delims = closer.numdelims % 2 === 0 ? 2 : 1;\n                    }\n\n                    opener_inl = opener.node;\n                    closer_inl = closer.node;\n\n                    // remove used delimiters from stack elts and inlines\n                    opener.numdelims -= use_delims;\n                    closer.numdelims -= use_delims;\n                    opener_inl._literal =\n                        opener_inl._literal.slice(0,\n                                                  opener_inl._literal.length - use_delims);\n                    closer_inl._literal =\n                        closer_inl._literal.slice(0,\n                                                  closer_inl._literal.length - use_delims);\n\n                    // build contents for new emph element\n                    var emph = new Node(use_delims === 1 ? 'Emph' : 'Strong');\n\n                    tmp = opener_inl._next;\n                    while (tmp && tmp !== closer_inl) {\n                        next = tmp._next;\n                        tmp.unlink();\n                        emph.appendChild(tmp);\n                        tmp = next;\n                    }\n\n                    opener_inl.insertAfter(emph);\n\n                    // remove elts between opener and closer in delimiters stack\n                    removeDelimitersBetween(opener, closer);\n\n                    // if opener has 0 delims, remove it and the inline\n                    if (opener.numdelims === 0) {\n                        opener_inl.unlink();\n                        this.removeDelimiter(opener);\n                    }\n\n                    if (closer.numdelims === 0) {\n                        closer_inl.unlink();\n                        tempstack = closer.next;\n                        this.removeDelimiter(closer);\n                        closer = tempstack;\n                    }\n\n                }\n\n            } else if (closercc === C_SINGLEQUOTE) {\n                closer.node._literal = \"\\u2019\";\n                if (opener !== null && opener !== stack_bottom) {\n                    opener.node._literal = \"\\u2018\";\n                }\n                closer = closer.next;\n\n            } else if (closercc === C_DOUBLEQUOTE) {\n                closer.node._literal = \"\\u201D\";\n                if (opener !== null && opener !== stack_bottom) {\n                    opener.node.literal = \"\\u201C\";\n                }\n                closer = closer.next;\n\n            }\n\n        }\n\n    }\n\n    // remove all delimiters\n    while (this.delimiters !== stack_bottom) {\n        this.removeDelimiter(this.delimiters);\n    }\n};\n\n// Attempt to parse link title (sans quotes), returning the string\n// or null if no match.\nvar parseLinkTitle = function() {\n    var title = this.match(reLinkTitle);\n    if (title === null) {\n        return null;\n    } else {\n        // chop off quotes from title and unescape:\n        return unescapeString(title.substr(1, title.length - 2));\n    }\n};\n\n// Attempt to parse link destination, returning the string or\n// null if no match.\nvar parseLinkDestination = function() {\n    var res = this.match(reLinkDestinationBraces);\n    if (res === null) {\n        res = this.match(reLinkDestination);\n        if (res === null) {\n            return null;\n        } else {\n            return normalizeURI(unescapeString(res));\n        }\n    } else {  // chop off surrounding <..>:\n        return normalizeURI(unescapeString(res.substr(1, res.length - 2)));\n    }\n};\n\n// Attempt to parse a link label, returning number of characters parsed.\nvar parseLinkLabel = function() {\n    var m = this.match(reLinkLabel);\n    return m === null ? 0 : m.length;\n};\n\n// Add open bracket to delimiter stack and add a text node to block's children.\nvar parseOpenBracket = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n\n    var node = text('[');\n    block.appendChild(node);\n\n    // Add entry to stack for this opener\n    this.delimiters = { cc: C_OPEN_BRACKET,\n                        numdelims: 1,\n                        node: node,\n                        previous: this.delimiters,\n                        next: null,\n                        can_open: true,\n                        can_close: false,\n                        index: startpos,\n                        active: true };\n    if (this.delimiters.previous !== null) {\n        this.delimiters.previous.next = this.delimiters;\n    }\n\n    return true;\n\n};\n\n// IF next character is [, and ! delimiter to delimiter stack and\n// add a text node to block's children.  Otherwise just add a text node.\nvar parseBang = function(block) {\n    var startpos = this.pos;\n    this.pos += 1;\n    if (this.peek() === C_OPEN_BRACKET) {\n        this.pos += 1;\n\n        var node = text('![');\n        block.appendChild(node);\n\n        // Add entry to stack for this opener\n        this.delimiters = { cc: C_BANG,\n                            numdelims: 1,\n                            node: node,\n                            previous: this.delimiters,\n                            next: null,\n                            can_open: true,\n                            can_close: false,\n                            index: startpos + 1,\n                            active: true };\n        if (this.delimiters.previous !== null) {\n            this.delimiters.previous.next = this.delimiters;\n        }\n    } else {\n        block.appendChild(text('!'));\n    }\n    return true;\n};\n\n// Try to match close bracket against an opening in the delimiter\n// stack.  Add either a link or image, or a plain [ character,\n// to block's children.  If there is a matching delimiter,\n// remove it from the delimiter stack.\nvar parseCloseBracket = function(block) {\n    var startpos;\n    var is_image;\n    var dest;\n    var title;\n    var matched = false;\n    var reflabel;\n    var opener;\n\n    this.pos += 1;\n    startpos = this.pos;\n\n    // look through stack of delimiters for a [ or ![\n    opener = this.delimiters;\n\n    while (opener !== null) {\n        if (opener.cc === C_OPEN_BRACKET || opener.cc === C_BANG) {\n            break;\n        }\n        opener = opener.previous;\n    }\n\n    if (opener === null) {\n        // no matched opener, just return a literal\n        block.appendChild(text(']'));\n        return true;\n    }\n\n    if (!opener.active) {\n        // no matched opener, just return a literal\n        block.appendChild(text(']'));\n        // take opener off emphasis stack\n        this.removeDelimiter(opener);\n        return true;\n    }\n\n    // If we got here, open is a potential opener\n    is_image = opener.cc === C_BANG;\n\n    // Check to see if we have a link/image\n\n    // Inline link?\n    if (this.peek() === C_OPEN_PAREN) {\n        this.pos++;\n        if (this.spnl() &&\n            ((dest = this.parseLinkDestination()) !== null) &&\n            this.spnl() &&\n            // make sure there's a space before the title:\n            (reWhitespaceChar.test(this.subject.charAt(this.pos - 1)) &&\n             (title = this.parseLinkTitle()) || true) &&\n            this.spnl() &&\n            this.peek() === C_CLOSE_PAREN) {\n            this.pos += 1;\n            matched = true;\n        }\n    } else {\n\n        // Next, see if there's a link label\n        var savepos = this.pos;\n        this.spnl();\n        var beforelabel = this.pos;\n        var n = this.parseLinkLabel();\n        if (n === 0 || n === 2) {\n            // empty or missing second label\n            reflabel = this.subject.slice(opener.index, startpos);\n        } else {\n            reflabel = this.subject.slice(beforelabel, beforelabel + n);\n        }\n        if (n === 0) {\n            // If shortcut reference link, rewind before spaces we skipped.\n            this.pos = savepos;\n        }\n\n        // lookup rawlabel in refmap\n        var link = this.refmap[normalizeReference(reflabel)];\n        if (link) {\n            dest = link.destination;\n            title = link.title;\n            matched = true;\n        }\n    }\n\n    if (matched) {\n        var node = new Node(is_image ? 'Image' : 'Link');\n        node._destination = dest;\n        node._title = title || '';\n\n        var tmp, next;\n        tmp = opener.node._next;\n        while (tmp) {\n            next = tmp._next;\n            tmp.unlink();\n            node.appendChild(tmp);\n            tmp = next;\n        }\n        block.appendChild(node);\n        this.processEmphasis(opener.previous);\n\n        opener.node.unlink();\n\n        // processEmphasis will remove this and later delimiters.\n        // Now, for a link, we also deactivate earlier link openers.\n        // (no links in links)\n        if (!is_image) {\n          opener = this.delimiters;\n          while (opener !== null) {\n            if (opener.cc === C_OPEN_BRACKET) {\n                opener.active = false; // deactivate this opener\n            }\n            opener = opener.previous;\n          }\n        }\n\n        return true;\n\n    } else { // no match\n\n        this.removeDelimiter(opener);  // remove this opener from stack\n        this.pos = startpos;\n        block.appendChild(text(']'));\n        return true;\n    }\n\n};\n\n// Attempt to parse an entity.\nvar parseEntity = function(block) {\n    var m;\n    if ((m = this.match(reEntityHere))) {\n        block.appendChild(text(entityToChar(m)));\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a run of ordinary characters, or a single character with\n// a special meaning in markdown, as a plain string.\nvar parseString = function(block) {\n    var m;\n    if ((m = this.match(reMain))) {\n        if (this.options.smart) {\n            block.appendChild(text(\n                m.replace(reEllipses, \"\\u2026\")\n                    .replace(reDash, function(chars) {\n                        return (chars.length === 3) ? \"\\u2014\" : \"\\u2013\";\n                    })));\n        } else {\n            block.appendChild(text(m));\n        }\n        return true;\n    } else {\n        return false;\n    }\n};\n\n// Parse a newline.  If it was preceded by two spaces, return a hard\n// line break; otherwise a soft line break.\nvar parseNewline = function(block) {\n    this.pos += 1; // assume we're at a \\n\n    // check previous node for trailing spaces\n    var lastc = block._lastChild;\n    if (lastc && lastc.type === 'Text' && lastc._literal[lastc._literal.length - 1] === ' ') {\n        var hardbreak = lastc._literal[lastc._literal.length - 2] === ' ';\n        lastc._literal = lastc._literal.replace(reFinalSpace, '');\n        block.appendChild(new Node(hardbreak ? 'Hardbreak' : 'Softbreak'));\n    } else {\n        block.appendChild(new Node('Softbreak'));\n    }\n    this.match(reInitialSpace); // gobble leading spaces in next line\n    return true;\n};\n\n// Attempt to parse a link reference, modifying refmap.\nvar parseReference = function(s, refmap) {\n    this.subject = s;\n    this.pos = 0;\n    var rawlabel;\n    var dest;\n    var title;\n    var matchChars;\n    var startpos = this.pos;\n\n    // label:\n    matchChars = this.parseLinkLabel();\n    if (matchChars === 0) {\n        return 0;\n    } else {\n        rawlabel = this.subject.substr(0, matchChars);\n    }\n\n    // colon:\n    if (this.peek() === C_COLON) {\n        this.pos++;\n    } else {\n        this.pos = startpos;\n        return 0;\n    }\n\n    //  link url\n    this.spnl();\n\n    dest = this.parseLinkDestination();\n    if (dest === null || dest.length === 0) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var beforetitle = this.pos;\n    this.spnl();\n    title = this.parseLinkTitle();\n    if (title === null) {\n        title = '';\n        // rewind before spaces\n        this.pos = beforetitle;\n    }\n\n    // make sure we're at line end:\n    if (this.match(reSpaceAtEndOfLine) === null) {\n        this.pos = startpos;\n        return 0;\n    }\n\n    var normlabel = normalizeReference(rawlabel);\n\n    if (!refmap[normlabel]) {\n        refmap[normlabel] = { destination: dest, title: title };\n    }\n    return this.pos - startpos;\n};\n\n// Parse the next inline element in subject, advancing subject position.\n// On success, add the result to block's children and return true.\n// On failure, return false.\nvar parseInline = function(block) {\n    var res = false;\n    var c = this.peek();\n    if (c === -1) {\n        return false;\n    }\n    switch(c) {\n    case C_NEWLINE:\n        res = this.parseNewline(block);\n        break;\n    case C_BACKSLASH:\n        res = this.parseBackslash(block);\n        break;\n    case C_BACKTICK:\n        res = this.parseBackticks(block);\n        break;\n    case C_ASTERISK:\n    case C_UNDERSCORE:\n        res = this.handleDelim(c, block);\n        break;\n    case C_SINGLEQUOTE:\n    case C_DOUBLEQUOTE:\n        res = this.options.smart && this.handleDelim(c, block);\n        break;\n    case C_OPEN_BRACKET:\n        res = this.parseOpenBracket(block);\n        break;\n    case C_BANG:\n        res = this.parseBang(block);\n        break;\n    case C_CLOSE_BRACKET:\n        res = this.parseCloseBracket(block);\n        break;\n    case C_LESSTHAN:\n        res = this.parseAutolink(block) || this.parseHtmlTag(block);\n        break;\n    case C_AMPERSAND:\n        res = this.parseEntity(block);\n        break;\n    default:\n        res = this.parseString(block);\n        break;\n    }\n    if (!res) {\n        this.pos += 1;\n        block.appendChild(text(fromCodePoint(c)));\n    }\n\n    return true;\n};\n\n// Parse string content in block into inline children,\n// using refmap to resolve references.\nvar parseInlines = function(block) {\n    this.subject = block._string_content.trim();\n    this.pos = 0;\n    this.delimiters = null;\n    while (this.parseInline(block)) {\n    }\n    block._string_content = null; // allow raw string to be garbage collected\n    this.processEmphasis(null);\n};\n\n// The InlineParser object.\nfunction InlineParser(options){\n    return {\n        subject: '',\n        delimiters: null,  // used by handleDelim method\n        pos: 0,\n        refmap: {},\n        match: match,\n        peek: peek,\n        spnl: spnl,\n        parseBackticks: parseBackticks,\n        parseBackslash: parseBackslash,\n        parseAutolink: parseAutolink,\n        parseHtmlTag: parseHtmlTag,\n        scanDelims: scanDelims,\n        handleDelim: handleDelim,\n        parseLinkTitle: parseLinkTitle,\n        parseLinkDestination: parseLinkDestination,\n        parseLinkLabel: parseLinkLabel,\n        parseOpenBracket: parseOpenBracket,\n        parseCloseBracket: parseCloseBracket,\n        parseBang: parseBang,\n        parseEntity: parseEntity,\n        parseString: parseString,\n        parseNewline: parseNewline,\n        parseReference: parseReference,\n        parseInline: parseInline,\n        processEmphasis: processEmphasis,\n        removeDelimiter: removeDelimiter,\n        options: options || {},\n        parse: parseInlines\n    };\n}\n\nmodule.exports = InlineParser;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/inlines.js\n ** module id = 14\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/inlines.js?");

/***/ },
/* 15 */
/***/ function(module, exports) {

	eval("\"use strict\";\n\n/* The bulk of this code derives from https://github.com/dmoscrop/fold-case\nBut in addition to case-folding, we also normalize whitespace.\n\nfold-case is Copyright Mathias Bynens <https://mathiasbynens.be/>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*eslint-disable  key-spacing, comma-spacing */\n\nvar regex = /[ \\t\\r\\n]+|[A-Z\\xB5\\xC0-\\xD6\\xD8-\\xDF\\u0100\\u0102\\u0104\\u0106\\u0108\\u010A\\u010C\\u010E\\u0110\\u0112\\u0114\\u0116\\u0118\\u011A\\u011C\\u011E\\u0120\\u0122\\u0124\\u0126\\u0128\\u012A\\u012C\\u012E\\u0130\\u0132\\u0134\\u0136\\u0139\\u013B\\u013D\\u013F\\u0141\\u0143\\u0145\\u0147\\u0149\\u014A\\u014C\\u014E\\u0150\\u0152\\u0154\\u0156\\u0158\\u015A\\u015C\\u015E\\u0160\\u0162\\u0164\\u0166\\u0168\\u016A\\u016C\\u016E\\u0170\\u0172\\u0174\\u0176\\u0178\\u0179\\u017B\\u017D\\u017F\\u0181\\u0182\\u0184\\u0186\\u0187\\u0189-\\u018B\\u018E-\\u0191\\u0193\\u0194\\u0196-\\u0198\\u019C\\u019D\\u019F\\u01A0\\u01A2\\u01A4\\u01A6\\u01A7\\u01A9\\u01AC\\u01AE\\u01AF\\u01B1-\\u01B3\\u01B5\\u01B7\\u01B8\\u01BC\\u01C4\\u01C5\\u01C7\\u01C8\\u01CA\\u01CB\\u01CD\\u01CF\\u01D1\\u01D3\\u01D5\\u01D7\\u01D9\\u01DB\\u01DE\\u01E0\\u01E2\\u01E4\\u01E6\\u01E8\\u01EA\\u01EC\\u01EE\\u01F0-\\u01F2\\u01F4\\u01F6-\\u01F8\\u01FA\\u01FC\\u01FE\\u0200\\u0202\\u0204\\u0206\\u0208\\u020A\\u020C\\u020E\\u0210\\u0212\\u0214\\u0216\\u0218\\u021A\\u021C\\u021E\\u0220\\u0222\\u0224\\u0226\\u0228\\u022A\\u022C\\u022E\\u0230\\u0232\\u023A\\u023B\\u023D\\u023E\\u0241\\u0243-\\u0246\\u0248\\u024A\\u024C\\u024E\\u0345\\u0370\\u0372\\u0376\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03AB\\u03B0\\u03C2\\u03CF-\\u03D1\\u03D5\\u03D6\\u03D8\\u03DA\\u03DC\\u03DE\\u03E0\\u03E2\\u03E4\\u03E6\\u03E8\\u03EA\\u03EC\\u03EE\\u03F0\\u03F1\\u03F4\\u03F5\\u03F7\\u03F9\\u03FA\\u03FD-\\u042F\\u0460\\u0462\\u0464\\u0466\\u0468\\u046A\\u046C\\u046E\\u0470\\u0472\\u0474\\u0476\\u0478\\u047A\\u047C\\u047E\\u0480\\u048A\\u048C\\u048E\\u0490\\u0492\\u0494\\u0496\\u0498\\u049A\\u049C\\u049E\\u04A0\\u04A2\\u04A4\\u04A6\\u04A8\\u04AA\\u04AC\\u04AE\\u04B0\\u04B2\\u04B4\\u04B6\\u04B8\\u04BA\\u04BC\\u04BE\\u04C0\\u04C1\\u04C3\\u04C5\\u04C7\\u04C9\\u04CB\\u04CD\\u04D0\\u04D2\\u04D4\\u04D6\\u04D8\\u04DA\\u04DC\\u04DE\\u04E0\\u04E2\\u04E4\\u04E6\\u04E8\\u04EA\\u04EC\\u04EE\\u04F0\\u04F2\\u04F4\\u04F6\\u04F8\\u04FA\\u04FC\\u04FE\\u0500\\u0502\\u0504\\u0506\\u0508\\u050A\\u050C\\u050E\\u0510\\u0512\\u0514\\u0516\\u0518\\u051A\\u051C\\u051E\\u0520\\u0522\\u0524\\u0526\\u0528\\u052A\\u052C\\u052E\\u0531-\\u0556\\u0587\\u10A0-\\u10C5\\u10C7\\u10CD\\u1E00\\u1E02\\u1E04\\u1E06\\u1E08\\u1E0A\\u1E0C\\u1E0E\\u1E10\\u1E12\\u1E14\\u1E16\\u1E18\\u1E1A\\u1E1C\\u1E1E\\u1E20\\u1E22\\u1E24\\u1E26\\u1E28\\u1E2A\\u1E2C\\u1E2E\\u1E30\\u1E32\\u1E34\\u1E36\\u1E38\\u1E3A\\u1E3C\\u1E3E\\u1E40\\u1E42\\u1E44\\u1E46\\u1E48\\u1E4A\\u1E4C\\u1E4E\\u1E50\\u1E52\\u1E54\\u1E56\\u1E58\\u1E5A\\u1E5C\\u1E5E\\u1E60\\u1E62\\u1E64\\u1E66\\u1E68\\u1E6A\\u1E6C\\u1E6E\\u1E70\\u1E72\\u1E74\\u1E76\\u1E78\\u1E7A\\u1E7C\\u1E7E\\u1E80\\u1E82\\u1E84\\u1E86\\u1E88\\u1E8A\\u1E8C\\u1E8E\\u1E90\\u1E92\\u1E94\\u1E96-\\u1E9B\\u1E9E\\u1EA0\\u1EA2\\u1EA4\\u1EA6\\u1EA8\\u1EAA\\u1EAC\\u1EAE\\u1EB0\\u1EB2\\u1EB4\\u1EB6\\u1EB8\\u1EBA\\u1EBC\\u1EBE\\u1EC0\\u1EC2\\u1EC4\\u1EC6\\u1EC8\\u1ECA\\u1ECC\\u1ECE\\u1ED0\\u1ED2\\u1ED4\\u1ED6\\u1ED8\\u1EDA\\u1EDC\\u1EDE\\u1EE0\\u1EE2\\u1EE4\\u1EE6\\u1EE8\\u1EEA\\u1EEC\\u1EEE\\u1EF0\\u1EF2\\u1EF4\\u1EF6\\u1EF8\\u1EFA\\u1EFC\\u1EFE\\u1F08-\\u1F0F\\u1F18-\\u1F1D\\u1F28-\\u1F2F\\u1F38-\\u1F3F\\u1F48-\\u1F4D\\u1F50\\u1F52\\u1F54\\u1F56\\u1F59\\u1F5B\\u1F5D\\u1F5F\\u1F68-\\u1F6F\\u1F80-\\u1FAF\\u1FB2-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD2\\u1FD3\\u1FD6-\\u1FDB\\u1FE2-\\u1FE4\\u1FE6-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2126\\u212A\\u212B\\u2132\\u2160-\\u216F\\u2183\\u24B6-\\u24CF\\u2C00-\\u2C2E\\u2C60\\u2C62-\\u2C64\\u2C67\\u2C69\\u2C6B\\u2C6D-\\u2C70\\u2C72\\u2C75\\u2C7E-\\u2C80\\u2C82\\u2C84\\u2C86\\u2C88\\u2C8A\\u2C8C\\u2C8E\\u2C90\\u2C92\\u2C94\\u2C96\\u2C98\\u2C9A\\u2C9C\\u2C9E\\u2CA0\\u2CA2\\u2CA4\\u2CA6\\u2CA8\\u2CAA\\u2CAC\\u2CAE\\u2CB0\\u2CB2\\u2CB4\\u2CB6\\u2CB8\\u2CBA\\u2CBC\\u2CBE\\u2CC0\\u2CC2\\u2CC4\\u2CC6\\u2CC8\\u2CCA\\u2CCC\\u2CCE\\u2CD0\\u2CD2\\u2CD4\\u2CD6\\u2CD8\\u2CDA\\u2CDC\\u2CDE\\u2CE0\\u2CE2\\u2CEB\\u2CED\\u2CF2\\uA640\\uA642\\uA644\\uA646\\uA648\\uA64A\\uA64C\\uA64E\\uA650\\uA652\\uA654\\uA656\\uA658\\uA65A\\uA65C\\uA65E\\uA660\\uA662\\uA664\\uA666\\uA668\\uA66A\\uA66C\\uA680\\uA682\\uA684\\uA686\\uA688\\uA68A\\uA68C\\uA68E\\uA690\\uA692\\uA694\\uA696\\uA698\\uA69A\\uA722\\uA724\\uA726\\uA728\\uA72A\\uA72C\\uA72E\\uA732\\uA734\\uA736\\uA738\\uA73A\\uA73C\\uA73E\\uA740\\uA742\\uA744\\uA746\\uA748\\uA74A\\uA74C\\uA74E\\uA750\\uA752\\uA754\\uA756\\uA758\\uA75A\\uA75C\\uA75E\\uA760\\uA762\\uA764\\uA766\\uA768\\uA76A\\uA76C\\uA76E\\uA779\\uA77B\\uA77D\\uA77E\\uA780\\uA782\\uA784\\uA786\\uA78B\\uA78D\\uA790\\uA792\\uA796\\uA798\\uA79A\\uA79C\\uA79E\\uA7A0\\uA7A2\\uA7A4\\uA7A6\\uA7A8\\uA7AA-\\uA7AD\\uA7B0\\uA7B1\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFF21-\\uFF3A]|\\uD801[\\uDC00-\\uDC27]|\\uD806[\\uDCA0-\\uDCBF]/g;\n\nvar map = {'A':'a','B':'b','C':'c','D':'d','E':'e','F':'f','G':'g','H':'h','I':'i','J':'j','K':'k','L':'l','M':'m','N':'n','O':'o','P':'p','Q':'q','R':'r','S':'s','T':'t','U':'u','V':'v','W':'w','X':'x','Y':'y','Z':'z','\\xB5':'\\u03BC','\\xC0':'\\xE0','\\xC1':'\\xE1','\\xC2':'\\xE2','\\xC3':'\\xE3','\\xC4':'\\xE4','\\xC5':'\\xE5','\\xC6':'\\xE6','\\xC7':'\\xE7','\\xC8':'\\xE8','\\xC9':'\\xE9','\\xCA':'\\xEA','\\xCB':'\\xEB','\\xCC':'\\xEC','\\xCD':'\\xED','\\xCE':'\\xEE','\\xCF':'\\xEF','\\xD0':'\\xF0','\\xD1':'\\xF1','\\xD2':'\\xF2','\\xD3':'\\xF3','\\xD4':'\\xF4','\\xD5':'\\xF5','\\xD6':'\\xF6','\\xD8':'\\xF8','\\xD9':'\\xF9','\\xDA':'\\xFA','\\xDB':'\\xFB','\\xDC':'\\xFC','\\xDD':'\\xFD','\\xDE':'\\xFE','\\u0100':'\\u0101','\\u0102':'\\u0103','\\u0104':'\\u0105','\\u0106':'\\u0107','\\u0108':'\\u0109','\\u010A':'\\u010B','\\u010C':'\\u010D','\\u010E':'\\u010F','\\u0110':'\\u0111','\\u0112':'\\u0113','\\u0114':'\\u0115','\\u0116':'\\u0117','\\u0118':'\\u0119','\\u011A':'\\u011B','\\u011C':'\\u011D','\\u011E':'\\u011F','\\u0120':'\\u0121','\\u0122':'\\u0123','\\u0124':'\\u0125','\\u0126':'\\u0127','\\u0128':'\\u0129','\\u012A':'\\u012B','\\u012C':'\\u012D','\\u012E':'\\u012F','\\u0132':'\\u0133','\\u0134':'\\u0135','\\u0136':'\\u0137','\\u0139':'\\u013A','\\u013B':'\\u013C','\\u013D':'\\u013E','\\u013F':'\\u0140','\\u0141':'\\u0142','\\u0143':'\\u0144','\\u0145':'\\u0146','\\u0147':'\\u0148','\\u014A':'\\u014B','\\u014C':'\\u014D','\\u014E':'\\u014F','\\u0150':'\\u0151','\\u0152':'\\u0153','\\u0154':'\\u0155','\\u0156':'\\u0157','\\u0158':'\\u0159','\\u015A':'\\u015B','\\u015C':'\\u015D','\\u015E':'\\u015F','\\u0160':'\\u0161','\\u0162':'\\u0163','\\u0164':'\\u0165','\\u0166':'\\u0167','\\u0168':'\\u0169','\\u016A':'\\u016B','\\u016C':'\\u016D','\\u016E':'\\u016F','\\u0170':'\\u0171','\\u0172':'\\u0173','\\u0174':'\\u0175','\\u0176':'\\u0177','\\u0178':'\\xFF','\\u0179':'\\u017A','\\u017B':'\\u017C','\\u017D':'\\u017E','\\u017F':'s','\\u0181':'\\u0253','\\u0182':'\\u0183','\\u0184':'\\u0185','\\u0186':'\\u0254','\\u0187':'\\u0188','\\u0189':'\\u0256','\\u018A':'\\u0257','\\u018B':'\\u018C','\\u018E':'\\u01DD','\\u018F':'\\u0259','\\u0190':'\\u025B','\\u0191':'\\u0192','\\u0193':'\\u0260','\\u0194':'\\u0263','\\u0196':'\\u0269','\\u0197':'\\u0268','\\u0198':'\\u0199','\\u019C':'\\u026F','\\u019D':'\\u0272','\\u019F':'\\u0275','\\u01A0':'\\u01A1','\\u01A2':'\\u01A3','\\u01A4':'\\u01A5','\\u01A6':'\\u0280','\\u01A7':'\\u01A8','\\u01A9':'\\u0283','\\u01AC':'\\u01AD','\\u01AE':'\\u0288','\\u01AF':'\\u01B0','\\u01B1':'\\u028A','\\u01B2':'\\u028B','\\u01B3':'\\u01B4','\\u01B5':'\\u01B6','\\u01B7':'\\u0292','\\u01B8':'\\u01B9','\\u01BC':'\\u01BD','\\u01C4':'\\u01C6','\\u01C5':'\\u01C6','\\u01C7':'\\u01C9','\\u01C8':'\\u01C9','\\u01CA':'\\u01CC','\\u01CB':'\\u01CC','\\u01CD':'\\u01CE','\\u01CF':'\\u01D0','\\u01D1':'\\u01D2','\\u01D3':'\\u01D4','\\u01D5':'\\u01D6','\\u01D7':'\\u01D8','\\u01D9':'\\u01DA','\\u01DB':'\\u01DC','\\u01DE':'\\u01DF','\\u01E0':'\\u01E1','\\u01E2':'\\u01E3','\\u01E4':'\\u01E5','\\u01E6':'\\u01E7','\\u01E8':'\\u01E9','\\u01EA':'\\u01EB','\\u01EC':'\\u01ED','\\u01EE':'\\u01EF','\\u01F1':'\\u01F3','\\u01F2':'\\u01F3','\\u01F4':'\\u01F5','\\u01F6':'\\u0195','\\u01F7':'\\u01BF','\\u01F8':'\\u01F9','\\u01FA':'\\u01FB','\\u01FC':'\\u01FD','\\u01FE':'\\u01FF','\\u0200':'\\u0201','\\u0202':'\\u0203','\\u0204':'\\u0205','\\u0206':'\\u0207','\\u0208':'\\u0209','\\u020A':'\\u020B','\\u020C':'\\u020D','\\u020E':'\\u020F','\\u0210':'\\u0211','\\u0212':'\\u0213','\\u0214':'\\u0215','\\u0216':'\\u0217','\\u0218':'\\u0219','\\u021A':'\\u021B','\\u021C':'\\u021D','\\u021E':'\\u021F','\\u0220':'\\u019E','\\u0222':'\\u0223','\\u0224':'\\u0225','\\u0226':'\\u0227','\\u0228':'\\u0229','\\u022A':'\\u022B','\\u022C':'\\u022D','\\u022E':'\\u022F','\\u0230':'\\u0231','\\u0232':'\\u0233','\\u023A':'\\u2C65','\\u023B':'\\u023C','\\u023D':'\\u019A','\\u023E':'\\u2C66','\\u0241':'\\u0242','\\u0243':'\\u0180','\\u0244':'\\u0289','\\u0245':'\\u028C','\\u0246':'\\u0247','\\u0248':'\\u0249','\\u024A':'\\u024B','\\u024C':'\\u024D','\\u024E':'\\u024F','\\u0345':'\\u03B9','\\u0370':'\\u0371','\\u0372':'\\u0373','\\u0376':'\\u0377','\\u037F':'\\u03F3','\\u0386':'\\u03AC','\\u0388':'\\u03AD','\\u0389':'\\u03AE','\\u038A':'\\u03AF','\\u038C':'\\u03CC','\\u038E':'\\u03CD','\\u038F':'\\u03CE','\\u0391':'\\u03B1','\\u0392':'\\u03B2','\\u0393':'\\u03B3','\\u0394':'\\u03B4','\\u0395':'\\u03B5','\\u0396':'\\u03B6','\\u0397':'\\u03B7','\\u0398':'\\u03B8','\\u0399':'\\u03B9','\\u039A':'\\u03BA','\\u039B':'\\u03BB','\\u039C':'\\u03BC','\\u039D':'\\u03BD','\\u039E':'\\u03BE','\\u039F':'\\u03BF','\\u03A0':'\\u03C0','\\u03A1':'\\u03C1','\\u03A3':'\\u03C3','\\u03A4':'\\u03C4','\\u03A5':'\\u03C5','\\u03A6':'\\u03C6','\\u03A7':'\\u03C7','\\u03A8':'\\u03C8','\\u03A9':'\\u03C9','\\u03AA':'\\u03CA','\\u03AB':'\\u03CB','\\u03C2':'\\u03C3','\\u03CF':'\\u03D7','\\u03D0':'\\u03B2','\\u03D1':'\\u03B8','\\u03D5':'\\u03C6','\\u03D6':'\\u03C0','\\u03D8':'\\u03D9','\\u03DA':'\\u03DB','\\u03DC':'\\u03DD','\\u03DE':'\\u03DF','\\u03E0':'\\u03E1','\\u03E2':'\\u03E3','\\u03E4':'\\u03E5','\\u03E6':'\\u03E7','\\u03E8':'\\u03E9','\\u03EA':'\\u03EB','\\u03EC':'\\u03ED','\\u03EE':'\\u03EF','\\u03F0':'\\u03BA','\\u03F1':'\\u03C1','\\u03F4':'\\u03B8','\\u03F5':'\\u03B5','\\u03F7':'\\u03F8','\\u03F9':'\\u03F2','\\u03FA':'\\u03FB','\\u03FD':'\\u037B','\\u03FE':'\\u037C','\\u03FF':'\\u037D','\\u0400':'\\u0450','\\u0401':'\\u0451','\\u0402':'\\u0452','\\u0403':'\\u0453','\\u0404':'\\u0454','\\u0405':'\\u0455','\\u0406':'\\u0456','\\u0407':'\\u0457','\\u0408':'\\u0458','\\u0409':'\\u0459','\\u040A':'\\u045A','\\u040B':'\\u045B','\\u040C':'\\u045C','\\u040D':'\\u045D','\\u040E':'\\u045E','\\u040F':'\\u045F','\\u0410':'\\u0430','\\u0411':'\\u0431','\\u0412':'\\u0432','\\u0413':'\\u0433','\\u0414':'\\u0434','\\u0415':'\\u0435','\\u0416':'\\u0436','\\u0417':'\\u0437','\\u0418':'\\u0438','\\u0419':'\\u0439','\\u041A':'\\u043A','\\u041B':'\\u043B','\\u041C':'\\u043C','\\u041D':'\\u043D','\\u041E':'\\u043E','\\u041F':'\\u043F','\\u0420':'\\u0440','\\u0421':'\\u0441','\\u0422':'\\u0442','\\u0423':'\\u0443','\\u0424':'\\u0444','\\u0425':'\\u0445','\\u0426':'\\u0446','\\u0427':'\\u0447','\\u0428':'\\u0448','\\u0429':'\\u0449','\\u042A':'\\u044A','\\u042B':'\\u044B','\\u042C':'\\u044C','\\u042D':'\\u044D','\\u042E':'\\u044E','\\u042F':'\\u044F','\\u0460':'\\u0461','\\u0462':'\\u0463','\\u0464':'\\u0465','\\u0466':'\\u0467','\\u0468':'\\u0469','\\u046A':'\\u046B','\\u046C':'\\u046D','\\u046E':'\\u046F','\\u0470':'\\u0471','\\u0472':'\\u0473','\\u0474':'\\u0475','\\u0476':'\\u0477','\\u0478':'\\u0479','\\u047A':'\\u047B','\\u047C':'\\u047D','\\u047E':'\\u047F','\\u0480':'\\u0481','\\u048A':'\\u048B','\\u048C':'\\u048D','\\u048E':'\\u048F','\\u0490':'\\u0491','\\u0492':'\\u0493','\\u0494':'\\u0495','\\u0496':'\\u0497','\\u0498':'\\u0499','\\u049A':'\\u049B','\\u049C':'\\u049D','\\u049E':'\\u049F','\\u04A0':'\\u04A1','\\u04A2':'\\u04A3','\\u04A4':'\\u04A5','\\u04A6':'\\u04A7','\\u04A8':'\\u04A9','\\u04AA':'\\u04AB','\\u04AC':'\\u04AD','\\u04AE':'\\u04AF','\\u04B0':'\\u04B1','\\u04B2':'\\u04B3','\\u04B4':'\\u04B5','\\u04B6':'\\u04B7','\\u04B8':'\\u04B9','\\u04BA':'\\u04BB','\\u04BC':'\\u04BD','\\u04BE':'\\u04BF','\\u04C0':'\\u04CF','\\u04C1':'\\u04C2','\\u04C3':'\\u04C4','\\u04C5':'\\u04C6','\\u04C7':'\\u04C8','\\u04C9':'\\u04CA','\\u04CB':'\\u04CC','\\u04CD':'\\u04CE','\\u04D0':'\\u04D1','\\u04D2':'\\u04D3','\\u04D4':'\\u04D5','\\u04D6':'\\u04D7','\\u04D8':'\\u04D9','\\u04DA':'\\u04DB','\\u04DC':'\\u04DD','\\u04DE':'\\u04DF','\\u04E0':'\\u04E1','\\u04E2':'\\u04E3','\\u04E4':'\\u04E5','\\u04E6':'\\u04E7','\\u04E8':'\\u04E9','\\u04EA':'\\u04EB','\\u04EC':'\\u04ED','\\u04EE':'\\u04EF','\\u04F0':'\\u04F1','\\u04F2':'\\u04F3','\\u04F4':'\\u04F5','\\u04F6':'\\u04F7','\\u04F8':'\\u04F9','\\u04FA':'\\u04FB','\\u04FC':'\\u04FD','\\u04FE':'\\u04FF','\\u0500':'\\u0501','\\u0502':'\\u0503','\\u0504':'\\u0505','\\u0506':'\\u0507','\\u0508':'\\u0509','\\u050A':'\\u050B','\\u050C':'\\u050D','\\u050E':'\\u050F','\\u0510':'\\u0511','\\u0512':'\\u0513','\\u0514':'\\u0515','\\u0516':'\\u0517','\\u0518':'\\u0519','\\u051A':'\\u051B','\\u051C':'\\u051D','\\u051E':'\\u051F','\\u0520':'\\u0521','\\u0522':'\\u0523','\\u0524':'\\u0525','\\u0526':'\\u0527','\\u0528':'\\u0529','\\u052A':'\\u052B','\\u052C':'\\u052D','\\u052E':'\\u052F','\\u0531':'\\u0561','\\u0532':'\\u0562','\\u0533':'\\u0563','\\u0534':'\\u0564','\\u0535':'\\u0565','\\u0536':'\\u0566','\\u0537':'\\u0567','\\u0538':'\\u0568','\\u0539':'\\u0569','\\u053A':'\\u056A','\\u053B':'\\u056B','\\u053C':'\\u056C','\\u053D':'\\u056D','\\u053E':'\\u056E','\\u053F':'\\u056F','\\u0540':'\\u0570','\\u0541':'\\u0571','\\u0542':'\\u0572','\\u0543':'\\u0573','\\u0544':'\\u0574','\\u0545':'\\u0575','\\u0546':'\\u0576','\\u0547':'\\u0577','\\u0548':'\\u0578','\\u0549':'\\u0579','\\u054A':'\\u057A','\\u054B':'\\u057B','\\u054C':'\\u057C','\\u054D':'\\u057D','\\u054E':'\\u057E','\\u054F':'\\u057F','\\u0550':'\\u0580','\\u0551':'\\u0581','\\u0552':'\\u0582','\\u0553':'\\u0583','\\u0554':'\\u0584','\\u0555':'\\u0585','\\u0556':'\\u0586','\\u10A0':'\\u2D00','\\u10A1':'\\u2D01','\\u10A2':'\\u2D02','\\u10A3':'\\u2D03','\\u10A4':'\\u2D04','\\u10A5':'\\u2D05','\\u10A6':'\\u2D06','\\u10A7':'\\u2D07','\\u10A8':'\\u2D08','\\u10A9':'\\u2D09','\\u10AA':'\\u2D0A','\\u10AB':'\\u2D0B','\\u10AC':'\\u2D0C','\\u10AD':'\\u2D0D','\\u10AE':'\\u2D0E','\\u10AF':'\\u2D0F','\\u10B0':'\\u2D10','\\u10B1':'\\u2D11','\\u10B2':'\\u2D12','\\u10B3':'\\u2D13','\\u10B4':'\\u2D14','\\u10B5':'\\u2D15','\\u10B6':'\\u2D16','\\u10B7':'\\u2D17','\\u10B8':'\\u2D18','\\u10B9':'\\u2D19','\\u10BA':'\\u2D1A','\\u10BB':'\\u2D1B','\\u10BC':'\\u2D1C','\\u10BD':'\\u2D1D','\\u10BE':'\\u2D1E','\\u10BF':'\\u2D1F','\\u10C0':'\\u2D20','\\u10C1':'\\u2D21','\\u10C2':'\\u2D22','\\u10C3':'\\u2D23','\\u10C4':'\\u2D24','\\u10C5':'\\u2D25','\\u10C7':'\\u2D27','\\u10CD':'\\u2D2D','\\u1E00':'\\u1E01','\\u1E02':'\\u1E03','\\u1E04':'\\u1E05','\\u1E06':'\\u1E07','\\u1E08':'\\u1E09','\\u1E0A':'\\u1E0B','\\u1E0C':'\\u1E0D','\\u1E0E':'\\u1E0F','\\u1E10':'\\u1E11','\\u1E12':'\\u1E13','\\u1E14':'\\u1E15','\\u1E16':'\\u1E17','\\u1E18':'\\u1E19','\\u1E1A':'\\u1E1B','\\u1E1C':'\\u1E1D','\\u1E1E':'\\u1E1F','\\u1E20':'\\u1E21','\\u1E22':'\\u1E23','\\u1E24':'\\u1E25','\\u1E26':'\\u1E27','\\u1E28':'\\u1E29','\\u1E2A':'\\u1E2B','\\u1E2C':'\\u1E2D','\\u1E2E':'\\u1E2F','\\u1E30':'\\u1E31','\\u1E32':'\\u1E33','\\u1E34':'\\u1E35','\\u1E36':'\\u1E37','\\u1E38':'\\u1E39','\\u1E3A':'\\u1E3B','\\u1E3C':'\\u1E3D','\\u1E3E':'\\u1E3F','\\u1E40':'\\u1E41','\\u1E42':'\\u1E43','\\u1E44':'\\u1E45','\\u1E46':'\\u1E47','\\u1E48':'\\u1E49','\\u1E4A':'\\u1E4B','\\u1E4C':'\\u1E4D','\\u1E4E':'\\u1E4F','\\u1E50':'\\u1E51','\\u1E52':'\\u1E53','\\u1E54':'\\u1E55','\\u1E56':'\\u1E57','\\u1E58':'\\u1E59','\\u1E5A':'\\u1E5B','\\u1E5C':'\\u1E5D','\\u1E5E':'\\u1E5F','\\u1E60':'\\u1E61','\\u1E62':'\\u1E63','\\u1E64':'\\u1E65','\\u1E66':'\\u1E67','\\u1E68':'\\u1E69','\\u1E6A':'\\u1E6B','\\u1E6C':'\\u1E6D','\\u1E6E':'\\u1E6F','\\u1E70':'\\u1E71','\\u1E72':'\\u1E73','\\u1E74':'\\u1E75','\\u1E76':'\\u1E77','\\u1E78':'\\u1E79','\\u1E7A':'\\u1E7B','\\u1E7C':'\\u1E7D','\\u1E7E':'\\u1E7F','\\u1E80':'\\u1E81','\\u1E82':'\\u1E83','\\u1E84':'\\u1E85','\\u1E86':'\\u1E87','\\u1E88':'\\u1E89','\\u1E8A':'\\u1E8B','\\u1E8C':'\\u1E8D','\\u1E8E':'\\u1E8F','\\u1E90':'\\u1E91','\\u1E92':'\\u1E93','\\u1E94':'\\u1E95','\\u1E9B':'\\u1E61','\\u1EA0':'\\u1EA1','\\u1EA2':'\\u1EA3','\\u1EA4':'\\u1EA5','\\u1EA6':'\\u1EA7','\\u1EA8':'\\u1EA9','\\u1EAA':'\\u1EAB','\\u1EAC':'\\u1EAD','\\u1EAE':'\\u1EAF','\\u1EB0':'\\u1EB1','\\u1EB2':'\\u1EB3','\\u1EB4':'\\u1EB5','\\u1EB6':'\\u1EB7','\\u1EB8':'\\u1EB9','\\u1EBA':'\\u1EBB','\\u1EBC':'\\u1EBD','\\u1EBE':'\\u1EBF','\\u1EC0':'\\u1EC1','\\u1EC2':'\\u1EC3','\\u1EC4':'\\u1EC5','\\u1EC6':'\\u1EC7','\\u1EC8':'\\u1EC9','\\u1ECA':'\\u1ECB','\\u1ECC':'\\u1ECD','\\u1ECE':'\\u1ECF','\\u1ED0':'\\u1ED1','\\u1ED2':'\\u1ED3','\\u1ED4':'\\u1ED5','\\u1ED6':'\\u1ED7','\\u1ED8':'\\u1ED9','\\u1EDA':'\\u1EDB','\\u1EDC':'\\u1EDD','\\u1EDE':'\\u1EDF','\\u1EE0':'\\u1EE1','\\u1EE2':'\\u1EE3','\\u1EE4':'\\u1EE5','\\u1EE6':'\\u1EE7','\\u1EE8':'\\u1EE9','\\u1EEA':'\\u1EEB','\\u1EEC':'\\u1EED','\\u1EEE':'\\u1EEF','\\u1EF0':'\\u1EF1','\\u1EF2':'\\u1EF3','\\u1EF4':'\\u1EF5','\\u1EF6':'\\u1EF7','\\u1EF8':'\\u1EF9','\\u1EFA':'\\u1EFB','\\u1EFC':'\\u1EFD','\\u1EFE':'\\u1EFF','\\u1F08':'\\u1F00','\\u1F09':'\\u1F01','\\u1F0A':'\\u1F02','\\u1F0B':'\\u1F03','\\u1F0C':'\\u1F04','\\u1F0D':'\\u1F05','\\u1F0E':'\\u1F06','\\u1F0F':'\\u1F07','\\u1F18':'\\u1F10','\\u1F19':'\\u1F11','\\u1F1A':'\\u1F12','\\u1F1B':'\\u1F13','\\u1F1C':'\\u1F14','\\u1F1D':'\\u1F15','\\u1F28':'\\u1F20','\\u1F29':'\\u1F21','\\u1F2A':'\\u1F22','\\u1F2B':'\\u1F23','\\u1F2C':'\\u1F24','\\u1F2D':'\\u1F25','\\u1F2E':'\\u1F26','\\u1F2F':'\\u1F27','\\u1F38':'\\u1F30','\\u1F39':'\\u1F31','\\u1F3A':'\\u1F32','\\u1F3B':'\\u1F33','\\u1F3C':'\\u1F34','\\u1F3D':'\\u1F35','\\u1F3E':'\\u1F36','\\u1F3F':'\\u1F37','\\u1F48':'\\u1F40','\\u1F49':'\\u1F41','\\u1F4A':'\\u1F42','\\u1F4B':'\\u1F43','\\u1F4C':'\\u1F44','\\u1F4D':'\\u1F45','\\u1F59':'\\u1F51','\\u1F5B':'\\u1F53','\\u1F5D':'\\u1F55','\\u1F5F':'\\u1F57','\\u1F68':'\\u1F60','\\u1F69':'\\u1F61','\\u1F6A':'\\u1F62','\\u1F6B':'\\u1F63','\\u1F6C':'\\u1F64','\\u1F6D':'\\u1F65','\\u1F6E':'\\u1F66','\\u1F6F':'\\u1F67','\\u1FB8':'\\u1FB0','\\u1FB9':'\\u1FB1','\\u1FBA':'\\u1F70','\\u1FBB':'\\u1F71','\\u1FBE':'\\u03B9','\\u1FC8':'\\u1F72','\\u1FC9':'\\u1F73','\\u1FCA':'\\u1F74','\\u1FCB':'\\u1F75','\\u1FD8':'\\u1FD0','\\u1FD9':'\\u1FD1','\\u1FDA':'\\u1F76','\\u1FDB':'\\u1F77','\\u1FE8':'\\u1FE0','\\u1FE9':'\\u1FE1','\\u1FEA':'\\u1F7A','\\u1FEB':'\\u1F7B','\\u1FEC':'\\u1FE5','\\u1FF8':'\\u1F78','\\u1FF9':'\\u1F79','\\u1FFA':'\\u1F7C','\\u1FFB':'\\u1F7D','\\u2126':'\\u03C9','\\u212A':'k','\\u212B':'\\xE5','\\u2132':'\\u214E','\\u2160':'\\u2170','\\u2161':'\\u2171','\\u2162':'\\u2172','\\u2163':'\\u2173','\\u2164':'\\u2174','\\u2165':'\\u2175','\\u2166':'\\u2176','\\u2167':'\\u2177','\\u2168':'\\u2178','\\u2169':'\\u2179','\\u216A':'\\u217A','\\u216B':'\\u217B','\\u216C':'\\u217C','\\u216D':'\\u217D','\\u216E':'\\u217E','\\u216F':'\\u217F','\\u2183':'\\u2184','\\u24B6':'\\u24D0','\\u24B7':'\\u24D1','\\u24B8':'\\u24D2','\\u24B9':'\\u24D3','\\u24BA':'\\u24D4','\\u24BB':'\\u24D5','\\u24BC':'\\u24D6','\\u24BD':'\\u24D7','\\u24BE':'\\u24D8','\\u24BF':'\\u24D9','\\u24C0':'\\u24DA','\\u24C1':'\\u24DB','\\u24C2':'\\u24DC','\\u24C3':'\\u24DD','\\u24C4':'\\u24DE','\\u24C5':'\\u24DF','\\u24C6':'\\u24E0','\\u24C7':'\\u24E1','\\u24C8':'\\u24E2','\\u24C9':'\\u24E3','\\u24CA':'\\u24E4','\\u24CB':'\\u24E5','\\u24CC':'\\u24E6','\\u24CD':'\\u24E7','\\u24CE':'\\u24E8','\\u24CF':'\\u24E9','\\u2C00':'\\u2C30','\\u2C01':'\\u2C31','\\u2C02':'\\u2C32','\\u2C03':'\\u2C33','\\u2C04':'\\u2C34','\\u2C05':'\\u2C35','\\u2C06':'\\u2C36','\\u2C07':'\\u2C37','\\u2C08':'\\u2C38','\\u2C09':'\\u2C39','\\u2C0A':'\\u2C3A','\\u2C0B':'\\u2C3B','\\u2C0C':'\\u2C3C','\\u2C0D':'\\u2C3D','\\u2C0E':'\\u2C3E','\\u2C0F':'\\u2C3F','\\u2C10':'\\u2C40','\\u2C11':'\\u2C41','\\u2C12':'\\u2C42','\\u2C13':'\\u2C43','\\u2C14':'\\u2C44','\\u2C15':'\\u2C45','\\u2C16':'\\u2C46','\\u2C17':'\\u2C47','\\u2C18':'\\u2C48','\\u2C19':'\\u2C49','\\u2C1A':'\\u2C4A','\\u2C1B':'\\u2C4B','\\u2C1C':'\\u2C4C','\\u2C1D':'\\u2C4D','\\u2C1E':'\\u2C4E','\\u2C1F':'\\u2C4F','\\u2C20':'\\u2C50','\\u2C21':'\\u2C51','\\u2C22':'\\u2C52','\\u2C23':'\\u2C53','\\u2C24':'\\u2C54','\\u2C25':'\\u2C55','\\u2C26':'\\u2C56','\\u2C27':'\\u2C57','\\u2C28':'\\u2C58','\\u2C29':'\\u2C59','\\u2C2A':'\\u2C5A','\\u2C2B':'\\u2C5B','\\u2C2C':'\\u2C5C','\\u2C2D':'\\u2C5D','\\u2C2E':'\\u2C5E','\\u2C60':'\\u2C61','\\u2C62':'\\u026B','\\u2C63':'\\u1D7D','\\u2C64':'\\u027D','\\u2C67':'\\u2C68','\\u2C69':'\\u2C6A','\\u2C6B':'\\u2C6C','\\u2C6D':'\\u0251','\\u2C6E':'\\u0271','\\u2C6F':'\\u0250','\\u2C70':'\\u0252','\\u2C72':'\\u2C73','\\u2C75':'\\u2C76','\\u2C7E':'\\u023F','\\u2C7F':'\\u0240','\\u2C80':'\\u2C81','\\u2C82':'\\u2C83','\\u2C84':'\\u2C85','\\u2C86':'\\u2C87','\\u2C88':'\\u2C89','\\u2C8A':'\\u2C8B','\\u2C8C':'\\u2C8D','\\u2C8E':'\\u2C8F','\\u2C90':'\\u2C91','\\u2C92':'\\u2C93','\\u2C94':'\\u2C95','\\u2C96':'\\u2C97','\\u2C98':'\\u2C99','\\u2C9A':'\\u2C9B','\\u2C9C':'\\u2C9D','\\u2C9E':'\\u2C9F','\\u2CA0':'\\u2CA1','\\u2CA2':'\\u2CA3','\\u2CA4':'\\u2CA5','\\u2CA6':'\\u2CA7','\\u2CA8':'\\u2CA9','\\u2CAA':'\\u2CAB','\\u2CAC':'\\u2CAD','\\u2CAE':'\\u2CAF','\\u2CB0':'\\u2CB1','\\u2CB2':'\\u2CB3','\\u2CB4':'\\u2CB5','\\u2CB6':'\\u2CB7','\\u2CB8':'\\u2CB9','\\u2CBA':'\\u2CBB','\\u2CBC':'\\u2CBD','\\u2CBE':'\\u2CBF','\\u2CC0':'\\u2CC1','\\u2CC2':'\\u2CC3','\\u2CC4':'\\u2CC5','\\u2CC6':'\\u2CC7','\\u2CC8':'\\u2CC9','\\u2CCA':'\\u2CCB','\\u2CCC':'\\u2CCD','\\u2CCE':'\\u2CCF','\\u2CD0':'\\u2CD1','\\u2CD2':'\\u2CD3','\\u2CD4':'\\u2CD5','\\u2CD6':'\\u2CD7','\\u2CD8':'\\u2CD9','\\u2CDA':'\\u2CDB','\\u2CDC':'\\u2CDD','\\u2CDE':'\\u2CDF','\\u2CE0':'\\u2CE1','\\u2CE2':'\\u2CE3','\\u2CEB':'\\u2CEC','\\u2CED':'\\u2CEE','\\u2CF2':'\\u2CF3','\\uA640':'\\uA641','\\uA642':'\\uA643','\\uA644':'\\uA645','\\uA646':'\\uA647','\\uA648':'\\uA649','\\uA64A':'\\uA64B','\\uA64C':'\\uA64D','\\uA64E':'\\uA64F','\\uA650':'\\uA651','\\uA652':'\\uA653','\\uA654':'\\uA655','\\uA656':'\\uA657','\\uA658':'\\uA659','\\uA65A':'\\uA65B','\\uA65C':'\\uA65D','\\uA65E':'\\uA65F','\\uA660':'\\uA661','\\uA662':'\\uA663','\\uA664':'\\uA665','\\uA666':'\\uA667','\\uA668':'\\uA669','\\uA66A':'\\uA66B','\\uA66C':'\\uA66D','\\uA680':'\\uA681','\\uA682':'\\uA683','\\uA684':'\\uA685','\\uA686':'\\uA687','\\uA688':'\\uA689','\\uA68A':'\\uA68B','\\uA68C':'\\uA68D','\\uA68E':'\\uA68F','\\uA690':'\\uA691','\\uA692':'\\uA693','\\uA694':'\\uA695','\\uA696':'\\uA697','\\uA698':'\\uA699','\\uA69A':'\\uA69B','\\uA722':'\\uA723','\\uA724':'\\uA725','\\uA726':'\\uA727','\\uA728':'\\uA729','\\uA72A':'\\uA72B','\\uA72C':'\\uA72D','\\uA72E':'\\uA72F','\\uA732':'\\uA733','\\uA734':'\\uA735','\\uA736':'\\uA737','\\uA738':'\\uA739','\\uA73A':'\\uA73B','\\uA73C':'\\uA73D','\\uA73E':'\\uA73F','\\uA740':'\\uA741','\\uA742':'\\uA743','\\uA744':'\\uA745','\\uA746':'\\uA747','\\uA748':'\\uA749','\\uA74A':'\\uA74B','\\uA74C':'\\uA74D','\\uA74E':'\\uA74F','\\uA750':'\\uA751','\\uA752':'\\uA753','\\uA754':'\\uA755','\\uA756':'\\uA757','\\uA758':'\\uA759','\\uA75A':'\\uA75B','\\uA75C':'\\uA75D','\\uA75E':'\\uA75F','\\uA760':'\\uA761','\\uA762':'\\uA763','\\uA764':'\\uA765','\\uA766':'\\uA767','\\uA768':'\\uA769','\\uA76A':'\\uA76B','\\uA76C':'\\uA76D','\\uA76E':'\\uA76F','\\uA779':'\\uA77A','\\uA77B':'\\uA77C','\\uA77D':'\\u1D79','\\uA77E':'\\uA77F','\\uA780':'\\uA781','\\uA782':'\\uA783','\\uA784':'\\uA785','\\uA786':'\\uA787','\\uA78B':'\\uA78C','\\uA78D':'\\u0265','\\uA790':'\\uA791','\\uA792':'\\uA793','\\uA796':'\\uA797','\\uA798':'\\uA799','\\uA79A':'\\uA79B','\\uA79C':'\\uA79D','\\uA79E':'\\uA79F','\\uA7A0':'\\uA7A1','\\uA7A2':'\\uA7A3','\\uA7A4':'\\uA7A5','\\uA7A6':'\\uA7A7','\\uA7A8':'\\uA7A9','\\uA7AA':'\\u0266','\\uA7AB':'\\u025C','\\uA7AC':'\\u0261','\\uA7AD':'\\u026C','\\uA7B0':'\\u029E','\\uA7B1':'\\u0287','\\uFF21':'\\uFF41','\\uFF22':'\\uFF42','\\uFF23':'\\uFF43','\\uFF24':'\\uFF44','\\uFF25':'\\uFF45','\\uFF26':'\\uFF46','\\uFF27':'\\uFF47','\\uFF28':'\\uFF48','\\uFF29':'\\uFF49','\\uFF2A':'\\uFF4A','\\uFF2B':'\\uFF4B','\\uFF2C':'\\uFF4C','\\uFF2D':'\\uFF4D','\\uFF2E':'\\uFF4E','\\uFF2F':'\\uFF4F','\\uFF30':'\\uFF50','\\uFF31':'\\uFF51','\\uFF32':'\\uFF52','\\uFF33':'\\uFF53','\\uFF34':'\\uFF54','\\uFF35':'\\uFF55','\\uFF36':'\\uFF56','\\uFF37':'\\uFF57','\\uFF38':'\\uFF58','\\uFF39':'\\uFF59','\\uFF3A':'\\uFF5A','\\uD801\\uDC00':'\\uD801\\uDC28','\\uD801\\uDC01':'\\uD801\\uDC29','\\uD801\\uDC02':'\\uD801\\uDC2A','\\uD801\\uDC03':'\\uD801\\uDC2B','\\uD801\\uDC04':'\\uD801\\uDC2C','\\uD801\\uDC05':'\\uD801\\uDC2D','\\uD801\\uDC06':'\\uD801\\uDC2E','\\uD801\\uDC07':'\\uD801\\uDC2F','\\uD801\\uDC08':'\\uD801\\uDC30','\\uD801\\uDC09':'\\uD801\\uDC31','\\uD801\\uDC0A':'\\uD801\\uDC32','\\uD801\\uDC0B':'\\uD801\\uDC33','\\uD801\\uDC0C':'\\uD801\\uDC34','\\uD801\\uDC0D':'\\uD801\\uDC35','\\uD801\\uDC0E':'\\uD801\\uDC36','\\uD801\\uDC0F':'\\uD801\\uDC37','\\uD801\\uDC10':'\\uD801\\uDC38','\\uD801\\uDC11':'\\uD801\\uDC39','\\uD801\\uDC12':'\\uD801\\uDC3A','\\uD801\\uDC13':'\\uD801\\uDC3B','\\uD801\\uDC14':'\\uD801\\uDC3C','\\uD801\\uDC15':'\\uD801\\uDC3D','\\uD801\\uDC16':'\\uD801\\uDC3E','\\uD801\\uDC17':'\\uD801\\uDC3F','\\uD801\\uDC18':'\\uD801\\uDC40','\\uD801\\uDC19':'\\uD801\\uDC41','\\uD801\\uDC1A':'\\uD801\\uDC42','\\uD801\\uDC1B':'\\uD801\\uDC43','\\uD801\\uDC1C':'\\uD801\\uDC44','\\uD801\\uDC1D':'\\uD801\\uDC45','\\uD801\\uDC1E':'\\uD801\\uDC46','\\uD801\\uDC1F':'\\uD801\\uDC47','\\uD801\\uDC20':'\\uD801\\uDC48','\\uD801\\uDC21':'\\uD801\\uDC49','\\uD801\\uDC22':'\\uD801\\uDC4A','\\uD801\\uDC23':'\\uD801\\uDC4B','\\uD801\\uDC24':'\\uD801\\uDC4C','\\uD801\\uDC25':'\\uD801\\uDC4D','\\uD801\\uDC26':'\\uD801\\uDC4E','\\uD801\\uDC27':'\\uD801\\uDC4F','\\uD806\\uDCA0':'\\uD806\\uDCC0','\\uD806\\uDCA1':'\\uD806\\uDCC1','\\uD806\\uDCA2':'\\uD806\\uDCC2','\\uD806\\uDCA3':'\\uD806\\uDCC3','\\uD806\\uDCA4':'\\uD806\\uDCC4','\\uD806\\uDCA5':'\\uD806\\uDCC5','\\uD806\\uDCA6':'\\uD806\\uDCC6','\\uD806\\uDCA7':'\\uD806\\uDCC7','\\uD806\\uDCA8':'\\uD806\\uDCC8','\\uD806\\uDCA9':'\\uD806\\uDCC9','\\uD806\\uDCAA':'\\uD806\\uDCCA','\\uD806\\uDCAB':'\\uD806\\uDCCB','\\uD806\\uDCAC':'\\uD806\\uDCCC','\\uD806\\uDCAD':'\\uD806\\uDCCD','\\uD806\\uDCAE':'\\uD806\\uDCCE','\\uD806\\uDCAF':'\\uD806\\uDCCF','\\uD806\\uDCB0':'\\uD806\\uDCD0','\\uD806\\uDCB1':'\\uD806\\uDCD1','\\uD806\\uDCB2':'\\uD806\\uDCD2','\\uD806\\uDCB3':'\\uD806\\uDCD3','\\uD806\\uDCB4':'\\uD806\\uDCD4','\\uD806\\uDCB5':'\\uD806\\uDCD5','\\uD806\\uDCB6':'\\uD806\\uDCD6','\\uD806\\uDCB7':'\\uD806\\uDCD7','\\uD806\\uDCB8':'\\uD806\\uDCD8','\\uD806\\uDCB9':'\\uD806\\uDCD9','\\uD806\\uDCBA':'\\uD806\\uDCDA','\\uD806\\uDCBB':'\\uD806\\uDCDB','\\uD806\\uDCBC':'\\uD806\\uDCDC','\\uD806\\uDCBD':'\\uD806\\uDCDD','\\uD806\\uDCBE':'\\uD806\\uDCDE','\\uD806\\uDCBF':'\\uD806\\uDCDF','\\xDF':'ss','\\u0130':'i\\u0307','\\u0149':'\\u02BCn','\\u01F0':'j\\u030C','\\u0390':'\\u03B9\\u0308\\u0301','\\u03B0':'\\u03C5\\u0308\\u0301','\\u0587':'\\u0565\\u0582','\\u1E96':'h\\u0331','\\u1E97':'t\\u0308','\\u1E98':'w\\u030A','\\u1E99':'y\\u030A','\\u1E9A':'a\\u02BE','\\u1E9E':'ss','\\u1F50':'\\u03C5\\u0313','\\u1F52':'\\u03C5\\u0313\\u0300','\\u1F54':'\\u03C5\\u0313\\u0301','\\u1F56':'\\u03C5\\u0313\\u0342','\\u1F80':'\\u1F00\\u03B9','\\u1F81':'\\u1F01\\u03B9','\\u1F82':'\\u1F02\\u03B9','\\u1F83':'\\u1F03\\u03B9','\\u1F84':'\\u1F04\\u03B9','\\u1F85':'\\u1F05\\u03B9','\\u1F86':'\\u1F06\\u03B9','\\u1F87':'\\u1F07\\u03B9','\\u1F88':'\\u1F00\\u03B9','\\u1F89':'\\u1F01\\u03B9','\\u1F8A':'\\u1F02\\u03B9','\\u1F8B':'\\u1F03\\u03B9','\\u1F8C':'\\u1F04\\u03B9','\\u1F8D':'\\u1F05\\u03B9','\\u1F8E':'\\u1F06\\u03B9','\\u1F8F':'\\u1F07\\u03B9','\\u1F90':'\\u1F20\\u03B9','\\u1F91':'\\u1F21\\u03B9','\\u1F92':'\\u1F22\\u03B9','\\u1F93':'\\u1F23\\u03B9','\\u1F94':'\\u1F24\\u03B9','\\u1F95':'\\u1F25\\u03B9','\\u1F96':'\\u1F26\\u03B9','\\u1F97':'\\u1F27\\u03B9','\\u1F98':'\\u1F20\\u03B9','\\u1F99':'\\u1F21\\u03B9','\\u1F9A':'\\u1F22\\u03B9','\\u1F9B':'\\u1F23\\u03B9','\\u1F9C':'\\u1F24\\u03B9','\\u1F9D':'\\u1F25\\u03B9','\\u1F9E':'\\u1F26\\u03B9','\\u1F9F':'\\u1F27\\u03B9','\\u1FA0':'\\u1F60\\u03B9','\\u1FA1':'\\u1F61\\u03B9','\\u1FA2':'\\u1F62\\u03B9','\\u1FA3':'\\u1F63\\u03B9','\\u1FA4':'\\u1F64\\u03B9','\\u1FA5':'\\u1F65\\u03B9','\\u1FA6':'\\u1F66\\u03B9','\\u1FA7':'\\u1F67\\u03B9','\\u1FA8':'\\u1F60\\u03B9','\\u1FA9':'\\u1F61\\u03B9','\\u1FAA':'\\u1F62\\u03B9','\\u1FAB':'\\u1F63\\u03B9','\\u1FAC':'\\u1F64\\u03B9','\\u1FAD':'\\u1F65\\u03B9','\\u1FAE':'\\u1F66\\u03B9','\\u1FAF':'\\u1F67\\u03B9','\\u1FB2':'\\u1F70\\u03B9','\\u1FB3':'\\u03B1\\u03B9','\\u1FB4':'\\u03AC\\u03B9','\\u1FB6':'\\u03B1\\u0342','\\u1FB7':'\\u03B1\\u0342\\u03B9','\\u1FBC':'\\u03B1\\u03B9','\\u1FC2':'\\u1F74\\u03B9','\\u1FC3':'\\u03B7\\u03B9','\\u1FC4':'\\u03AE\\u03B9','\\u1FC6':'\\u03B7\\u0342','\\u1FC7':'\\u03B7\\u0342\\u03B9','\\u1FCC':'\\u03B7\\u03B9','\\u1FD2':'\\u03B9\\u0308\\u0300','\\u1FD3':'\\u03B9\\u0308\\u0301','\\u1FD6':'\\u03B9\\u0342','\\u1FD7':'\\u03B9\\u0308\\u0342','\\u1FE2':'\\u03C5\\u0308\\u0300','\\u1FE3':'\\u03C5\\u0308\\u0301','\\u1FE4':'\\u03C1\\u0313','\\u1FE6':'\\u03C5\\u0342','\\u1FE7':'\\u03C5\\u0308\\u0342','\\u1FF2':'\\u1F7C\\u03B9','\\u1FF3':'\\u03C9\\u03B9','\\u1FF4':'\\u03CE\\u03B9','\\u1FF6':'\\u03C9\\u0342','\\u1FF7':'\\u03C9\\u0342\\u03B9','\\u1FFC':'\\u03C9\\u03B9','\\uFB00':'ff','\\uFB01':'fi','\\uFB02':'fl','\\uFB03':'ffi','\\uFB04':'ffl','\\uFB05':'st','\\uFB06':'st','\\uFB13':'\\u0574\\u0576','\\uFB14':'\\u0574\\u0565','\\uFB15':'\\u0574\\u056B','\\uFB16':'\\u057E\\u0576','\\uFB17':'\\u0574\\u056D'};\n\n// Normalize reference label: collapse internal whitespace\n// to single space, remove leading/trailing whitespace, case fold.\nmodule.exports = function(string) {\n    return string.trim().replace(regex, function($0) {\n        // Note: there is no need to check `hasOwnProperty($0)` here.\n        // If character not found in lookup table, it must be whitespace.\n        return map[$0] || ' ';\n    });\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/normalize-reference.js\n ** module id = 15\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/normalize-reference.js?");

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar escapeXml = __webpack_require__(9).escapeXml;\n\n// Helper function to produce an HTML tag.\nvar tag = function(name, attrs, selfclosing) {\n    var result = '<' + name;\n    if (attrs && attrs.length > 0) {\n        var i = 0;\n        var attrib;\n        while ((attrib = attrs[i]) !== undefined) {\n            result += ' ' + attrib[0] + '=\"' + attrib[1] + '\"';\n            i++;\n        }\n    }\n    if (selfclosing) {\n        result += ' /';\n    }\n\n    result += '>';\n    return result;\n};\n\nvar reHtmlTag = /\\<[^>]*\\>/;\n\nvar renderNodes = function(block) {\n\n    var attrs;\n    var info_words;\n    var tagname;\n    var walker = block.walker();\n    var event, node, entering;\n    var buffer = \"\";\n    var lastOut = \"\\n\";\n    var disableTags = 0;\n    var grandparent;\n    var out = function(s) {\n        if (disableTags > 0) {\n            buffer += s.replace(reHtmlTag, '');\n        } else {\n            buffer += s;\n        }\n        lastOut = s;\n    };\n    var esc = this.escape;\n    var cr = function() {\n        if (lastOut !== '\\n') {\n            buffer += '\\n';\n            lastOut = '\\n';\n        }\n    };\n\n    var options = this.options;\n\n    if (options.time) { console.time(\"rendering\"); }\n\n    while ((event = walker.next())) {\n        entering = event.entering;\n        node = event.node;\n\n        attrs = [];\n        if (options.sourcepos) {\n            var pos = node.sourcepos;\n            if (pos) {\n                attrs.push(['data-sourcepos', String(pos[0][0]) + ':' +\n                            String(pos[0][1]) + '-' + String(pos[1][0]) + ':' +\n                            String(pos[1][1])]);\n            }\n        }\n\n        switch (node.type) {\n        case 'Text':\n            out(esc(node.literal, false));\n            break;\n\n        case 'Softbreak':\n            out(this.softbreak);\n            break;\n\n        case 'Hardbreak':\n            out(tag('br', [], true));\n            cr();\n            break;\n\n        case 'Emph':\n            out(tag(entering ? 'em' : '/em'));\n            break;\n\n        case 'Strong':\n            out(tag(entering ? 'strong' : '/strong'));\n            break;\n\n        case 'Html':\n            out(node.literal);\n            break;\n\n        case 'Link':\n            if (entering) {\n                attrs.push(['href', esc(node.destination, true)]);\n                if (node.title) {\n                    attrs.push(['title', esc(node.title, true)]);\n                }\n                out(tag('a', attrs));\n            } else {\n                out(tag('/a'));\n            }\n            break;\n\n        case 'Image':\n            if (entering) {\n                if (disableTags === 0) {\n                    out('<img src=\"' + esc(node.destination, true) +\n                        '\" alt=\"');\n                }\n                disableTags += 1;\n            } else {\n                disableTags -= 1;\n                if (disableTags === 0) {\n                    if (node.title) {\n                        out('\" title=\"' + esc(node.title, true));\n                    }\n                    out('\" />');\n                }\n            }\n            break;\n\n        case 'Code':\n            out(tag('code') + esc(node.literal, false) + tag('/code'));\n            break;\n\n        case 'Document':\n            break;\n\n        case 'Paragraph':\n            grandparent = node.parent.parent;\n            if (grandparent !== null &&\n                grandparent.type === 'List') {\n                if (grandparent.listTight) {\n                    break;\n                }\n            }\n            if (entering) {\n                cr();\n                out(tag('p', attrs));\n            } else {\n                out(tag('/p'));\n                cr();\n            }\n            break;\n\n        case 'BlockQuote':\n            if (entering) {\n                cr();\n                out(tag('blockquote', attrs));\n                cr();\n            } else {\n                cr();\n                out(tag('/blockquote'));\n                cr();\n            }\n            break;\n\n        case 'Item':\n            if (entering) {\n                out(tag('li', attrs));\n            } else {\n                out(tag('/li'));\n                cr();\n            }\n            break;\n\n        case 'List':\n            tagname = node.listType === 'Bullet' ? 'ul' : 'ol';\n            if (entering) {\n                var start = node.listStart;\n                if (start !== null && start !== 1) {\n                    attrs.push(['start', start.toString()]);\n                }\n                cr();\n                out(tag(tagname, attrs));\n                cr();\n            } else {\n                cr();\n                out(tag('/' + tagname));\n                cr();\n            }\n            break;\n\n        case 'Header':\n            tagname = 'h' + node.level;\n            if (entering) {\n                cr();\n                out(tag(tagname, attrs));\n            } else {\n                out(tag('/' + tagname));\n                cr();\n            }\n            break;\n\n        case 'CodeBlock':\n            info_words = node.info ? node.info.split(/ +/) : [];\n            if (info_words.length > 0 && info_words[0].length > 0) {\n                attrs.push(['class', 'language-' + esc(info_words[0], true)]);\n            }\n            cr();\n            out(tag('pre') + tag('code', attrs));\n            out(esc(node.literal, false));\n            out(tag('/code') + tag('/pre'));\n            cr();\n            break;\n\n        case 'HtmlBlock':\n            cr();\n            out(node.literal);\n            cr();\n            break;\n\n        case 'HorizontalRule':\n            cr();\n            out(tag('hr', attrs, true));\n            cr();\n            break;\n\n        default:\n            throw \"Unknown node type \" + node.type;\n        }\n\n    }\n    if (options.time) { console.timeEnd(\"rendering\"); }\n    return buffer;\n};\n\n// The HtmlRenderer object.\nfunction HtmlRenderer(options){\n    return {\n        // default options:\n        softbreak: '\\n', // by default, soft breaks are rendered as newlines in HTML\n        // set to \"<br />\" to make them hard breaks\n        // set to \" \" if you want to ignore line wrapping in source\n        escape: escapeXml,\n        options: options || {},\n        render: renderNodes\n    };\n}\n\nmodule.exports = HtmlRenderer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/html.js\n ** module id = 16\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/html.js?");

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n\nvar escapeXml = __webpack_require__(9).escapeXml;\n\n// Helper function to produce an XML tag.\nvar tag = function(name, attrs, selfclosing) {\n    var result = '<' + name;\n    if (attrs && attrs.length > 0) {\n        var i = 0;\n        var attrib;\n        while ((attrib = attrs[i]) !== undefined) {\n            result += ' ' + attrib[0] + '=\"' + attrib[1] + '\"';\n            i++;\n        }\n    }\n    if (selfclosing) {\n        result += ' /';\n    }\n\n    result += '>';\n    return result;\n};\n\nvar reXMLTag = /\\<[^>]*\\>/;\n\nvar toTagName = function(s) {\n    return s.replace(/([a-z])([A-Z])/g, \"$1_$2\").toLowerCase();\n};\n\nvar renderNodes = function(block) {\n\n    var attrs;\n    var tagname;\n    var walker = block.walker();\n    var event, node, entering;\n    var buffer = \"\";\n    var lastOut = \"\\n\";\n    var disableTags = 0;\n    var indentLevel = 0;\n    var indent = '  ';\n    var unescapedContents;\n    var container;\n    var selfClosing;\n    var nodetype;\n\n    var out = function(s) {\n        if (disableTags > 0) {\n            buffer += s.replace(reXMLTag, '');\n        } else {\n            buffer += s;\n        }\n        lastOut = s;\n    };\n    var esc = this.escape;\n    var cr = function() {\n        if (lastOut !== '\\n') {\n            buffer += '\\n';\n            lastOut = '\\n';\n            for (var i = indentLevel; i--;) {\n                buffer += indent;\n            }\n        }\n    };\n\n    var options = this.options;\n\n    if (options.time) { console.time(\"rendering\"); }\n\n    buffer += '<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n';\n    buffer += '<!DOCTYPE CommonMark SYSTEM \"CommonMark.dtd\">\\n';\n\n    while ((event = walker.next())) {\n        entering = event.entering;\n        node = event.node;\n        nodetype = node.type;\n\n        container = node.isContainer;\n        selfClosing = nodetype === 'HorizontalRule' || nodetype === 'Hardbreak' ||\n            nodetype === 'Softbreak' || nodetype === 'Image';\n        unescapedContents = nodetype === 'Html' || nodetype === 'HtmlInline';\n        tagname = toTagName(nodetype);\n\n        if (entering) {\n\n            attrs = [];\n\n            switch (nodetype) {\n            case 'List':\n                if (node.listType !== null) {\n                    attrs.push(['type', node.listType.toLowerCase()]);\n                }\n                if (node.listStart !== null) {\n                    attrs.push(['start', String(node.listStart)]);\n                }\n                if (node.listTight !== null) {\n                    attrs.push(['tight', (node.listTight ? 'true' : 'false')]);\n                }\n                var delim = node.listDelimiter;\n                if (delim !== null) {\n                    var delimword = '';\n                    if (delim === '.') {\n                        delimword = 'period';\n                    } else {\n                        delimword = 'paren';\n                    }\n                    attrs.push(['delimiter', delimword]);\n                }\n                break;\n            case 'CodeBlock':\n                if (node.info) {\n                    attrs.push(['info', node.info]);\n                }\n                break;\n            case 'Header':\n                attrs.push(['level', String(node.level)]);\n                break;\n            case 'Link':\n            case 'Image':\n                attrs.push(['destination', node.destination]);\n                attrs.push(['title', node.title]);\n                break;\n            default:\n                break;\n            }\n            if (options.sourcepos) {\n                var pos = node.sourcepos;\n                if (pos) {\n                    attrs.push(['sourcepos', String(pos[0][0]) + ':' +\n                                String(pos[0][1]) + '-' + String(pos[1][0]) + ':' +\n                                String(pos[1][1])]);\n                }\n            }\n\n            cr();\n            out(tag(tagname, attrs, selfClosing));\n            if (container) {\n                indentLevel += 1;\n            } else if (!container && !selfClosing) {\n                var lit = node.literal;\n                if (lit) {\n                    out(unescapedContents ? lit : esc(lit));\n                }\n                out(tag('/' + tagname));\n            }\n        } else {\n            indentLevel -= 1;\n            cr();\n            out(tag('/' + tagname));\n        }\n\n\n    }\n    if (options.time) { console.timeEnd(\"rendering\"); }\n    buffer += '\\n';\n    return buffer;\n};\n\n// The XmlRenderer object.\nfunction XmlRenderer(options){\n    return {\n        // default options:\n        softbreak: '\\n', // by default, soft breaks are rendered as newlines in HTML\n        // set to \"<br />\" to make them hard breaks\n        // set to \" \" if you want to ignore line wrapping in source\n        escape: escapeXml,\n        options: options || {},\n        render: renderNodes\n    };\n}\n\nmodule.exports = XmlRenderer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark/lib/xml.js\n ** module id = 17\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark/lib/xml.js?");

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nvar React = __webpack_require__(2);\n\nfunction tag(node, name, attrs, children) {\n    node.react = {\n        tag: name,\n        props: attrs,\n        children: children || []\n    };\n}\n\nfunction isGrandParentOfList(node) {\n    var grandparent = node.parent.parent;\n    return (\n        grandparent &&\n        grandparent.type === 'List' &&\n        grandparent.listTight\n    );\n}\n\nfunction addChild(node, child) {\n    var parent = node;\n    do {\n        parent = parent.parent;\n    } while (!parent.react);\n\n    parent.react.children.push(child);\n}\n\nfunction createElement(tagName, props, children) {\n    var args = [tagName, props].concat(children);\n    var child = React.createElement.apply(React, args);\n    return child;\n}\n\nfunction renderNodes(block) {\n    var walker = block.walker();\n    var sourcePos = this.sourcePos;\n    var escapeHtml = this.escapeHtml;\n    var skipHtml = this.skipHtml;\n    var infoWords;\n    var softBreak = (\n        this.softBreak === 'br' ?\n        React.createElement('br') :\n        this.softBreak\n    );\n\n    var e, node, entering, leaving, attrs, doc;\n    while ((e = walker.next())) {\n        entering = e.entering;\n        leaving = !entering;\n        node = e.node;\n        attrs = {};\n\n        if (!doc) {\n            doc = node;\n            node.react = { children: [] };\n        }\n\n        if (sourcePos && node.sourcepos) {\n            var pos = node.sourcepos;\n            attrs['data-sourcepos'] = [\n                pos[0][0], ':', pos[0][1], '-',\n                pos[1][0], ':', pos[1][1]\n            ].map(String).join('');\n        }\n\n        if (node.type === 'Paragraph' && isGrandParentOfList(node)) {\n            continue;\n        }\n\n        if (leaving) {\n            if (node.type === 'Image') {\n                node.react.props.alt = node.react.children[0];\n                node.react.children = [];\n            }\n\n            if (node !== doc) {\n                addChild(node, createElement(\n                    node.react.tag,\n                    node.react.props,\n                    node.react.children\n                ));\n            }\n\n            continue;\n        }\n\n        // Entering a new node\n        switch (node.type) {\n            case 'Html':\n            case 'HtmlBlock':\n                if (escapeHtml) {\n                    addChild(node, node.literal);\n                } else if (!skipHtml) {\n                    attrs.dangerouslySetInnerHTML = {\n                        __html: node.literal\n                    };\n\n                    addChild(node, createElement(\n                        node.type === 'Html' ? 'span' : 'div',\n                        attrs\n                    ));\n                }\n                break;\n            case 'Text':\n                addChild(node, node.literal);\n                break;\n            case 'Paragraph':\n                tag(node, 'p', attrs);\n                break;\n            case 'Header':\n                tag(node, 'h' + node.level, attrs);\n                break;\n            case 'Softbreak':\n                addChild(node, softBreak);\n                break;\n            case 'Strong':\n                tag(node, 'strong', attrs);\n                break;\n            case 'Link':\n                attrs.href = node.destination;\n                if (node.title) {\n                    attrs.title = node.title;\n                }\n                tag(node, 'a', attrs);\n                break;\n            case 'Image':\n                attrs.src = node.destination;\n                if (node.title) {\n                    attrs.title = node.title;\n                }\n                tag(node, 'img', attrs);\n                break;\n            case 'Emph':\n                tag(node, 'em', attrs);\n                break;\n            case 'Code':\n                addChild(node, createElement(\n                    'code',\n                    attrs,\n                    [node.literal]\n                ));\n                break;\n            case 'CodeBlock':\n                infoWords = node.info ? node.info.split(/ +/) : [];\n                if (infoWords.length > 0 && infoWords[0].length > 0) {\n                    attrs.className = 'language-' + infoWords[0];\n                }\n\n                var code = createElement('code', attrs, [node.literal]);\n                addChild(node, createElement('pre', {}, [code]));\n                break;\n            case 'BlockQuote':\n                tag(node, 'blockquote', attrs);\n                break;\n            case 'List':\n                var start = node.listStart;\n                if (start !== null && start !== 1) {\n                    attrs.start = start.toString();\n                }\n                tag(node, node.listType === 'Bullet' ? 'ul' : 'ol', attrs);\n                break;\n            case 'Item':\n                tag(node, 'li', attrs);\n                break;\n            case 'HorizontalRule':\n                addChild(node, createElement('hr', attrs));\n                break;\n            case 'Document':\n                break;\n            default:\n                throw new Error('Unknown node type \"' + node.type + '\"');\n        }\n    }\n\n    return doc.react.children;\n}\n\nfunction ReactRenderer(options) {\n    var opts = options || {};\n    return {\n        sourcePos: opts.sourcePos,\n        softBreak: opts.softBreak || '\\n',\n        escapeHtml: !!opts.escapeHtml,\n        skipHtml: !!opts.skipHtml,\n        render: renderNodes\n    };\n}\n\nmodule.exports = ReactRenderer;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/commonmark-react-renderer/src/commonmark-react-renderer.js\n ** module id = 18\n ** module chunks = 0\n **/\n//# sourceURL=webpack:///./~/commonmark-react-renderer/src/commonmark-react-renderer.js?");

/***/ }
/******/ ]);